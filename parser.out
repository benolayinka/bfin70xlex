Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT1
    PRNT
    NOT
    NEG
    WHATREG
    LABEL
    COMMENT2

Grammar

Rule 0     S' -> translation
Rule 1     translation -> statement
Rule 2     translation -> translation statement
Rule 3     statement -> asm
Rule 4     asm -> asm_1 SEMICOLON
Rule 5     asm -> parallel_instructions SEMICOLON
Rule 6     asm -> error
Rule 7     asm_1 -> dspalu
Rule 8     asm_1 -> dspmult
Rule 9     asm_1 -> dspshift
Rule 10    asm_1 -> jump
Rule 11    asm_1 -> nop
Rule 12    asm_1 -> idle
Rule 13    asm_1 -> loadstore
Rule 14    asm_1 -> other
Rule 15    parallel_instructions -> asm_1 DOUBLE_BAR asm_1 DOUBLE_BAR asm_1
Rule 16    parallel_instructions -> asm_1 DOUBLE_BAR asm_1
Rule 17    vector_mac -> assign_macfunc opt_mode COMMA assign_macfunc opt_mode
Rule 18    vector_mac -> assign_macfunc opt_mode
Rule 19    dspalu -> comp
Rule 20    dspalu -> loophardware
Rule 21    dspalu -> vector_mac
Rule 22    dspalu -> expadj
Rule 23    dspalu -> deposit
Rule 24    dspalu -> bitlogic
Rule 25    dspalu -> alu2
Rule 26    dspalu -> REG ASSIGN LPAREN a_plusassign REG_A RPAREN
Rule 27    dspalu -> HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN
Rule 28    dspalu -> A_ZERO_DOT_H ASSIGN HALF_REG
Rule 29    dspalu -> A_ONE_DOT_H ASSIGN HALF_REG
Rule 30    dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
Rule 31    dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
Rule 32    dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir
Rule 33    dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN
Rule 34    dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H
Rule 35    dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1
Rule 36    dspalu -> REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1
Rule 37    dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2
Rule 38    dspalu -> REG ASSIGN ABS REG vmod
Rule 39    dspalu -> a_assign ABS REG_A
Rule 40    dspalu -> A_ZERO_DOT_L ASSIGN HALF_REG
Rule 41    dspalu -> A_ONE_DOT_L ASSIGN HALF_REG
Rule 42    dspalu -> REG ASSIGN c_align LPAREN REG COMMA REG RPAREN
Rule 43    dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod
Rule 44    dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN
Rule 45    dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op
Rule 46    dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op
Rule 47    dspalu -> REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN
Rule 48    dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG
Rule 49    dspalu -> REG ASSIGN REG plus_minus REG amod1
Rule 50    dspalu -> REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod
Rule 51    dspalu -> a_assign MINUS REG_A
Rule 52    dspalu -> HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1
Rule 53    dspalu -> a_assign a_assign expr
Rule 54    dspalu -> a_assign REG_A LPAREN S RPAREN
Rule 55    dspalu -> HALF_REG ASSIGN REG LPAREN RND RPAREN
Rule 56    dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN
Rule 57    dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN
Rule 58    dspalu -> a_assign REG_A
Rule 59    dspalu -> a_assign REG
Rule 60    dspalu -> REG ASSIGN HALF_REG xpmod
Rule 61    dspalu -> HALF_REG ASSIGN expr
Rule 62    dspalu -> a_assign expr
Rule 63    dspalu -> REG ASSIGN expr xpmod1
Rule 64    dspalu -> HALF_REG ASSIGN REG
Rule 65    dspalu -> REG ASSIGN REG op_bar_op REG amod0
Rule 66    dspalu -> REG ASSIGN BYTE_DREG xpmod
Rule 67    dspalu -> a_assign ABS REG_A COMMA a_assign ABS REG_A
Rule 68    dspalu -> a_assign MINUS REG_A COMMA a_assign MINUS REG_A
Rule 69    dspalu -> a_minusassign REG_A w32_or_nothing
Rule 70    dspalu -> REG _MINUS_ASSIGN expr
Rule 71    dspalu -> REG _PLUS_ASSIGN REG LPAREN BREV RPAREN
Rule 72    dspalu -> REG _MINUS_ASSIGN REG
Rule 73    dspalu -> REG_A _PLUS_ASSIGN REG_A w32_or_nothing
Rule 74    dspalu -> REG _PLUS_ASSIGN REG
Rule 75    dspalu -> REG _PLUS_ASSIGN expr
Rule 76    dspalu -> REG _STAR_ASSIGN REG
Rule 77    dspalu -> SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
Rule 78    dspalu -> a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN
Rule 79    dspalu -> REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr
Rule 80    comp -> REG ASSIGN REG BAR REG
Rule 81    comp -> REG ASSIGN REG CARET REG
Rule 82    comp -> REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN
Rule 83    comp -> CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A
Rule 84    comp -> CCREG ASSIGN REG_A LESS_THAN REG_A
Rule 85    comp -> CCREG ASSIGN REG LESS_THAN REG iu_or_nothing
Rule 86    comp -> CCREG ASSIGN REG LESS_THAN expr iu_or_nothing
Rule 87    comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN REG
Rule 88    comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN expr
Rule 89    comp -> CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A
Rule 90    comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing
Rule 91    comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing
Rule 92    comp -> REG ASSIGN REG AMPERSAND REG
Rule 93    comp -> ccstat
Rule 94    comp -> REG ASSIGN REG
Rule 95    comp -> CCREG ASSIGN REG
Rule 96    comp -> REG ASSIGN CCREG
Rule 97    comp -> CCREG _ASSIGN_BANG CCREG
Rule 98    dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode
Rule 99    dspmult -> REG ASSIGN multiply_regs opt_mode
Rule 100   dspmult -> REG ASSIGN multiply_halfregs opt_mode
Rule 101   dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode
Rule 102   dspmult -> REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode
Rule 103   dspmult -> a_full_macfunc opt_mode
Rule 104   dspmult -> assign_full_macfunc opt_mode
Rule 105   dspshift -> a_assign ASHIFT REG_A BY HALF_REG
Rule 106   dspshift -> HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod
Rule 107   dspshift -> a_assign REG_A LESS_LESS expr
Rule 108   dspshift -> REG ASSIGN REG LESS_LESS expr vsmod
Rule 109   dspshift -> HALF_REG ASSIGN HALF_REG LESS_LESS expr smod
Rule 110   dspshift -> REG ASSIGN ASHIFT REG BY HALF_REG vsmod
Rule 111   expadj -> HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod
Rule 112   expadj -> HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN
Rule 113   deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN
Rule 114   deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN
Rule 115   deposit -> REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod
Rule 116   deposit -> a_assign REG_A _GREATER_GREATER_GREATER expr
Rule 117   deposit -> a_assign LSHIFT REG_A BY HALF_REG
Rule 118   deposit -> HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG
Rule 119   deposit -> REG ASSIGN LSHIFT REG BY HALF_REG vmod
Rule 120   deposit -> REG ASSIGN SHIFT REG BY HALF_REG
Rule 121   deposit -> a_assign REG_A GREATER_GREATER expr
Rule 122   deposit -> REG ASSIGN REG GREATER_GREATER expr vmod
Rule 123   deposit -> HALF_REG ASSIGN HALF_REG GREATER_GREATER expr
Rule 124   deposit -> HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod
Rule 125   deposit -> REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod
Rule 126   deposit -> HALF_REG ASSIGN ONES REG
Rule 127   deposit -> REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN
Rule 128   deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN
Rule 129   deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN
Rule 130   deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
Rule 131   deposit -> a_assign ROT REG_A BY HALF_REG
Rule 132   deposit -> REG ASSIGN ROT REG BY HALF_REG
Rule 133   deposit -> a_assign ROT REG_A BY expr
Rule 134   deposit -> REG ASSIGN ROT REG BY expr
Rule 135   deposit -> HALF_REG ASSIGN SIGNBITS REG_A
Rule 136   deposit -> HALF_REG ASSIGN SIGNBITS REG
Rule 137   deposit -> HALF_REG ASSIGN SIGNBITS HALF_REG
Rule 138   deposit -> HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl
Rule 139   deposit -> REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl
Rule 140   deposit -> BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl
Rule 141   deposit -> a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
Rule 142   bitlogic -> BITCLR LPAREN REG COMMA expr RPAREN
Rule 143   bitlogic -> BITSET LPAREN REG COMMA expr RPAREN
Rule 144   bitlogic -> BITTGL LPAREN REG COMMA expr RPAREN
Rule 145   jump -> CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN
Rule 146   jump -> return
Rule 147   jump -> CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN
Rule 148   jump -> IF BANG CCREG REG ASSIGN REG
Rule 149   jump -> IF CCREG REG ASSIGN REG
Rule 150   jump -> IF BANG CCREG JUMP expr
Rule 151   jump -> IF BANG CCREG JUMP expr LPAREN BP RPAREN
Rule 152   jump -> IF CCREG JUMP expr
Rule 153   jump -> IF CCREG JUMP expr LPAREN BP RPAREN
Rule 154   jump -> JUMP LPAREN REG RPAREN
Rule 155   jump -> CALL LPAREN REG RPAREN
Rule 156   jump -> CALL LPAREN PC PLUS REG RPAREN
Rule 157   jump -> JUMP LPAREN PC PLUS REG RPAREN
Rule 158   jump -> RAISE expr
Rule 159   jump -> EXCPT expr
Rule 160   jump -> TESTSET LPAREN REG RPAREN
Rule 161   jump -> JUMP expr
Rule 162   jump -> JUMP_DOT_S expr
Rule 163   jump -> JUMP_DOT_L expr
Rule 164   jump -> JUMP_DOT_L pltpc
Rule 165   jump -> CALL expr
Rule 166   jump -> CALL pltpc
Rule 167   return -> RTS
Rule 168   return -> RTI
Rule 169   return -> RTX
Rule 170   return -> RTN
Rule 171   return -> RTE
Rule 172   nop -> NOP
Rule 173   nop -> MNOP
Rule 174   idle -> IDLE
Rule 175   alu2 -> DIVQ LPAREN REG COMMA REG RPAREN
Rule 176   alu2 -> DIVS LPAREN REG COMMA REG RPAREN
Rule 177   alu2 -> REG ASSIGN MINUS REG vsmod
Rule 178   alu2 -> REG ASSIGN TILDA REG
Rule 179   alu2 -> REG _GREATER_GREATER_ASSIGN REG
Rule 180   alu2 -> REG _GREATER_GREATER_ASSIGN expr
Rule 181   alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG
Rule 182   alu2 -> REG _LESS_LESS_ASSIGN REG
Rule 183   alu2 -> REG _LESS_LESS_ASSIGN expr
Rule 184   alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr
Rule 185   cache -> FLUSH LBRACK REG RBRACK
Rule 186   cache -> FLUSH reg_with_postinc
Rule 187   cache -> FLUSHINV LBRACK REG RBRACK
Rule 188   cache -> FLUSHINV reg_with_postinc
Rule 189   cache -> IFLUSH LBRACK REG RBRACK
Rule 190   cache -> IFLUSH reg_with_postinc
Rule 191   cache -> PREFETCH LBRACK REG RBRACK
Rule 192   cache -> PREFETCH reg_with_postinc
Rule 193   loadstore -> pushpopmultiple
Rule 194   loadstore -> B LBRACK REG post_op RBRACK ASSIGN REG
Rule 195   loadstore -> B LBRACK REG plus_minus expr RBRACK ASSIGN REG
Rule 196   loadstore -> W LBRACK REG plus_minus expr RBRACK ASSIGN REG
Rule 197   loadstore -> W LBRACK REG post_op RBRACK ASSIGN REG
Rule 198   loadstore -> W LBRACK REG post_op RBRACK ASSIGN HALF_REG
Rule 199   loadstore -> LBRACK REG plus_minus expr RBRACK ASSIGN REG
Rule 200   loadstore -> REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod
Rule 201   loadstore -> HALF_REG ASSIGN W LBRACK REG post_op RBRACK
Rule 202   loadstore -> REG ASSIGN W LBRACK REG post_op RBRACK xpmod
Rule 203   loadstore -> REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod
Rule 204   loadstore -> HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK
Rule 205   loadstore -> LBRACK REG post_op RBRACK ASSIGN REG
Rule 206   loadstore -> LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG
Rule 207   loadstore -> W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG
Rule 208   loadstore -> REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod
Rule 209   loadstore -> REG ASSIGN B LBRACK REG post_op RBRACK xpmod
Rule 210   loadstore -> REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK
Rule 211   loadstore -> REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK
Rule 212   loadstore -> REG ASSIGN LBRACK REG post_op RBRACK
Rule 213   pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN
Rule 214   pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN
Rule 215   pushpopmultiple -> LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc
Rule 216   pushpopmultiple -> LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc
Rule 217   pushpopmultiple -> reg_with_predec ASSIGN REG
Rule 218   linkage -> LINK expr
Rule 219   linkage -> UNLINK
Rule 220   loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG
Rule 221   loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG
Rule 222   loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr
Rule 223   loophardware -> LOOP expr REG
Rule 224   loophardware -> LOOP expr REG ASSIGN REG
Rule 225   loophardware -> LOOP expr REG ASSIGN REG GREATER_GREATER expr
Rule 226   loophardware -> LOOP_BEGIN NUMBER
Rule 227   loophardware -> LOOP_BEGIN expr
Rule 228   loophardware -> LOOP_END NUMBER
Rule 229   loophardware -> LOOP_END expr
Rule 230   loophardware -> LOOP REG ASSIGN NUMBER
Rule 231   loophardware -> LOOP_END
Rule 232   other -> ABORT
Rule 233   other -> linkage
Rule 234   other -> cache
Rule 235   other -> CSYNC
Rule 236   other -> SSYNC
Rule 237   other -> EMUEXCPT
Rule 238   other -> CLI REG
Rule 239   other -> STI REG
Rule 240   other -> DISALGNEXCPT
Rule 241   other -> DBG
Rule 242   other -> DBG REG_A
Rule 243   other -> DBG REG
Rule 244   other -> DBGCMPLX LPAREN REG RPAREN
Rule 245   other -> DBGHALT
Rule 246   other -> HLT
Rule 247   other -> DBGA LPAREN HALF_REG COMMA expr RPAREN
Rule 248   other -> DBGAH LPAREN REG COMMA expr RPAREN
Rule 249   other -> DBGAL LPAREN REG COMMA expr RPAREN
Rule 250   other -> OUTC expr
Rule 251   other -> OUTC REG
Rule 252   REG_A -> REG_A_DOUBLE_ZERO
Rule 253   REG_A -> REG_A_DOUBLE_ONE
Rule 254   opt_mode -> empty
Rule 255   opt_mode -> LPAREN M COMMA MMOD RPAREN
Rule 256   opt_mode -> LPAREN MMOD COMMA M RPAREN
Rule 257   opt_mode -> LPAREN MMOD RPAREN
Rule 258   opt_mode -> LPAREN M RPAREN
Rule 259   asr_asl -> LPAREN ASL RPAREN
Rule 260   asr_asl -> LPAREN ASR RPAREN
Rule 261   sco -> empty
Rule 262   sco -> S
Rule 263   sco -> CO
Rule 264   sco -> SCO
Rule 265   asr_asl_0 -> ASL
Rule 266   asr_asl_0 -> ASR
Rule 267   amod0 -> empty
Rule 268   amod0 -> LPAREN sco RPAREN
Rule 269   amod1 -> empty
Rule 270   amod1 -> LPAREN NS RPAREN
Rule 271   amod1 -> LPAREN S RPAREN
Rule 272   amod2 -> empty
Rule 273   amod2 -> LPAREN asr_asl_0 RPAREN
Rule 274   amod2 -> LPAREN sco RPAREN
Rule 275   amod2 -> LPAREN asr_asl_0 COMMA sco RPAREN
Rule 276   amod2 -> LPAREN sco COMMA asr_asl_0 RPAREN
Rule 277   xpmod -> empty
Rule 278   xpmod -> LPAREN Z RPAREN
Rule 279   xpmod -> LPAREN X RPAREN
Rule 280   xpmod1 -> empty
Rule 281   xpmod1 -> LPAREN X RPAREN
Rule 282   xpmod1 -> LPAREN Z RPAREN
Rule 283   vsmod -> empty
Rule 284   vsmod -> LPAREN NS RPAREN
Rule 285   vsmod -> LPAREN S RPAREN
Rule 286   vsmod -> LPAREN V RPAREN
Rule 287   vsmod -> LPAREN V COMMA S RPAREN
Rule 288   vsmod -> LPAREN S COMMA V RPAREN
Rule 289   vmod -> empty
Rule 290   vmod -> LPAREN V RPAREN
Rule 291   smod -> empty
Rule 292   smod -> LPAREN S RPAREN
Rule 293   searchmod -> GE
Rule 294   searchmod -> GT
Rule 295   searchmod -> LE
Rule 296   searchmod -> LT
Rule 297   aligndir -> empty
Rule 298   aligndir -> LPAREN R RPAREN
Rule 299   byteop_mod -> LPAREN R RPAREN
Rule 300   byteop_mod -> LPAREN MMOD RPAREN
Rule 301   byteop_mod -> LPAREN MMOD COMMA R RPAREN
Rule 302   byteop_mod -> LPAREN R COMMA MMOD RPAREN
Rule 303   c_align -> ALIGN8
Rule 304   c_align -> ALIGN16
Rule 305   c_align -> ALIGN24
Rule 306   w32_or_nothing -> empty
Rule 307   w32_or_nothing -> LPAREN MMOD RPAREN
Rule 308   iu_or_nothing -> empty
Rule 309   iu_or_nothing -> LPAREN MMOD RPAREN
Rule 310   reg_with_predec -> LBRACK _MINUS_MINUS REG RBRACK
Rule 311   reg_with_postinc -> LBRACK REG _PLUS_PLUS RBRACK
Rule 312   min_max -> MIN
Rule 313   min_max -> MAX
Rule 314   op_bar_op -> _PLUS_BAR_PLUS
Rule 315   op_bar_op -> _PLUS_BAR_MINUS
Rule 316   op_bar_op -> _MINUS_BAR_PLUS
Rule 317   op_bar_op -> _MINUS_BAR_MINUS
Rule 318   plus_minus -> PLUS
Rule 319   plus_minus -> MINUS
Rule 320   rnd_op -> LPAREN RNDH RPAREN
Rule 321   rnd_op -> LPAREN TH RPAREN
Rule 322   rnd_op -> LPAREN RNDL RPAREN
Rule 323   rnd_op -> LPAREN TL RPAREN
Rule 324   rnd_op -> LPAREN RNDH COMMA R RPAREN
Rule 325   rnd_op -> LPAREN TH COMMA R RPAREN
Rule 326   rnd_op -> LPAREN RNDL COMMA R RPAREN
Rule 327   rnd_op -> LPAREN TL COMMA R RPAREN
Rule 328   b3_op -> LPAREN LO RPAREN
Rule 329   b3_op -> LPAREN HI RPAREN
Rule 330   b3_op -> LPAREN LO COMMA R RPAREN
Rule 331   b3_op -> LPAREN HI COMMA R RPAREN
Rule 332   post_op -> empty
Rule 333   post_op -> _PLUS_PLUS
Rule 334   post_op -> _MINUS_MINUS
Rule 335   a_assign -> REG_A ASSIGN
Rule 336   a_minusassign -> REG_A _MINUS_ASSIGN
Rule 337   a_plusassign -> REG_A _PLUS_ASSIGN
Rule 338   assign_macfunc -> REG ASSIGN REG_A
Rule 339   assign_macfunc -> a_macfunc
Rule 340   assign_macfunc -> REG ASSIGN LPAREN a_macfunc RPAREN
Rule 341   assign_macfunc -> HALF_REG ASSIGN LPAREN a_macfunc RPAREN
Rule 342   assign_macfunc -> HALF_REG ASSIGN REG_A
Rule 343   assign_full_macfunc -> REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
Rule 344   assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
Rule 345   assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN multiply_regs
Rule 346   assign_full_macfunc -> REG ASSIGN LPAREN a_full_macfunc RPAREN
Rule 347   assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN
Rule 348   a_macfunc -> a_assign multiply_halfregs
Rule 349   a_macfunc -> a_plusassign multiply_halfregs
Rule 350   a_macfunc -> a_minusassign multiply_halfregs
Rule 351   a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
Rule 352   a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
Rule 353   a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs
Rule 354   multiply_regs -> REG STAR REG
Rule 355   multiply_halfregs -> HALF_REG STAR HALF_REG
Rule 356   cc_op -> ASSIGN
Rule 357   cc_op -> _BAR_ASSIGN
Rule 358   cc_op -> _AMPERSAND_ASSIGN
Rule 359   cc_op -> _CARET_ASSIGN
Rule 360   ccstat -> CCREG cc_op STATUS_REG
Rule 361   ccstat -> CCREG cc_op V
Rule 362   ccstat -> STATUS_REG cc_op CCREG
Rule 363   ccstat -> V cc_op CCREG
Rule 364   symbol -> SYMBOL
Rule 365   any_gotrel -> GOT
Rule 366   any_gotrel -> GOT17M4
Rule 367   any_gotrel -> FUNCDESC_GOT17M4
Rule 368   got -> symbol AT any_gotrel
Rule 369   got_or_expr -> got
Rule 370   got_or_expr -> expr
Rule 371   pltpc -> symbol AT PLTPC
Rule 372   eterm -> NUMBER
Rule 373   eterm -> symbol
Rule 374   eterm -> LPAREN expr_1 RPAREN
Rule 375   eterm -> TILDA expr_1
Rule 376   eterm -> MINUS expr_1
Rule 377   expr -> expr_1
Rule 378   expr_1 -> expr_1 STAR expr_1
Rule 379   expr_1 -> expr_1 SLASH expr_1
Rule 380   expr_1 -> expr_1 PERCENT expr_1
Rule 381   expr_1 -> expr_1 PLUS expr_1
Rule 382   expr_1 -> expr_1 MINUS expr_1
Rule 383   expr_1 -> expr_1 LESS_LESS expr_1
Rule 384   expr_1 -> expr_1 GREATER_GREATER expr_1
Rule 385   expr_1 -> expr_1 AMPERSAND expr_1
Rule 386   expr_1 -> expr_1 CARET expr_1
Rule 387   expr_1 -> expr_1 BAR expr_1
Rule 388   expr_1 -> eterm
Rule 389   empty -> <empty>

Terminals, with rules where they appear

ABORT                : 232
ABS                  : 38 39 67 67
ALIGN16              : 304
ALIGN24              : 305
ALIGN8               : 303
AMPERSAND            : 92 385
ASHIFT               : 105 106 110
ASL                  : 259 265
ASR                  : 260 266
ASSIGN               : 26 27 28 29 30 31 32 33 34 34 35 35 36 36 37 37 38 40 41 42 43 44 45 46 47 48 48 49 50 52 55 56 57 60 61 63 64 65 66 79 80 81 82 83 84 85 86 87 88 89 90 91 92 94 95 96 98 99 100 101 101 102 102 106 108 109 110 111 112 113 114 115 118 119 120 122 123 124 125 126 127 128 128 129 129 130 130 132 134 135 136 137 138 139 147 148 149 177 178 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 221 222 224 225 230 335 338 340 341 342 343 344 345 346 347 351 356
AT                   : 368 371
A_ONE_COLON_ZERO     : 343 344 351 352 353
A_ONE_DOT_H          : 29 34
A_ONE_DOT_L          : 34 41
A_ZERO_DOT_H         : 28 34
A_ZERO_DOT_L         : 34 40
B                    : 194 195 208 209
BANG                 : 148 150 151
BAR                  : 80 387
BITCLR               : 142
BITMUX               : 140
BITSET               : 143
BITTGL               : 144
BITTST               : 145 147
BP                   : 151 153
BREV                 : 71
BXOR                 : 129 130
BXORSHIFT            : 128 141
BY                   : 105 106 110 117 118 119 120 131 132 133 134
BYTEOP16M            : 31
BYTEOP16P            : 30
BYTEOP1P             : 43 44
BYTEOP2P             : 45
BYTEOP3P             : 46
BYTEPACK             : 47
BYTEUNPACK           : 32
BYTE_DREG            : 66
CALL                 : 155 156 165 166
CARET                : 81 386
CCREG                : 83 84 85 86 87 88 89 90 91 95 96 97 97 128 129 130 130 141 145 147 148 149 150 151 152 153 360 361 362 363
CLI                  : 238
CO                   : 263
COLON                : 30 30 31 31 32 43 43 44 44 45 45 46 46 77 77 213 213 214 215 215 216 344 345 347
COMMA                : 17 30 30 31 31 32 33 34 35 36 37 42 43 44 45 46 47 50 67 68 77 78 101 102 111 112 113 114 115 127 128 129 130 130 139 140 140 141 141 142 143 144 145 147 175 176 213 215 220 221 222 247 248 249 255 256 275 276 287 288 301 302 324 325 326 327 330 331
COMMENT1             : 
COMMENT2             : 
CSYNC                : 235
DBG                  : 241 242 243
DBGA                 : 247
DBGAH                : 248
DBGAL                : 249
DBGCMPLX             : 244
DBGHALT              : 245
DEPOSIT              : 113 114
DISALGNEXCPT         : 240
DIVQ                 : 175
DIVS                 : 176
DOUBLE_BAR           : 15 15 16
EMUEXCPT             : 237
EXCPT                : 159
EXPADJ               : 111 112
EXTRACT              : 115
FLUSH                : 185 186
FLUSHINV             : 187 188
FUNCDESC_GOT17M4     : 367
GE                   : 293
GOT                  : 365
GOT17M4              : 366
GREATER_GREATER      : 121 122 123 222 225 384
GT                   : 294
HALF_REG             : 27 28 29 40 41 48 48 48 48 48 48 52 52 52 55 56 57 60 61 64 98 101 101 105 106 106 106 109 109 110 111 111 112 112 112 115 117 118 118 118 119 120 123 123 124 124 126 127 127 128 129 130 131 132 135 136 137 137 138 198 201 204 207 247 341 342 355 355
HI                   : 329 331
HLT                  : 246
IDLE                 : 174
IF                   : 148 149 150 151 152 153
IFLUSH               : 189 190
JUMP                 : 150 151 152 153 154 157 161
JUMP_DOT_L           : 163 164
JUMP_DOT_S           : 162
LABEL                : 
LBRACK               : 185 187 189 191 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 310 311
LE                   : 295
LESS_LESS            : 79 82 107 108 109 383
LESS_THAN            : 84 85 86
LINK                 : 218
LO                   : 328 330
LOOP                 : 223 224 225 230
LOOP_BEGIN           : 226 227
LOOP_END             : 228 229 231
LPAREN               : 26 27 30 30 31 31 32 33 33 42 43 44 45 46 47 48 48 50 54 55 56 57 71 77 78 78 79 82 111 112 113 114 114 115 127 128 129 130 138 139 140 141 142 143 144 145 147 151 153 154 155 156 157 160 175 176 213 214 215 216 220 221 222 244 247 248 249 255 256 257 258 259 260 268 270 271 273 274 275 276 278 279 281 282 284 285 286 287 288 290 292 298 299 300 301 302 307 309 320 321 322 323 324 325 326 327 328 329 330 331 340 341 343 344 344 345 346 347 347 351 352 353 374
LSETUP               : 220 221 222
LSHIFT               : 117 118 119
LT                   : 296
M                    : 255 256 258
MAX                  : 313
MIN                  : 312
MINUS                : 35 51 68 68 177 319 376 382
MMOD                 : 255 256 257 300 301 302 307 309
MNOP                 : 173
NEG                  : 
NOP                  : 172
NOT                  : 
NS                   : 270 284
NUMBER               : 226 228 230 372
ONES                 : 126
OUTC                 : 250 251
PACK                 : 127
PC                   : 156 157
PERCENT              : 380
PLTPC                : 371
PLUS                 : 34 34 35 48 79 82 156 157 318 381
PREFETCH             : 191 192
PRNT                 : 
R                    : 298 299 301 302 324 325 326 327 330 331
RAISE                : 158
RBRACK               : 185 187 189 191 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 310 311
REG                  : 26 30 30 30 30 31 31 31 31 32 32 32 33 33 33 34 34 35 35 36 36 36 36 36 36 37 37 37 37 37 37 38 38 42 42 42 43 43 43 44 44 44 45 45 45 46 46 46 47 47 47 49 49 49 50 50 50 55 56 56 57 57 59 60 63 64 65 65 65 66 70 71 71 72 72 74 74 75 76 76 77 77 79 79 79 80 80 80 81 81 81 82 82 82 85 85 86 87 87 88 90 90 91 92 92 92 94 94 95 96 99 100 102 102 108 108 110 110 111 113 113 113 114 114 114 115 115 119 119 120 120 122 122 125 125 126 127 128 129 132 132 134 134 136 138 139 139 139 140 140 142 143 144 145 147 148 148 149 149 154 155 156 157 160 175 175 176 176 177 177 178 178 179 179 180 181 181 182 182 183 184 185 187 189 191 194 194 195 195 196 196 197 197 198 199 199 200 200 201 202 202 203 203 203 204 204 205 205 206 206 206 207 207 208 208 209 209 210 210 210 211 211 212 212 213 213 214 215 215 216 217 220 221 221 222 222 223 224 224 225 225 230 238 239 243 244 248 249 251 310 311 338 340 343 344 344 345 345 346 347 347 354 354
REG_A_DOUBLE_ONE     : 253
REG_A_DOUBLE_ZERO    : 252
RND                  : 55
RND12                : 56
RND20                : 57
RNDH                 : 320 324
RNDL                 : 322 326
ROT                  : 131 132 133 134
RPAREN               : 26 27 30 30 31 31 32 33 33 42 43 44 45 46 47 48 48 50 54 55 56 57 71 77 78 78 79 82 111 112 113 114 114 115 127 128 129 130 138 139 140 141 142 143 144 145 147 151 153 154 155 156 157 160 175 176 213 214 215 216 220 221 222 244 247 248 249 255 256 257 258 259 260 268 270 271 273 274 275 276 278 279 281 282 284 285 286 287 288 290 292 298 299 300 301 302 307 309 320 321 322 323 324 325 326 327 328 329 330 331 340 341 343 344 344 345 346 347 347 351 352 353 374
RTE                  : 171
RTI                  : 168
RTN                  : 170
RTS                  : 167
RTX                  : 169
S                    : 54 78 78 262 271 285 287 288 292
SAA                  : 77
SCO                  : 264
SEARCH               : 33
SEMICOLON            : 4 5
SHIFT                : 120
SIGN                 : 48 48
SIGNBITS             : 135 136 137
SLASH                : 379
SSYNC                : 236
STAR                 : 48 48 354 355 378
STATUS_REG           : 360 362
STI                  : 239
SYMBOL               : 364
TESTSET              : 160
TH                   : 321 325
TILDA                : 178 375
TL                   : 323 327
UNLINK               : 219
V                    : 286 287 288 290 361 363
VIT_MAX              : 138 139
W                    : 196 197 198 200 201 202 203 204 207
WHATREG              : 
X                    : 114 279 281
Z                    : 278 282
_AMPERSAND_ASSIGN    : 358
_ASSIGN_ASSIGN       : 83 87 88
_ASSIGN_BANG         : 97 145
_BAR_ASSIGN          : 357
_CARET_ASSIGN        : 359
_GREATER_GREATER_ASSIGN : 179 180
_GREATER_GREATER_GREATER : 116 124 125
_GREATER_GREATER_GREATER_THAN_ASSIGN : 181 184
_LESS_LESS_ASSIGN    : 182 183
_LESS_THAN_ASSIGN    : 89 90 91
_MINUS_ASSIGN        : 70 72 336 353
_MINUS_BAR_MINUS     : 317
_MINUS_BAR_PLUS      : 316
_MINUS_MINUS         : 310 334
_PLUS_ASSIGN         : 71 73 74 75 337 352
_PLUS_BAR_MINUS      : 315
_PLUS_BAR_PLUS       : 314
_PLUS_PLUS           : 203 204 206 207 210 311 333
_STAR_ASSIGN         : 76
error                : 6

Nonterminals, with rules where they appear

REG_A                : 26 27 35 35 35 35 39 51 54 58 67 67 68 68 69 73 73 78 78 83 83 84 84 89 89 105 107 116 117 121 128 129 130 130 131 133 135 140 141 141 242 335 336 337 338 342
a_assign             : 39 51 53 53 54 58 59 62 67 67 68 68 78 78 105 107 116 117 121 131 133 141 348
a_full_macfunc       : 103 346 347
a_macfunc            : 339 340 341
a_minusassign        : 69 350
a_plusassign         : 26 27 349
aligndir             : 30 31 32 77
alu2                 : 25
amod0                : 65
amod1                : 35 36 49 52
amod2                : 37
any_gotrel           : 368
asm                  : 3
asm_1                : 4 15 15 15 16 16
asr_asl              : 138 139 140
asr_asl_0            : 273 275 276
assign_full_macfunc  : 104
assign_macfunc       : 17 17 18
b3_op                : 46
bitlogic             : 24
byteop_mod           : 43
c_align              : 42
cache                : 234
cc_op                : 360 361 362 363
ccstat               : 93
comp                 : 19
deposit              : 23
dspalu               : 7
dspmult              : 8
dspshift             : 9
empty                : 254 261 267 269 272 277 280 283 289 291 297 306 308 332
eterm                : 388
expadj               : 22
expr                 : 30 30 31 31 32 43 43 44 44 45 45 46 46 53 61 62 63 70 75 77 77 79 82 86 88 91 107 108 109 116 121 122 123 124 125 133 134 142 143 144 145 147 150 151 152 153 158 159 161 162 163 165 180 183 184 195 196 199 200 208 213 213 214 215 215 216 218 220 220 221 221 222 222 222 223 224 225 225 227 229 247 248 249 250 370
expr_1               : 374 375 376 377 378 378 379 379 380 380 381 381 382 382 383 383 384 384 385 385 386 386 387 387
got                  : 369
got_or_expr          : 211
idle                 : 12
iu_or_nothing        : 85 86 90 91
jump                 : 10
linkage              : 233
loadstore            : 13
loophardware         : 20
min_max              : 50
multiply_halfregs    : 98 100 101 101 102 102 348 349 350
multiply_regs        : 99 345 351 352 353
nop                  : 11
op_bar_op            : 37 37 65
opt_mode             : 17 17 18 98 99 100 101 101 102 102 103 104
other                : 14
parallel_instructions : 5
pltpc                : 164 166
plus_minus           : 36 36 49 52 56 57 195 196 199 200 208 211
post_op              : 194 197 198 201 202 205 209 212
pushpopmultiple      : 193
reg_with_postinc     : 186 188 190 192 215 216
reg_with_predec      : 213 214 217
return               : 146
rnd_op               : 45
sco                  : 268 274 275 276
searchmod            : 33
smod                 : 106 109 124
statement            : 1 2
symbol               : 368 371 373
translation          : 2 0
vector_mac           : 21
vmod                 : 38 50 111 119 122
vsmod                : 108 110 125 177
w32_or_nothing       : 69 73
xpmod                : 60 66 115 200 202 203 208 209
xpmod1               : 63

Parsing method: LALR

state 0

    (0) S' -> . translation
    (1) translation -> . statement
    (2) translation -> . translation statement
    (3) statement -> . asm
    (4) asm -> . asm_1 SEMICOLON
    (5) asm -> . parallel_instructions SEMICOLON
    (6) asm -> . error
    (7) asm_1 -> . dspalu
    (8) asm_1 -> . dspmult
    (9) asm_1 -> . dspshift
    (10) asm_1 -> . jump
    (11) asm_1 -> . nop
    (12) asm_1 -> . idle
    (13) asm_1 -> . loadstore
    (14) asm_1 -> . other
    (15) parallel_instructions -> . asm_1 DOUBLE_BAR asm_1 DOUBLE_BAR asm_1
    (16) parallel_instructions -> . asm_1 DOUBLE_BAR asm_1
    (19) dspalu -> . comp
    (20) dspalu -> . loophardware
    (21) dspalu -> . vector_mac
    (22) dspalu -> . expadj
    (23) dspalu -> . deposit
    (24) dspalu -> . bitlogic
    (25) dspalu -> . alu2
    (26) dspalu -> . REG ASSIGN LPAREN a_plusassign REG_A RPAREN
    (27) dspalu -> . HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN
    (28) dspalu -> . A_ZERO_DOT_H ASSIGN HALF_REG
    (29) dspalu -> . A_ONE_DOT_H ASSIGN HALF_REG
    (30) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN
    (34) dspalu -> . REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H
    (35) dspalu -> . REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1
    (36) dspalu -> . REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1
    (37) dspalu -> . REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2
    (38) dspalu -> . REG ASSIGN ABS REG vmod
    (39) dspalu -> . a_assign ABS REG_A
    (40) dspalu -> . A_ZERO_DOT_L ASSIGN HALF_REG
    (41) dspalu -> . A_ONE_DOT_L ASSIGN HALF_REG
    (42) dspalu -> . REG ASSIGN c_align LPAREN REG COMMA REG RPAREN
    (43) dspalu -> . REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> . REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (45) dspalu -> . REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op
    (46) dspalu -> . REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op
    (47) dspalu -> . REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN
    (48) dspalu -> . HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG
    (49) dspalu -> . REG ASSIGN REG plus_minus REG amod1
    (50) dspalu -> . REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod
    (51) dspalu -> . a_assign MINUS REG_A
    (52) dspalu -> . HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1
    (53) dspalu -> . a_assign a_assign expr
    (54) dspalu -> . a_assign REG_A LPAREN S RPAREN
    (55) dspalu -> . HALF_REG ASSIGN REG LPAREN RND RPAREN
    (56) dspalu -> . HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN
    (57) dspalu -> . HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN
    (58) dspalu -> . a_assign REG_A
    (59) dspalu -> . a_assign REG
    (60) dspalu -> . REG ASSIGN HALF_REG xpmod
    (61) dspalu -> . HALF_REG ASSIGN expr
    (62) dspalu -> . a_assign expr
    (63) dspalu -> . REG ASSIGN expr xpmod1
    (64) dspalu -> . HALF_REG ASSIGN REG
    (65) dspalu -> . REG ASSIGN REG op_bar_op REG amod0
    (66) dspalu -> . REG ASSIGN BYTE_DREG xpmod
    (67) dspalu -> . a_assign ABS REG_A COMMA a_assign ABS REG_A
    (68) dspalu -> . a_assign MINUS REG_A COMMA a_assign MINUS REG_A
    (69) dspalu -> . a_minusassign REG_A w32_or_nothing
    (70) dspalu -> . REG _MINUS_ASSIGN expr
    (71) dspalu -> . REG _PLUS_ASSIGN REG LPAREN BREV RPAREN
    (72) dspalu -> . REG _MINUS_ASSIGN REG
    (73) dspalu -> . REG_A _PLUS_ASSIGN REG_A w32_or_nothing
    (74) dspalu -> . REG _PLUS_ASSIGN REG
    (75) dspalu -> . REG _PLUS_ASSIGN expr
    (76) dspalu -> . REG _STAR_ASSIGN REG
    (77) dspalu -> . SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (78) dspalu -> . a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN
    (79) dspalu -> . REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr
    (98) dspmult -> . HALF_REG ASSIGN multiply_halfregs opt_mode
    (99) dspmult -> . REG ASSIGN multiply_regs opt_mode
    (100) dspmult -> . REG ASSIGN multiply_halfregs opt_mode
    (101) dspmult -> . HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode
    (102) dspmult -> . REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode
    (103) dspmult -> . a_full_macfunc opt_mode
    (104) dspmult -> . assign_full_macfunc opt_mode
    (105) dspshift -> . a_assign ASHIFT REG_A BY HALF_REG
    (106) dspshift -> . HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod
    (107) dspshift -> . a_assign REG_A LESS_LESS expr
    (108) dspshift -> . REG ASSIGN REG LESS_LESS expr vsmod
    (109) dspshift -> . HALF_REG ASSIGN HALF_REG LESS_LESS expr smod
    (110) dspshift -> . REG ASSIGN ASHIFT REG BY HALF_REG vsmod
    (145) jump -> . CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN
    (146) jump -> . return
    (147) jump -> . CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN
    (148) jump -> . IF BANG CCREG REG ASSIGN REG
    (149) jump -> . IF CCREG REG ASSIGN REG
    (150) jump -> . IF BANG CCREG JUMP expr
    (151) jump -> . IF BANG CCREG JUMP expr LPAREN BP RPAREN
    (152) jump -> . IF CCREG JUMP expr
    (153) jump -> . IF CCREG JUMP expr LPAREN BP RPAREN
    (154) jump -> . JUMP LPAREN REG RPAREN
    (155) jump -> . CALL LPAREN REG RPAREN
    (156) jump -> . CALL LPAREN PC PLUS REG RPAREN
    (157) jump -> . JUMP LPAREN PC PLUS REG RPAREN
    (158) jump -> . RAISE expr
    (159) jump -> . EXCPT expr
    (160) jump -> . TESTSET LPAREN REG RPAREN
    (161) jump -> . JUMP expr
    (162) jump -> . JUMP_DOT_S expr
    (163) jump -> . JUMP_DOT_L expr
    (164) jump -> . JUMP_DOT_L pltpc
    (165) jump -> . CALL expr
    (166) jump -> . CALL pltpc
    (172) nop -> . NOP
    (173) nop -> . MNOP
    (174) idle -> . IDLE
    (193) loadstore -> . pushpopmultiple
    (194) loadstore -> . B LBRACK REG post_op RBRACK ASSIGN REG
    (195) loadstore -> . B LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (196) loadstore -> . W LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (197) loadstore -> . W LBRACK REG post_op RBRACK ASSIGN REG
    (198) loadstore -> . W LBRACK REG post_op RBRACK ASSIGN HALF_REG
    (199) loadstore -> . LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (200) loadstore -> . REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod
    (201) loadstore -> . HALF_REG ASSIGN W LBRACK REG post_op RBRACK
    (202) loadstore -> . REG ASSIGN W LBRACK REG post_op RBRACK xpmod
    (203) loadstore -> . REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod
    (204) loadstore -> . HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK
    (205) loadstore -> . LBRACK REG post_op RBRACK ASSIGN REG
    (206) loadstore -> . LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG
    (207) loadstore -> . W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG
    (208) loadstore -> . REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod
    (209) loadstore -> . REG ASSIGN B LBRACK REG post_op RBRACK xpmod
    (210) loadstore -> . REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK
    (211) loadstore -> . REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK
    (212) loadstore -> . REG ASSIGN LBRACK REG post_op RBRACK
    (232) other -> . ABORT
    (233) other -> . linkage
    (234) other -> . cache
    (235) other -> . CSYNC
    (236) other -> . SSYNC
    (237) other -> . EMUEXCPT
    (238) other -> . CLI REG
    (239) other -> . STI REG
    (240) other -> . DISALGNEXCPT
    (241) other -> . DBG
    (242) other -> . DBG REG_A
    (243) other -> . DBG REG
    (244) other -> . DBGCMPLX LPAREN REG RPAREN
    (245) other -> . DBGHALT
    (246) other -> . HLT
    (247) other -> . DBGA LPAREN HALF_REG COMMA expr RPAREN
    (248) other -> . DBGAH LPAREN REG COMMA expr RPAREN
    (249) other -> . DBGAL LPAREN REG COMMA expr RPAREN
    (250) other -> . OUTC expr
    (251) other -> . OUTC REG
    (80) comp -> . REG ASSIGN REG BAR REG
    (81) comp -> . REG ASSIGN REG CARET REG
    (82) comp -> . REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN
    (83) comp -> . CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A
    (84) comp -> . CCREG ASSIGN REG_A LESS_THAN REG_A
    (85) comp -> . CCREG ASSIGN REG LESS_THAN REG iu_or_nothing
    (86) comp -> . CCREG ASSIGN REG LESS_THAN expr iu_or_nothing
    (87) comp -> . CCREG ASSIGN REG _ASSIGN_ASSIGN REG
    (88) comp -> . CCREG ASSIGN REG _ASSIGN_ASSIGN expr
    (89) comp -> . CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A
    (90) comp -> . CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing
    (91) comp -> . CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing
    (92) comp -> . REG ASSIGN REG AMPERSAND REG
    (93) comp -> . ccstat
    (94) comp -> . REG ASSIGN REG
    (95) comp -> . CCREG ASSIGN REG
    (96) comp -> . REG ASSIGN CCREG
    (97) comp -> . CCREG _ASSIGN_BANG CCREG
    (220) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG
    (221) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG
    (222) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr
    (223) loophardware -> . LOOP expr REG
    (224) loophardware -> . LOOP expr REG ASSIGN REG
    (225) loophardware -> . LOOP expr REG ASSIGN REG GREATER_GREATER expr
    (226) loophardware -> . LOOP_BEGIN NUMBER
    (227) loophardware -> . LOOP_BEGIN expr
    (228) loophardware -> . LOOP_END NUMBER
    (229) loophardware -> . LOOP_END expr
    (230) loophardware -> . LOOP REG ASSIGN NUMBER
    (231) loophardware -> . LOOP_END
    (17) vector_mac -> . assign_macfunc opt_mode COMMA assign_macfunc opt_mode
    (18) vector_mac -> . assign_macfunc opt_mode
    (111) expadj -> . HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod
    (112) expadj -> . HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN
    (113) deposit -> . REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN
    (114) deposit -> . REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN
    (115) deposit -> . REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod
    (116) deposit -> . a_assign REG_A _GREATER_GREATER_GREATER expr
    (117) deposit -> . a_assign LSHIFT REG_A BY HALF_REG
    (118) deposit -> . HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG
    (119) deposit -> . REG ASSIGN LSHIFT REG BY HALF_REG vmod
    (120) deposit -> . REG ASSIGN SHIFT REG BY HALF_REG
    (121) deposit -> . a_assign REG_A GREATER_GREATER expr
    (122) deposit -> . REG ASSIGN REG GREATER_GREATER expr vmod
    (123) deposit -> . HALF_REG ASSIGN HALF_REG GREATER_GREATER expr
    (124) deposit -> . HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod
    (125) deposit -> . REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod
    (126) deposit -> . HALF_REG ASSIGN ONES REG
    (127) deposit -> . REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN
    (128) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN
    (129) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN
    (130) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (131) deposit -> . a_assign ROT REG_A BY HALF_REG
    (132) deposit -> . REG ASSIGN ROT REG BY HALF_REG
    (133) deposit -> . a_assign ROT REG_A BY expr
    (134) deposit -> . REG ASSIGN ROT REG BY expr
    (135) deposit -> . HALF_REG ASSIGN SIGNBITS REG_A
    (136) deposit -> . HALF_REG ASSIGN SIGNBITS REG
    (137) deposit -> . HALF_REG ASSIGN SIGNBITS HALF_REG
    (138) deposit -> . HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl
    (139) deposit -> . REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl
    (140) deposit -> . BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl
    (141) deposit -> . a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (142) bitlogic -> . BITCLR LPAREN REG COMMA expr RPAREN
    (143) bitlogic -> . BITSET LPAREN REG COMMA expr RPAREN
    (144) bitlogic -> . BITTGL LPAREN REG COMMA expr RPAREN
    (175) alu2 -> . DIVQ LPAREN REG COMMA REG RPAREN
    (176) alu2 -> . DIVS LPAREN REG COMMA REG RPAREN
    (177) alu2 -> . REG ASSIGN MINUS REG vsmod
    (178) alu2 -> . REG ASSIGN TILDA REG
    (179) alu2 -> . REG _GREATER_GREATER_ASSIGN REG
    (180) alu2 -> . REG _GREATER_GREATER_ASSIGN expr
    (181) alu2 -> . REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG
    (182) alu2 -> . REG _LESS_LESS_ASSIGN REG
    (183) alu2 -> . REG _LESS_LESS_ASSIGN expr
    (184) alu2 -> . REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr
    (335) a_assign -> . REG_A ASSIGN
    (336) a_minusassign -> . REG_A _MINUS_ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (351) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs
    (343) assign_full_macfunc -> . REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (344) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN multiply_regs
    (346) assign_full_macfunc -> . REG ASSIGN LPAREN a_full_macfunc RPAREN
    (347) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN
    (167) return -> . RTS
    (168) return -> . RTI
    (169) return -> . RTX
    (170) return -> . RTN
    (171) return -> . RTE
    (213) pushpopmultiple -> . reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> . reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN
    (215) pushpopmultiple -> . LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc
    (216) pushpopmultiple -> . LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc
    (217) pushpopmultiple -> . reg_with_predec ASSIGN REG
    (218) linkage -> . LINK expr
    (219) linkage -> . UNLINK
    (185) cache -> . FLUSH LBRACK REG RBRACK
    (186) cache -> . FLUSH reg_with_postinc
    (187) cache -> . FLUSHINV LBRACK REG RBRACK
    (188) cache -> . FLUSHINV reg_with_postinc
    (189) cache -> . IFLUSH LBRACK REG RBRACK
    (190) cache -> . IFLUSH reg_with_postinc
    (191) cache -> . PREFETCH LBRACK REG RBRACK
    (192) cache -> . PREFETCH reg_with_postinc
    (360) ccstat -> . CCREG cc_op STATUS_REG
    (361) ccstat -> . CCREG cc_op V
    (362) ccstat -> . STATUS_REG cc_op CCREG
    (363) ccstat -> . V cc_op CCREG
    (338) assign_macfunc -> . REG ASSIGN REG_A
    (339) assign_macfunc -> . a_macfunc
    (340) assign_macfunc -> . REG ASSIGN LPAREN a_macfunc RPAREN
    (341) assign_macfunc -> . HALF_REG ASSIGN LPAREN a_macfunc RPAREN
    (342) assign_macfunc -> . HALF_REG ASSIGN REG_A
    (310) reg_with_predec -> . LBRACK _MINUS_MINUS REG RBRACK
    (348) a_macfunc -> . a_assign multiply_halfregs
    (349) a_macfunc -> . a_plusassign multiply_halfregs
    (350) a_macfunc -> . a_minusassign multiply_halfregs
    (337) a_plusassign -> . REG_A _PLUS_ASSIGN

    error           shift and go to state 74
    REG             shift and go to state 57
    HALF_REG        shift and go to state 32
    A_ZERO_DOT_H    shift and go to state 3
    A_ONE_DOT_H     shift and go to state 11
    LPAREN          shift and go to state 89
    A_ZERO_DOT_L    shift and go to state 2
    A_ONE_DOT_L     shift and go to state 9
    SAA             shift and go to state 53
    CCREG           shift and go to state 41
    IF              shift and go to state 62
    JUMP            shift and go to state 68
    CALL            shift and go to state 96
    RAISE           shift and go to state 54
    EXCPT           shift and go to state 78
    TESTSET         shift and go to state 76
    JUMP_DOT_S      shift and go to state 91
    JUMP_DOT_L      shift and go to state 98
    NOP             shift and go to state 52
    MNOP            shift and go to state 66
    IDLE            shift and go to state 59
    B               shift and go to state 64
    W               shift and go to state 44
    LBRACK          shift and go to state 48
    ABORT           shift and go to state 26
    CSYNC           shift and go to state 92
    SSYNC           shift and go to state 61
    EMUEXCPT        shift and go to state 4
    CLI             shift and go to state 80
    STI             shift and go to state 87
    DISALGNEXCPT    shift and go to state 40
    DBG             shift and go to state 25
    DBGCMPLX        shift and go to state 18
    DBGHALT         shift and go to state 86
    HLT             shift and go to state 47
    DBGA            shift and go to state 29
    DBGAH           shift and go to state 84
    DBGAL           shift and go to state 79
    OUTC            shift and go to state 17
    LSETUP          shift and go to state 67
    LOOP            shift and go to state 51
    LOOP_BEGIN      shift and go to state 38
    LOOP_END        shift and go to state 46
    BITMUX          shift and go to state 82
    BITCLR          shift and go to state 93
    BITSET          shift and go to state 70
    BITTGL          shift and go to state 22
    DIVQ            shift and go to state 72
    DIVS            shift and go to state 71
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    RTS             shift and go to state 21
    RTI             shift and go to state 1
    RTX             shift and go to state 39
    RTN             shift and go to state 35
    RTE             shift and go to state 85
    LINK            shift and go to state 94
    UNLINK          shift and go to state 33
    FLUSH           shift and go to state 43
    FLUSHINV        shift and go to state 24
    IFLUSH          shift and go to state 69
    PREFETCH        shift and go to state 63
    STATUS_REG      shift and go to state 56
    V               shift and go to state 14

    cache                          shift and go to state 10
    REG_A                          shift and go to state 28
    jump                           shift and go to state 30
    reg_with_predec                shift and go to state 81
    pushpopmultiple                shift and go to state 55
    dspmult                        shift and go to state 5
    dspshift                       shift and go to state 31
    ccstat                         shift and go to state 6
    vector_mac                     shift and go to state 7
    parallel_instructions          shift and go to state 34
    dspalu                         shift and go to state 58
    asm_1                          shift and go to state 36
    idle                           shift and go to state 73
    linkage                        shift and go to state 60
    other                          shift and go to state 83
    expadj                         shift and go to state 12
    assign_macfunc                 shift and go to state 77
    return                         shift and go to state 15
    statement                      shift and go to state 65
    comp                           shift and go to state 42
    a_assign                       shift and go to state 88
    translation                    shift and go to state 16
    a_plusassign                   shift and go to state 8
    nop                            shift and go to state 19
    bitlogic                       shift and go to state 20
    asm                            shift and go to state 45
    loadstore                      shift and go to state 23
    a_minusassign                  shift and go to state 37
    loophardware                   shift and go to state 95
    a_full_macfunc                 shift and go to state 49
    assign_full_macfunc            shift and go to state 50
    deposit                        shift and go to state 97
    a_macfunc                      shift and go to state 75
    alu2                           shift and go to state 27

state 1

    (168) return -> RTI .

    SEMICOLON       reduce using rule 168 (return -> RTI .)
    DOUBLE_BAR      reduce using rule 168 (return -> RTI .)


state 2

    (40) dspalu -> A_ZERO_DOT_L . ASSIGN HALF_REG

    ASSIGN          shift and go to state 99


state 3

    (28) dspalu -> A_ZERO_DOT_H . ASSIGN HALF_REG

    ASSIGN          shift and go to state 100


state 4

    (237) other -> EMUEXCPT .

    SEMICOLON       reduce using rule 237 (other -> EMUEXCPT .)
    DOUBLE_BAR      reduce using rule 237 (other -> EMUEXCPT .)


state 5

    (8) asm_1 -> dspmult .

    SEMICOLON       reduce using rule 8 (asm_1 -> dspmult .)
    DOUBLE_BAR      reduce using rule 8 (asm_1 -> dspmult .)


state 6

    (93) comp -> ccstat .

    SEMICOLON       reduce using rule 93 (comp -> ccstat .)
    DOUBLE_BAR      reduce using rule 93 (comp -> ccstat .)


state 7

    (21) dspalu -> vector_mac .

    SEMICOLON       reduce using rule 21 (dspalu -> vector_mac .)
    DOUBLE_BAR      reduce using rule 21 (dspalu -> vector_mac .)


state 8

    (349) a_macfunc -> a_plusassign . multiply_halfregs
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG

    HALF_REG        shift and go to state 101

    multiply_halfregs              shift and go to state 102

state 9

    (41) dspalu -> A_ONE_DOT_L . ASSIGN HALF_REG

    ASSIGN          shift and go to state 103


state 10

    (234) other -> cache .

    SEMICOLON       reduce using rule 234 (other -> cache .)
    DOUBLE_BAR      reduce using rule 234 (other -> cache .)


state 11

    (29) dspalu -> A_ONE_DOT_H . ASSIGN HALF_REG

    ASSIGN          shift and go to state 104


state 12

    (22) dspalu -> expadj .

    SEMICOLON       reduce using rule 22 (dspalu -> expadj .)
    DOUBLE_BAR      reduce using rule 22 (dspalu -> expadj .)


state 13

    (253) REG_A -> REG_A_DOUBLE_ONE .

    SEMICOLON       reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    DOUBLE_BAR      reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    COMMA           reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    ASSIGN          reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    _PLUS_ASSIGN    reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    _MINUS_ASSIGN   reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    LPAREN          reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    BY              reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    RPAREN          reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    _ASSIGN_ASSIGN  reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    LESS_THAN       reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    _LESS_THAN_ASSIGN reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    LESS_LESS       reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    _GREATER_GREATER_GREATER reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    GREATER_GREATER reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    PLUS            reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)
    MINUS           reduce using rule 253 (REG_A -> REG_A_DOUBLE_ONE .)


state 14

    (363) ccstat -> V . cc_op CCREG
    (356) cc_op -> . ASSIGN
    (357) cc_op -> . _BAR_ASSIGN
    (358) cc_op -> . _AMPERSAND_ASSIGN
    (359) cc_op -> . _CARET_ASSIGN

    ASSIGN          shift and go to state 109
    _BAR_ASSIGN     shift and go to state 105
    _AMPERSAND_ASSIGN shift and go to state 106
    _CARET_ASSIGN   shift and go to state 108

    cc_op                          shift and go to state 107

state 15

    (146) jump -> return .

    SEMICOLON       reduce using rule 146 (jump -> return .)
    DOUBLE_BAR      reduce using rule 146 (jump -> return .)


state 16

    (0) S' -> translation .
    (2) translation -> translation . statement
    (3) statement -> . asm
    (4) asm -> . asm_1 SEMICOLON
    (5) asm -> . parallel_instructions SEMICOLON
    (6) asm -> . error
    (7) asm_1 -> . dspalu
    (8) asm_1 -> . dspmult
    (9) asm_1 -> . dspshift
    (10) asm_1 -> . jump
    (11) asm_1 -> . nop
    (12) asm_1 -> . idle
    (13) asm_1 -> . loadstore
    (14) asm_1 -> . other
    (15) parallel_instructions -> . asm_1 DOUBLE_BAR asm_1 DOUBLE_BAR asm_1
    (16) parallel_instructions -> . asm_1 DOUBLE_BAR asm_1
    (19) dspalu -> . comp
    (20) dspalu -> . loophardware
    (21) dspalu -> . vector_mac
    (22) dspalu -> . expadj
    (23) dspalu -> . deposit
    (24) dspalu -> . bitlogic
    (25) dspalu -> . alu2
    (26) dspalu -> . REG ASSIGN LPAREN a_plusassign REG_A RPAREN
    (27) dspalu -> . HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN
    (28) dspalu -> . A_ZERO_DOT_H ASSIGN HALF_REG
    (29) dspalu -> . A_ONE_DOT_H ASSIGN HALF_REG
    (30) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN
    (34) dspalu -> . REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H
    (35) dspalu -> . REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1
    (36) dspalu -> . REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1
    (37) dspalu -> . REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2
    (38) dspalu -> . REG ASSIGN ABS REG vmod
    (39) dspalu -> . a_assign ABS REG_A
    (40) dspalu -> . A_ZERO_DOT_L ASSIGN HALF_REG
    (41) dspalu -> . A_ONE_DOT_L ASSIGN HALF_REG
    (42) dspalu -> . REG ASSIGN c_align LPAREN REG COMMA REG RPAREN
    (43) dspalu -> . REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> . REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (45) dspalu -> . REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op
    (46) dspalu -> . REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op
    (47) dspalu -> . REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN
    (48) dspalu -> . HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG
    (49) dspalu -> . REG ASSIGN REG plus_minus REG amod1
    (50) dspalu -> . REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod
    (51) dspalu -> . a_assign MINUS REG_A
    (52) dspalu -> . HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1
    (53) dspalu -> . a_assign a_assign expr
    (54) dspalu -> . a_assign REG_A LPAREN S RPAREN
    (55) dspalu -> . HALF_REG ASSIGN REG LPAREN RND RPAREN
    (56) dspalu -> . HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN
    (57) dspalu -> . HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN
    (58) dspalu -> . a_assign REG_A
    (59) dspalu -> . a_assign REG
    (60) dspalu -> . REG ASSIGN HALF_REG xpmod
    (61) dspalu -> . HALF_REG ASSIGN expr
    (62) dspalu -> . a_assign expr
    (63) dspalu -> . REG ASSIGN expr xpmod1
    (64) dspalu -> . HALF_REG ASSIGN REG
    (65) dspalu -> . REG ASSIGN REG op_bar_op REG amod0
    (66) dspalu -> . REG ASSIGN BYTE_DREG xpmod
    (67) dspalu -> . a_assign ABS REG_A COMMA a_assign ABS REG_A
    (68) dspalu -> . a_assign MINUS REG_A COMMA a_assign MINUS REG_A
    (69) dspalu -> . a_minusassign REG_A w32_or_nothing
    (70) dspalu -> . REG _MINUS_ASSIGN expr
    (71) dspalu -> . REG _PLUS_ASSIGN REG LPAREN BREV RPAREN
    (72) dspalu -> . REG _MINUS_ASSIGN REG
    (73) dspalu -> . REG_A _PLUS_ASSIGN REG_A w32_or_nothing
    (74) dspalu -> . REG _PLUS_ASSIGN REG
    (75) dspalu -> . REG _PLUS_ASSIGN expr
    (76) dspalu -> . REG _STAR_ASSIGN REG
    (77) dspalu -> . SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (78) dspalu -> . a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN
    (79) dspalu -> . REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr
    (98) dspmult -> . HALF_REG ASSIGN multiply_halfregs opt_mode
    (99) dspmult -> . REG ASSIGN multiply_regs opt_mode
    (100) dspmult -> . REG ASSIGN multiply_halfregs opt_mode
    (101) dspmult -> . HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode
    (102) dspmult -> . REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode
    (103) dspmult -> . a_full_macfunc opt_mode
    (104) dspmult -> . assign_full_macfunc opt_mode
    (105) dspshift -> . a_assign ASHIFT REG_A BY HALF_REG
    (106) dspshift -> . HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod
    (107) dspshift -> . a_assign REG_A LESS_LESS expr
    (108) dspshift -> . REG ASSIGN REG LESS_LESS expr vsmod
    (109) dspshift -> . HALF_REG ASSIGN HALF_REG LESS_LESS expr smod
    (110) dspshift -> . REG ASSIGN ASHIFT REG BY HALF_REG vsmod
    (145) jump -> . CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN
    (146) jump -> . return
    (147) jump -> . CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN
    (148) jump -> . IF BANG CCREG REG ASSIGN REG
    (149) jump -> . IF CCREG REG ASSIGN REG
    (150) jump -> . IF BANG CCREG JUMP expr
    (151) jump -> . IF BANG CCREG JUMP expr LPAREN BP RPAREN
    (152) jump -> . IF CCREG JUMP expr
    (153) jump -> . IF CCREG JUMP expr LPAREN BP RPAREN
    (154) jump -> . JUMP LPAREN REG RPAREN
    (155) jump -> . CALL LPAREN REG RPAREN
    (156) jump -> . CALL LPAREN PC PLUS REG RPAREN
    (157) jump -> . JUMP LPAREN PC PLUS REG RPAREN
    (158) jump -> . RAISE expr
    (159) jump -> . EXCPT expr
    (160) jump -> . TESTSET LPAREN REG RPAREN
    (161) jump -> . JUMP expr
    (162) jump -> . JUMP_DOT_S expr
    (163) jump -> . JUMP_DOT_L expr
    (164) jump -> . JUMP_DOT_L pltpc
    (165) jump -> . CALL expr
    (166) jump -> . CALL pltpc
    (172) nop -> . NOP
    (173) nop -> . MNOP
    (174) idle -> . IDLE
    (193) loadstore -> . pushpopmultiple
    (194) loadstore -> . B LBRACK REG post_op RBRACK ASSIGN REG
    (195) loadstore -> . B LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (196) loadstore -> . W LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (197) loadstore -> . W LBRACK REG post_op RBRACK ASSIGN REG
    (198) loadstore -> . W LBRACK REG post_op RBRACK ASSIGN HALF_REG
    (199) loadstore -> . LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (200) loadstore -> . REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod
    (201) loadstore -> . HALF_REG ASSIGN W LBRACK REG post_op RBRACK
    (202) loadstore -> . REG ASSIGN W LBRACK REG post_op RBRACK xpmod
    (203) loadstore -> . REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod
    (204) loadstore -> . HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK
    (205) loadstore -> . LBRACK REG post_op RBRACK ASSIGN REG
    (206) loadstore -> . LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG
    (207) loadstore -> . W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG
    (208) loadstore -> . REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod
    (209) loadstore -> . REG ASSIGN B LBRACK REG post_op RBRACK xpmod
    (210) loadstore -> . REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK
    (211) loadstore -> . REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK
    (212) loadstore -> . REG ASSIGN LBRACK REG post_op RBRACK
    (232) other -> . ABORT
    (233) other -> . linkage
    (234) other -> . cache
    (235) other -> . CSYNC
    (236) other -> . SSYNC
    (237) other -> . EMUEXCPT
    (238) other -> . CLI REG
    (239) other -> . STI REG
    (240) other -> . DISALGNEXCPT
    (241) other -> . DBG
    (242) other -> . DBG REG_A
    (243) other -> . DBG REG
    (244) other -> . DBGCMPLX LPAREN REG RPAREN
    (245) other -> . DBGHALT
    (246) other -> . HLT
    (247) other -> . DBGA LPAREN HALF_REG COMMA expr RPAREN
    (248) other -> . DBGAH LPAREN REG COMMA expr RPAREN
    (249) other -> . DBGAL LPAREN REG COMMA expr RPAREN
    (250) other -> . OUTC expr
    (251) other -> . OUTC REG
    (80) comp -> . REG ASSIGN REG BAR REG
    (81) comp -> . REG ASSIGN REG CARET REG
    (82) comp -> . REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN
    (83) comp -> . CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A
    (84) comp -> . CCREG ASSIGN REG_A LESS_THAN REG_A
    (85) comp -> . CCREG ASSIGN REG LESS_THAN REG iu_or_nothing
    (86) comp -> . CCREG ASSIGN REG LESS_THAN expr iu_or_nothing
    (87) comp -> . CCREG ASSIGN REG _ASSIGN_ASSIGN REG
    (88) comp -> . CCREG ASSIGN REG _ASSIGN_ASSIGN expr
    (89) comp -> . CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A
    (90) comp -> . CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing
    (91) comp -> . CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing
    (92) comp -> . REG ASSIGN REG AMPERSAND REG
    (93) comp -> . ccstat
    (94) comp -> . REG ASSIGN REG
    (95) comp -> . CCREG ASSIGN REG
    (96) comp -> . REG ASSIGN CCREG
    (97) comp -> . CCREG _ASSIGN_BANG CCREG
    (220) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG
    (221) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG
    (222) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr
    (223) loophardware -> . LOOP expr REG
    (224) loophardware -> . LOOP expr REG ASSIGN REG
    (225) loophardware -> . LOOP expr REG ASSIGN REG GREATER_GREATER expr
    (226) loophardware -> . LOOP_BEGIN NUMBER
    (227) loophardware -> . LOOP_BEGIN expr
    (228) loophardware -> . LOOP_END NUMBER
    (229) loophardware -> . LOOP_END expr
    (230) loophardware -> . LOOP REG ASSIGN NUMBER
    (231) loophardware -> . LOOP_END
    (17) vector_mac -> . assign_macfunc opt_mode COMMA assign_macfunc opt_mode
    (18) vector_mac -> . assign_macfunc opt_mode
    (111) expadj -> . HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod
    (112) expadj -> . HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN
    (113) deposit -> . REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN
    (114) deposit -> . REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN
    (115) deposit -> . REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod
    (116) deposit -> . a_assign REG_A _GREATER_GREATER_GREATER expr
    (117) deposit -> . a_assign LSHIFT REG_A BY HALF_REG
    (118) deposit -> . HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG
    (119) deposit -> . REG ASSIGN LSHIFT REG BY HALF_REG vmod
    (120) deposit -> . REG ASSIGN SHIFT REG BY HALF_REG
    (121) deposit -> . a_assign REG_A GREATER_GREATER expr
    (122) deposit -> . REG ASSIGN REG GREATER_GREATER expr vmod
    (123) deposit -> . HALF_REG ASSIGN HALF_REG GREATER_GREATER expr
    (124) deposit -> . HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod
    (125) deposit -> . REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod
    (126) deposit -> . HALF_REG ASSIGN ONES REG
    (127) deposit -> . REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN
    (128) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN
    (129) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN
    (130) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (131) deposit -> . a_assign ROT REG_A BY HALF_REG
    (132) deposit -> . REG ASSIGN ROT REG BY HALF_REG
    (133) deposit -> . a_assign ROT REG_A BY expr
    (134) deposit -> . REG ASSIGN ROT REG BY expr
    (135) deposit -> . HALF_REG ASSIGN SIGNBITS REG_A
    (136) deposit -> . HALF_REG ASSIGN SIGNBITS REG
    (137) deposit -> . HALF_REG ASSIGN SIGNBITS HALF_REG
    (138) deposit -> . HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl
    (139) deposit -> . REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl
    (140) deposit -> . BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl
    (141) deposit -> . a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (142) bitlogic -> . BITCLR LPAREN REG COMMA expr RPAREN
    (143) bitlogic -> . BITSET LPAREN REG COMMA expr RPAREN
    (144) bitlogic -> . BITTGL LPAREN REG COMMA expr RPAREN
    (175) alu2 -> . DIVQ LPAREN REG COMMA REG RPAREN
    (176) alu2 -> . DIVS LPAREN REG COMMA REG RPAREN
    (177) alu2 -> . REG ASSIGN MINUS REG vsmod
    (178) alu2 -> . REG ASSIGN TILDA REG
    (179) alu2 -> . REG _GREATER_GREATER_ASSIGN REG
    (180) alu2 -> . REG _GREATER_GREATER_ASSIGN expr
    (181) alu2 -> . REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG
    (182) alu2 -> . REG _LESS_LESS_ASSIGN REG
    (183) alu2 -> . REG _LESS_LESS_ASSIGN expr
    (184) alu2 -> . REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr
    (335) a_assign -> . REG_A ASSIGN
    (336) a_minusassign -> . REG_A _MINUS_ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (351) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs
    (343) assign_full_macfunc -> . REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (344) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN multiply_regs
    (346) assign_full_macfunc -> . REG ASSIGN LPAREN a_full_macfunc RPAREN
    (347) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN
    (167) return -> . RTS
    (168) return -> . RTI
    (169) return -> . RTX
    (170) return -> . RTN
    (171) return -> . RTE
    (213) pushpopmultiple -> . reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> . reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN
    (215) pushpopmultiple -> . LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc
    (216) pushpopmultiple -> . LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc
    (217) pushpopmultiple -> . reg_with_predec ASSIGN REG
    (218) linkage -> . LINK expr
    (219) linkage -> . UNLINK
    (185) cache -> . FLUSH LBRACK REG RBRACK
    (186) cache -> . FLUSH reg_with_postinc
    (187) cache -> . FLUSHINV LBRACK REG RBRACK
    (188) cache -> . FLUSHINV reg_with_postinc
    (189) cache -> . IFLUSH LBRACK REG RBRACK
    (190) cache -> . IFLUSH reg_with_postinc
    (191) cache -> . PREFETCH LBRACK REG RBRACK
    (192) cache -> . PREFETCH reg_with_postinc
    (360) ccstat -> . CCREG cc_op STATUS_REG
    (361) ccstat -> . CCREG cc_op V
    (362) ccstat -> . STATUS_REG cc_op CCREG
    (363) ccstat -> . V cc_op CCREG
    (338) assign_macfunc -> . REG ASSIGN REG_A
    (339) assign_macfunc -> . a_macfunc
    (340) assign_macfunc -> . REG ASSIGN LPAREN a_macfunc RPAREN
    (341) assign_macfunc -> . HALF_REG ASSIGN LPAREN a_macfunc RPAREN
    (342) assign_macfunc -> . HALF_REG ASSIGN REG_A
    (310) reg_with_predec -> . LBRACK _MINUS_MINUS REG RBRACK
    (348) a_macfunc -> . a_assign multiply_halfregs
    (349) a_macfunc -> . a_plusassign multiply_halfregs
    (350) a_macfunc -> . a_minusassign multiply_halfregs
    (337) a_plusassign -> . REG_A _PLUS_ASSIGN

    error           shift and go to state 74
    REG             shift and go to state 57
    HALF_REG        shift and go to state 32
    A_ZERO_DOT_H    shift and go to state 3
    A_ONE_DOT_H     shift and go to state 11
    LPAREN          shift and go to state 89
    A_ZERO_DOT_L    shift and go to state 2
    A_ONE_DOT_L     shift and go to state 9
    SAA             shift and go to state 53
    CCREG           shift and go to state 41
    IF              shift and go to state 62
    JUMP            shift and go to state 68
    CALL            shift and go to state 96
    RAISE           shift and go to state 54
    EXCPT           shift and go to state 78
    TESTSET         shift and go to state 76
    JUMP_DOT_S      shift and go to state 91
    JUMP_DOT_L      shift and go to state 98
    NOP             shift and go to state 52
    MNOP            shift and go to state 66
    IDLE            shift and go to state 59
    B               shift and go to state 64
    W               shift and go to state 44
    LBRACK          shift and go to state 48
    ABORT           shift and go to state 26
    CSYNC           shift and go to state 92
    SSYNC           shift and go to state 61
    EMUEXCPT        shift and go to state 4
    CLI             shift and go to state 80
    STI             shift and go to state 87
    DISALGNEXCPT    shift and go to state 40
    DBG             shift and go to state 25
    DBGCMPLX        shift and go to state 18
    DBGHALT         shift and go to state 86
    HLT             shift and go to state 47
    DBGA            shift and go to state 29
    DBGAH           shift and go to state 84
    DBGAL           shift and go to state 79
    OUTC            shift and go to state 17
    LSETUP          shift and go to state 67
    LOOP            shift and go to state 51
    LOOP_BEGIN      shift and go to state 38
    LOOP_END        shift and go to state 46
    BITMUX          shift and go to state 82
    BITCLR          shift and go to state 93
    BITSET          shift and go to state 70
    BITTGL          shift and go to state 22
    DIVQ            shift and go to state 72
    DIVS            shift and go to state 71
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    RTS             shift and go to state 21
    RTI             shift and go to state 1
    RTX             shift and go to state 39
    RTN             shift and go to state 35
    RTE             shift and go to state 85
    LINK            shift and go to state 94
    UNLINK          shift and go to state 33
    FLUSH           shift and go to state 43
    FLUSHINV        shift and go to state 24
    IFLUSH          shift and go to state 69
    PREFETCH        shift and go to state 63
    STATUS_REG      shift and go to state 56
    V               shift and go to state 14

    cache                          shift and go to state 10
    REG_A                          shift and go to state 28
    jump                           shift and go to state 30
    reg_with_predec                shift and go to state 81
    pushpopmultiple                shift and go to state 55
    dspmult                        shift and go to state 5
    dspshift                       shift and go to state 31
    ccstat                         shift and go to state 6
    vector_mac                     shift and go to state 7
    parallel_instructions          shift and go to state 34
    dspalu                         shift and go to state 58
    asm_1                          shift and go to state 36
    idle                           shift and go to state 73
    linkage                        shift and go to state 60
    other                          shift and go to state 83
    expadj                         shift and go to state 12
    assign_macfunc                 shift and go to state 77
    return                         shift and go to state 15
    statement                      shift and go to state 110
    comp                           shift and go to state 42
    a_assign                       shift and go to state 88
    a_plusassign                   shift and go to state 8
    nop                            shift and go to state 19
    bitlogic                       shift and go to state 20
    asm                            shift and go to state 45
    loadstore                      shift and go to state 23
    a_minusassign                  shift and go to state 37
    loophardware                   shift and go to state 95
    a_full_macfunc                 shift and go to state 49
    assign_full_macfunc            shift and go to state 50
    deposit                        shift and go to state 97
    a_macfunc                      shift and go to state 75
    alu2                           shift and go to state 27

state 17

    (250) other -> OUTC . expr
    (251) other -> OUTC . REG
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 119
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 114
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 18

    (244) other -> DBGCMPLX . LPAREN REG RPAREN

    LPAREN          shift and go to state 121


state 19

    (11) asm_1 -> nop .

    SEMICOLON       reduce using rule 11 (asm_1 -> nop .)
    DOUBLE_BAR      reduce using rule 11 (asm_1 -> nop .)


state 20

    (24) dspalu -> bitlogic .

    SEMICOLON       reduce using rule 24 (dspalu -> bitlogic .)
    DOUBLE_BAR      reduce using rule 24 (dspalu -> bitlogic .)


state 21

    (167) return -> RTS .

    SEMICOLON       reduce using rule 167 (return -> RTS .)
    DOUBLE_BAR      reduce using rule 167 (return -> RTS .)


state 22

    (144) bitlogic -> BITTGL . LPAREN REG COMMA expr RPAREN

    LPAREN          shift and go to state 122


state 23

    (13) asm_1 -> loadstore .

    SEMICOLON       reduce using rule 13 (asm_1 -> loadstore .)
    DOUBLE_BAR      reduce using rule 13 (asm_1 -> loadstore .)


state 24

    (187) cache -> FLUSHINV . LBRACK REG RBRACK
    (188) cache -> FLUSHINV . reg_with_postinc
    (311) reg_with_postinc -> . LBRACK REG _PLUS_PLUS RBRACK

    LBRACK          shift and go to state 123

    reg_with_postinc               shift and go to state 124

state 25

    (241) other -> DBG .
    (242) other -> DBG . REG_A
    (243) other -> DBG . REG
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    SEMICOLON       reduce using rule 241 (other -> DBG .)
    DOUBLE_BAR      reduce using rule 241 (other -> DBG .)
    REG             shift and go to state 126
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 125

state 26

    (232) other -> ABORT .

    SEMICOLON       reduce using rule 232 (other -> ABORT .)
    DOUBLE_BAR      reduce using rule 232 (other -> ABORT .)


state 27

    (25) dspalu -> alu2 .

    SEMICOLON       reduce using rule 25 (dspalu -> alu2 .)
    DOUBLE_BAR      reduce using rule 25 (dspalu -> alu2 .)


state 28

    (73) dspalu -> REG_A . _PLUS_ASSIGN REG_A w32_or_nothing
    (335) a_assign -> REG_A . ASSIGN
    (336) a_minusassign -> REG_A . _MINUS_ASSIGN
    (337) a_plusassign -> REG_A . _PLUS_ASSIGN

    _PLUS_ASSIGN    shift and go to state 127
    ASSIGN          shift and go to state 128
    _MINUS_ASSIGN   shift and go to state 129


state 29

    (247) other -> DBGA . LPAREN HALF_REG COMMA expr RPAREN

    LPAREN          shift and go to state 130


state 30

    (10) asm_1 -> jump .

    SEMICOLON       reduce using rule 10 (asm_1 -> jump .)
    DOUBLE_BAR      reduce using rule 10 (asm_1 -> jump .)


state 31

    (9) asm_1 -> dspshift .

    SEMICOLON       reduce using rule 9 (asm_1 -> dspshift .)
    DOUBLE_BAR      reduce using rule 9 (asm_1 -> dspshift .)


state 32

    (27) dspalu -> HALF_REG . ASSIGN LPAREN a_plusassign REG_A RPAREN
    (48) dspalu -> HALF_REG . ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG
    (52) dspalu -> HALF_REG . ASSIGN HALF_REG plus_minus HALF_REG amod1
    (55) dspalu -> HALF_REG . ASSIGN REG LPAREN RND RPAREN
    (56) dspalu -> HALF_REG . ASSIGN REG plus_minus REG LPAREN RND12 RPAREN
    (57) dspalu -> HALF_REG . ASSIGN REG plus_minus REG LPAREN RND20 RPAREN
    (61) dspalu -> HALF_REG . ASSIGN expr
    (64) dspalu -> HALF_REG . ASSIGN REG
    (98) dspmult -> HALF_REG . ASSIGN multiply_halfregs opt_mode
    (101) dspmult -> HALF_REG . ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode
    (106) dspshift -> HALF_REG . ASSIGN ASHIFT HALF_REG BY HALF_REG smod
    (109) dspshift -> HALF_REG . ASSIGN HALF_REG LESS_LESS expr smod
    (201) loadstore -> HALF_REG . ASSIGN W LBRACK REG post_op RBRACK
    (204) loadstore -> HALF_REG . ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK
    (111) expadj -> HALF_REG . ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod
    (112) expadj -> HALF_REG . ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN
    (118) deposit -> HALF_REG . ASSIGN LSHIFT HALF_REG BY HALF_REG
    (123) deposit -> HALF_REG . ASSIGN HALF_REG GREATER_GREATER expr
    (124) deposit -> HALF_REG . ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod
    (126) deposit -> HALF_REG . ASSIGN ONES REG
    (128) deposit -> HALF_REG . ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN
    (129) deposit -> HALF_REG . ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN
    (130) deposit -> HALF_REG . ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (135) deposit -> HALF_REG . ASSIGN SIGNBITS REG_A
    (136) deposit -> HALF_REG . ASSIGN SIGNBITS REG
    (137) deposit -> HALF_REG . ASSIGN SIGNBITS HALF_REG
    (138) deposit -> HALF_REG . ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl
    (341) assign_macfunc -> HALF_REG . ASSIGN LPAREN a_macfunc RPAREN
    (342) assign_macfunc -> HALF_REG . ASSIGN REG_A

    ASSIGN          shift and go to state 131


state 33

    (219) linkage -> UNLINK .

    SEMICOLON       reduce using rule 219 (linkage -> UNLINK .)
    DOUBLE_BAR      reduce using rule 219 (linkage -> UNLINK .)


state 34

    (5) asm -> parallel_instructions . SEMICOLON

    SEMICOLON       shift and go to state 132


state 35

    (170) return -> RTN .

    SEMICOLON       reduce using rule 170 (return -> RTN .)
    DOUBLE_BAR      reduce using rule 170 (return -> RTN .)


state 36

    (4) asm -> asm_1 . SEMICOLON
    (15) parallel_instructions -> asm_1 . DOUBLE_BAR asm_1 DOUBLE_BAR asm_1
    (16) parallel_instructions -> asm_1 . DOUBLE_BAR asm_1

    SEMICOLON       shift and go to state 133
    DOUBLE_BAR      shift and go to state 134


state 37

    (69) dspalu -> a_minusassign . REG_A w32_or_nothing
    (350) a_macfunc -> a_minusassign . multiply_halfregs
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    HALF_REG        shift and go to state 101

    multiply_halfregs              shift and go to state 136
    REG_A                          shift and go to state 135

state 38

    (226) loophardware -> LOOP_BEGIN . NUMBER
    (227) loophardware -> LOOP_BEGIN . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 138
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 137
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 39

    (169) return -> RTX .

    SEMICOLON       reduce using rule 169 (return -> RTX .)
    DOUBLE_BAR      reduce using rule 169 (return -> RTX .)


state 40

    (240) other -> DISALGNEXCPT .

    SEMICOLON       reduce using rule 240 (other -> DISALGNEXCPT .)
    DOUBLE_BAR      reduce using rule 240 (other -> DISALGNEXCPT .)


state 41

    (145) jump -> CCREG . _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN
    (147) jump -> CCREG . ASSIGN BITTST LPAREN REG COMMA expr RPAREN
    (83) comp -> CCREG . ASSIGN REG_A _ASSIGN_ASSIGN REG_A
    (84) comp -> CCREG . ASSIGN REG_A LESS_THAN REG_A
    (85) comp -> CCREG . ASSIGN REG LESS_THAN REG iu_or_nothing
    (86) comp -> CCREG . ASSIGN REG LESS_THAN expr iu_or_nothing
    (87) comp -> CCREG . ASSIGN REG _ASSIGN_ASSIGN REG
    (88) comp -> CCREG . ASSIGN REG _ASSIGN_ASSIGN expr
    (89) comp -> CCREG . ASSIGN REG_A _LESS_THAN_ASSIGN REG_A
    (90) comp -> CCREG . ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing
    (91) comp -> CCREG . ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing
    (95) comp -> CCREG . ASSIGN REG
    (97) comp -> CCREG . _ASSIGN_BANG CCREG
    (360) ccstat -> CCREG . cc_op STATUS_REG
    (361) ccstat -> CCREG . cc_op V
    (356) cc_op -> . ASSIGN
    (357) cc_op -> . _BAR_ASSIGN
    (358) cc_op -> . _AMPERSAND_ASSIGN
    (359) cc_op -> . _CARET_ASSIGN

    _ASSIGN_BANG    shift and go to state 141
    ASSIGN          shift and go to state 139
    _BAR_ASSIGN     shift and go to state 105
    _AMPERSAND_ASSIGN shift and go to state 106
    _CARET_ASSIGN   shift and go to state 108

    cc_op                          shift and go to state 140

state 42

    (19) dspalu -> comp .

    SEMICOLON       reduce using rule 19 (dspalu -> comp .)
    DOUBLE_BAR      reduce using rule 19 (dspalu -> comp .)


state 43

    (185) cache -> FLUSH . LBRACK REG RBRACK
    (186) cache -> FLUSH . reg_with_postinc
    (311) reg_with_postinc -> . LBRACK REG _PLUS_PLUS RBRACK

    LBRACK          shift and go to state 142

    reg_with_postinc               shift and go to state 143

state 44

    (196) loadstore -> W . LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (197) loadstore -> W . LBRACK REG post_op RBRACK ASSIGN REG
    (198) loadstore -> W . LBRACK REG post_op RBRACK ASSIGN HALF_REG
    (207) loadstore -> W . LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG

    LBRACK          shift and go to state 144


state 45

    (3) statement -> asm .

    error           reduce using rule 3 (statement -> asm .)
    REG             reduce using rule 3 (statement -> asm .)
    HALF_REG        reduce using rule 3 (statement -> asm .)
    A_ZERO_DOT_H    reduce using rule 3 (statement -> asm .)
    A_ONE_DOT_H     reduce using rule 3 (statement -> asm .)
    LPAREN          reduce using rule 3 (statement -> asm .)
    A_ZERO_DOT_L    reduce using rule 3 (statement -> asm .)
    A_ONE_DOT_L     reduce using rule 3 (statement -> asm .)
    SAA             reduce using rule 3 (statement -> asm .)
    CCREG           reduce using rule 3 (statement -> asm .)
    IF              reduce using rule 3 (statement -> asm .)
    JUMP            reduce using rule 3 (statement -> asm .)
    CALL            reduce using rule 3 (statement -> asm .)
    RAISE           reduce using rule 3 (statement -> asm .)
    EXCPT           reduce using rule 3 (statement -> asm .)
    TESTSET         reduce using rule 3 (statement -> asm .)
    JUMP_DOT_S      reduce using rule 3 (statement -> asm .)
    JUMP_DOT_L      reduce using rule 3 (statement -> asm .)
    NOP             reduce using rule 3 (statement -> asm .)
    MNOP            reduce using rule 3 (statement -> asm .)
    IDLE            reduce using rule 3 (statement -> asm .)
    B               reduce using rule 3 (statement -> asm .)
    W               reduce using rule 3 (statement -> asm .)
    LBRACK          reduce using rule 3 (statement -> asm .)
    ABORT           reduce using rule 3 (statement -> asm .)
    CSYNC           reduce using rule 3 (statement -> asm .)
    SSYNC           reduce using rule 3 (statement -> asm .)
    EMUEXCPT        reduce using rule 3 (statement -> asm .)
    CLI             reduce using rule 3 (statement -> asm .)
    STI             reduce using rule 3 (statement -> asm .)
    DISALGNEXCPT    reduce using rule 3 (statement -> asm .)
    DBG             reduce using rule 3 (statement -> asm .)
    DBGCMPLX        reduce using rule 3 (statement -> asm .)
    DBGHALT         reduce using rule 3 (statement -> asm .)
    HLT             reduce using rule 3 (statement -> asm .)
    DBGA            reduce using rule 3 (statement -> asm .)
    DBGAH           reduce using rule 3 (statement -> asm .)
    DBGAL           reduce using rule 3 (statement -> asm .)
    OUTC            reduce using rule 3 (statement -> asm .)
    LSETUP          reduce using rule 3 (statement -> asm .)
    LOOP            reduce using rule 3 (statement -> asm .)
    LOOP_BEGIN      reduce using rule 3 (statement -> asm .)
    LOOP_END        reduce using rule 3 (statement -> asm .)
    BITMUX          reduce using rule 3 (statement -> asm .)
    BITCLR          reduce using rule 3 (statement -> asm .)
    BITSET          reduce using rule 3 (statement -> asm .)
    BITTGL          reduce using rule 3 (statement -> asm .)
    DIVQ            reduce using rule 3 (statement -> asm .)
    DIVS            reduce using rule 3 (statement -> asm .)
    REG_A_DOUBLE_ZERO reduce using rule 3 (statement -> asm .)
    REG_A_DOUBLE_ONE reduce using rule 3 (statement -> asm .)
    RTS             reduce using rule 3 (statement -> asm .)
    RTI             reduce using rule 3 (statement -> asm .)
    RTX             reduce using rule 3 (statement -> asm .)
    RTN             reduce using rule 3 (statement -> asm .)
    RTE             reduce using rule 3 (statement -> asm .)
    LINK            reduce using rule 3 (statement -> asm .)
    UNLINK          reduce using rule 3 (statement -> asm .)
    FLUSH           reduce using rule 3 (statement -> asm .)
    FLUSHINV        reduce using rule 3 (statement -> asm .)
    IFLUSH          reduce using rule 3 (statement -> asm .)
    PREFETCH        reduce using rule 3 (statement -> asm .)
    STATUS_REG      reduce using rule 3 (statement -> asm .)
    V               reduce using rule 3 (statement -> asm .)
    $end            reduce using rule 3 (statement -> asm .)


state 46

    (228) loophardware -> LOOP_END . NUMBER
    (229) loophardware -> LOOP_END . expr
    (231) loophardware -> LOOP_END .
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 146
    SEMICOLON       reduce using rule 231 (loophardware -> LOOP_END .)
    DOUBLE_BAR      reduce using rule 231 (loophardware -> LOOP_END .)
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 145
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 47

    (246) other -> HLT .

    SEMICOLON       reduce using rule 246 (other -> HLT .)
    DOUBLE_BAR      reduce using rule 246 (other -> HLT .)


state 48

    (199) loadstore -> LBRACK . REG plus_minus expr RBRACK ASSIGN REG
    (205) loadstore -> LBRACK . REG post_op RBRACK ASSIGN REG
    (206) loadstore -> LBRACK . REG _PLUS_PLUS REG RBRACK ASSIGN REG
    (310) reg_with_predec -> LBRACK . _MINUS_MINUS REG RBRACK

    REG             shift and go to state 148
    _MINUS_MINUS    shift and go to state 147


state 49

    (103) dspmult -> a_full_macfunc . opt_mode
    (254) opt_mode -> . empty
    (255) opt_mode -> . LPAREN M COMMA MMOD RPAREN
    (256) opt_mode -> . LPAREN MMOD COMMA M RPAREN
    (257) opt_mode -> . LPAREN MMOD RPAREN
    (258) opt_mode -> . LPAREN M RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 150
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    opt_mode                       shift and go to state 149
    empty                          shift and go to state 151

state 50

    (104) dspmult -> assign_full_macfunc . opt_mode
    (254) opt_mode -> . empty
    (255) opt_mode -> . LPAREN M COMMA MMOD RPAREN
    (256) opt_mode -> . LPAREN MMOD COMMA M RPAREN
    (257) opt_mode -> . LPAREN MMOD RPAREN
    (258) opt_mode -> . LPAREN M RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 150
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    opt_mode                       shift and go to state 152
    empty                          shift and go to state 151

state 51

    (223) loophardware -> LOOP . expr REG
    (224) loophardware -> LOOP . expr REG ASSIGN REG
    (225) loophardware -> LOOP . expr REG ASSIGN REG GREATER_GREATER expr
    (230) loophardware -> LOOP . REG ASSIGN NUMBER
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 153
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 154
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 52

    (172) nop -> NOP .

    SEMICOLON       reduce using rule 172 (nop -> NOP .)
    DOUBLE_BAR      reduce using rule 172 (nop -> NOP .)


state 53

    (77) dspalu -> SAA . LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir

    LPAREN          shift and go to state 155


state 54

    (158) jump -> RAISE . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 156
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 55

    (193) loadstore -> pushpopmultiple .

    SEMICOLON       reduce using rule 193 (loadstore -> pushpopmultiple .)
    DOUBLE_BAR      reduce using rule 193 (loadstore -> pushpopmultiple .)


state 56

    (362) ccstat -> STATUS_REG . cc_op CCREG
    (356) cc_op -> . ASSIGN
    (357) cc_op -> . _BAR_ASSIGN
    (358) cc_op -> . _AMPERSAND_ASSIGN
    (359) cc_op -> . _CARET_ASSIGN

    ASSIGN          shift and go to state 109
    _BAR_ASSIGN     shift and go to state 105
    _AMPERSAND_ASSIGN shift and go to state 106
    _CARET_ASSIGN   shift and go to state 108

    cc_op                          shift and go to state 157

state 57

    (26) dspalu -> REG . ASSIGN LPAREN a_plusassign REG_A RPAREN
    (34) dspalu -> REG . ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H
    (35) dspalu -> REG . ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1
    (36) dspalu -> REG . ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1
    (37) dspalu -> REG . ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2
    (38) dspalu -> REG . ASSIGN ABS REG vmod
    (42) dspalu -> REG . ASSIGN c_align LPAREN REG COMMA REG RPAREN
    (43) dspalu -> REG . ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> REG . ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (45) dspalu -> REG . ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op
    (46) dspalu -> REG . ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op
    (47) dspalu -> REG . ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN
    (49) dspalu -> REG . ASSIGN REG plus_minus REG amod1
    (50) dspalu -> REG . ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod
    (60) dspalu -> REG . ASSIGN HALF_REG xpmod
    (63) dspalu -> REG . ASSIGN expr xpmod1
    (65) dspalu -> REG . ASSIGN REG op_bar_op REG amod0
    (66) dspalu -> REG . ASSIGN BYTE_DREG xpmod
    (70) dspalu -> REG . _MINUS_ASSIGN expr
    (71) dspalu -> REG . _PLUS_ASSIGN REG LPAREN BREV RPAREN
    (72) dspalu -> REG . _MINUS_ASSIGN REG
    (74) dspalu -> REG . _PLUS_ASSIGN REG
    (75) dspalu -> REG . _PLUS_ASSIGN expr
    (76) dspalu -> REG . _STAR_ASSIGN REG
    (79) dspalu -> REG . ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr
    (99) dspmult -> REG . ASSIGN multiply_regs opt_mode
    (100) dspmult -> REG . ASSIGN multiply_halfregs opt_mode
    (102) dspmult -> REG . ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode
    (108) dspshift -> REG . ASSIGN REG LESS_LESS expr vsmod
    (110) dspshift -> REG . ASSIGN ASHIFT REG BY HALF_REG vsmod
    (200) loadstore -> REG . ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod
    (202) loadstore -> REG . ASSIGN W LBRACK REG post_op RBRACK xpmod
    (203) loadstore -> REG . ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod
    (208) loadstore -> REG . ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod
    (209) loadstore -> REG . ASSIGN B LBRACK REG post_op RBRACK xpmod
    (210) loadstore -> REG . ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK
    (211) loadstore -> REG . ASSIGN LBRACK REG plus_minus got_or_expr RBRACK
    (212) loadstore -> REG . ASSIGN LBRACK REG post_op RBRACK
    (80) comp -> REG . ASSIGN REG BAR REG
    (81) comp -> REG . ASSIGN REG CARET REG
    (82) comp -> REG . ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN
    (92) comp -> REG . ASSIGN REG AMPERSAND REG
    (94) comp -> REG . ASSIGN REG
    (96) comp -> REG . ASSIGN CCREG
    (113) deposit -> REG . ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN
    (114) deposit -> REG . ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN
    (115) deposit -> REG . ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod
    (119) deposit -> REG . ASSIGN LSHIFT REG BY HALF_REG vmod
    (120) deposit -> REG . ASSIGN SHIFT REG BY HALF_REG
    (122) deposit -> REG . ASSIGN REG GREATER_GREATER expr vmod
    (125) deposit -> REG . ASSIGN REG _GREATER_GREATER_GREATER expr vsmod
    (127) deposit -> REG . ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN
    (132) deposit -> REG . ASSIGN ROT REG BY HALF_REG
    (134) deposit -> REG . ASSIGN ROT REG BY expr
    (139) deposit -> REG . ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl
    (177) alu2 -> REG . ASSIGN MINUS REG vsmod
    (178) alu2 -> REG . ASSIGN TILDA REG
    (179) alu2 -> REG . _GREATER_GREATER_ASSIGN REG
    (180) alu2 -> REG . _GREATER_GREATER_ASSIGN expr
    (181) alu2 -> REG . _GREATER_GREATER_GREATER_THAN_ASSIGN REG
    (182) alu2 -> REG . _LESS_LESS_ASSIGN REG
    (183) alu2 -> REG . _LESS_LESS_ASSIGN expr
    (184) alu2 -> REG . _GREATER_GREATER_GREATER_THAN_ASSIGN expr
    (343) assign_full_macfunc -> REG . ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (346) assign_full_macfunc -> REG . ASSIGN LPAREN a_full_macfunc RPAREN
    (338) assign_macfunc -> REG . ASSIGN REG_A
    (340) assign_macfunc -> REG . ASSIGN LPAREN a_macfunc RPAREN

    ASSIGN          shift and go to state 161
    _MINUS_ASSIGN   shift and go to state 162
    _PLUS_ASSIGN    shift and go to state 159
    _STAR_ASSIGN    shift and go to state 164
    _GREATER_GREATER_ASSIGN shift and go to state 160
    _GREATER_GREATER_GREATER_THAN_ASSIGN shift and go to state 163
    _LESS_LESS_ASSIGN shift and go to state 158


state 58

    (7) asm_1 -> dspalu .

    SEMICOLON       reduce using rule 7 (asm_1 -> dspalu .)
    DOUBLE_BAR      reduce using rule 7 (asm_1 -> dspalu .)


state 59

    (174) idle -> IDLE .

    SEMICOLON       reduce using rule 174 (idle -> IDLE .)
    DOUBLE_BAR      reduce using rule 174 (idle -> IDLE .)


state 60

    (233) other -> linkage .

    SEMICOLON       reduce using rule 233 (other -> linkage .)
    DOUBLE_BAR      reduce using rule 233 (other -> linkage .)


state 61

    (236) other -> SSYNC .

    SEMICOLON       reduce using rule 236 (other -> SSYNC .)
    DOUBLE_BAR      reduce using rule 236 (other -> SSYNC .)


state 62

    (148) jump -> IF . BANG CCREG REG ASSIGN REG
    (149) jump -> IF . CCREG REG ASSIGN REG
    (150) jump -> IF . BANG CCREG JUMP expr
    (151) jump -> IF . BANG CCREG JUMP expr LPAREN BP RPAREN
    (152) jump -> IF . CCREG JUMP expr
    (153) jump -> IF . CCREG JUMP expr LPAREN BP RPAREN

    BANG            shift and go to state 166
    CCREG           shift and go to state 165


state 63

    (191) cache -> PREFETCH . LBRACK REG RBRACK
    (192) cache -> PREFETCH . reg_with_postinc
    (311) reg_with_postinc -> . LBRACK REG _PLUS_PLUS RBRACK

    LBRACK          shift and go to state 167

    reg_with_postinc               shift and go to state 168

state 64

    (194) loadstore -> B . LBRACK REG post_op RBRACK ASSIGN REG
    (195) loadstore -> B . LBRACK REG plus_minus expr RBRACK ASSIGN REG

    LBRACK          shift and go to state 169


state 65

    (1) translation -> statement .

    error           reduce using rule 1 (translation -> statement .)
    REG             reduce using rule 1 (translation -> statement .)
    HALF_REG        reduce using rule 1 (translation -> statement .)
    A_ZERO_DOT_H    reduce using rule 1 (translation -> statement .)
    A_ONE_DOT_H     reduce using rule 1 (translation -> statement .)
    LPAREN          reduce using rule 1 (translation -> statement .)
    A_ZERO_DOT_L    reduce using rule 1 (translation -> statement .)
    A_ONE_DOT_L     reduce using rule 1 (translation -> statement .)
    SAA             reduce using rule 1 (translation -> statement .)
    CCREG           reduce using rule 1 (translation -> statement .)
    IF              reduce using rule 1 (translation -> statement .)
    JUMP            reduce using rule 1 (translation -> statement .)
    CALL            reduce using rule 1 (translation -> statement .)
    RAISE           reduce using rule 1 (translation -> statement .)
    EXCPT           reduce using rule 1 (translation -> statement .)
    TESTSET         reduce using rule 1 (translation -> statement .)
    JUMP_DOT_S      reduce using rule 1 (translation -> statement .)
    JUMP_DOT_L      reduce using rule 1 (translation -> statement .)
    NOP             reduce using rule 1 (translation -> statement .)
    MNOP            reduce using rule 1 (translation -> statement .)
    IDLE            reduce using rule 1 (translation -> statement .)
    B               reduce using rule 1 (translation -> statement .)
    W               reduce using rule 1 (translation -> statement .)
    LBRACK          reduce using rule 1 (translation -> statement .)
    ABORT           reduce using rule 1 (translation -> statement .)
    CSYNC           reduce using rule 1 (translation -> statement .)
    SSYNC           reduce using rule 1 (translation -> statement .)
    EMUEXCPT        reduce using rule 1 (translation -> statement .)
    CLI             reduce using rule 1 (translation -> statement .)
    STI             reduce using rule 1 (translation -> statement .)
    DISALGNEXCPT    reduce using rule 1 (translation -> statement .)
    DBG             reduce using rule 1 (translation -> statement .)
    DBGCMPLX        reduce using rule 1 (translation -> statement .)
    DBGHALT         reduce using rule 1 (translation -> statement .)
    HLT             reduce using rule 1 (translation -> statement .)
    DBGA            reduce using rule 1 (translation -> statement .)
    DBGAH           reduce using rule 1 (translation -> statement .)
    DBGAL           reduce using rule 1 (translation -> statement .)
    OUTC            reduce using rule 1 (translation -> statement .)
    LSETUP          reduce using rule 1 (translation -> statement .)
    LOOP            reduce using rule 1 (translation -> statement .)
    LOOP_BEGIN      reduce using rule 1 (translation -> statement .)
    LOOP_END        reduce using rule 1 (translation -> statement .)
    BITMUX          reduce using rule 1 (translation -> statement .)
    BITCLR          reduce using rule 1 (translation -> statement .)
    BITSET          reduce using rule 1 (translation -> statement .)
    BITTGL          reduce using rule 1 (translation -> statement .)
    DIVQ            reduce using rule 1 (translation -> statement .)
    DIVS            reduce using rule 1 (translation -> statement .)
    REG_A_DOUBLE_ZERO reduce using rule 1 (translation -> statement .)
    REG_A_DOUBLE_ONE reduce using rule 1 (translation -> statement .)
    RTS             reduce using rule 1 (translation -> statement .)
    RTI             reduce using rule 1 (translation -> statement .)
    RTX             reduce using rule 1 (translation -> statement .)
    RTN             reduce using rule 1 (translation -> statement .)
    RTE             reduce using rule 1 (translation -> statement .)
    LINK            reduce using rule 1 (translation -> statement .)
    UNLINK          reduce using rule 1 (translation -> statement .)
    FLUSH           reduce using rule 1 (translation -> statement .)
    FLUSHINV        reduce using rule 1 (translation -> statement .)
    IFLUSH          reduce using rule 1 (translation -> statement .)
    PREFETCH        reduce using rule 1 (translation -> statement .)
    STATUS_REG      reduce using rule 1 (translation -> statement .)
    V               reduce using rule 1 (translation -> statement .)
    $end            reduce using rule 1 (translation -> statement .)


state 66

    (173) nop -> MNOP .

    SEMICOLON       reduce using rule 173 (nop -> MNOP .)
    DOUBLE_BAR      reduce using rule 173 (nop -> MNOP .)


state 67

    (220) loophardware -> LSETUP . LPAREN expr COMMA expr RPAREN REG
    (221) loophardware -> LSETUP . LPAREN expr COMMA expr RPAREN REG ASSIGN REG
    (222) loophardware -> LSETUP . LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr

    LPAREN          shift and go to state 170


state 68

    (154) jump -> JUMP . LPAREN REG RPAREN
    (157) jump -> JUMP . LPAREN PC PLUS REG RPAREN
    (161) jump -> JUMP . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    LPAREN          shift and go to state 171
    NUMBER          shift and go to state 115
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 172
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 69

    (189) cache -> IFLUSH . LBRACK REG RBRACK
    (190) cache -> IFLUSH . reg_with_postinc
    (311) reg_with_postinc -> . LBRACK REG _PLUS_PLUS RBRACK

    LBRACK          shift and go to state 173

    reg_with_postinc               shift and go to state 174

state 70

    (143) bitlogic -> BITSET . LPAREN REG COMMA expr RPAREN

    LPAREN          shift and go to state 175


state 71

    (176) alu2 -> DIVS . LPAREN REG COMMA REG RPAREN

    LPAREN          shift and go to state 176


state 72

    (175) alu2 -> DIVQ . LPAREN REG COMMA REG RPAREN

    LPAREN          shift and go to state 177


state 73

    (12) asm_1 -> idle .

    SEMICOLON       reduce using rule 12 (asm_1 -> idle .)
    DOUBLE_BAR      reduce using rule 12 (asm_1 -> idle .)


state 74

    (6) asm -> error .

    error           reduce using rule 6 (asm -> error .)
    REG             reduce using rule 6 (asm -> error .)
    HALF_REG        reduce using rule 6 (asm -> error .)
    A_ZERO_DOT_H    reduce using rule 6 (asm -> error .)
    A_ONE_DOT_H     reduce using rule 6 (asm -> error .)
    LPAREN          reduce using rule 6 (asm -> error .)
    A_ZERO_DOT_L    reduce using rule 6 (asm -> error .)
    A_ONE_DOT_L     reduce using rule 6 (asm -> error .)
    SAA             reduce using rule 6 (asm -> error .)
    CCREG           reduce using rule 6 (asm -> error .)
    IF              reduce using rule 6 (asm -> error .)
    JUMP            reduce using rule 6 (asm -> error .)
    CALL            reduce using rule 6 (asm -> error .)
    RAISE           reduce using rule 6 (asm -> error .)
    EXCPT           reduce using rule 6 (asm -> error .)
    TESTSET         reduce using rule 6 (asm -> error .)
    JUMP_DOT_S      reduce using rule 6 (asm -> error .)
    JUMP_DOT_L      reduce using rule 6 (asm -> error .)
    NOP             reduce using rule 6 (asm -> error .)
    MNOP            reduce using rule 6 (asm -> error .)
    IDLE            reduce using rule 6 (asm -> error .)
    B               reduce using rule 6 (asm -> error .)
    W               reduce using rule 6 (asm -> error .)
    LBRACK          reduce using rule 6 (asm -> error .)
    ABORT           reduce using rule 6 (asm -> error .)
    CSYNC           reduce using rule 6 (asm -> error .)
    SSYNC           reduce using rule 6 (asm -> error .)
    EMUEXCPT        reduce using rule 6 (asm -> error .)
    CLI             reduce using rule 6 (asm -> error .)
    STI             reduce using rule 6 (asm -> error .)
    DISALGNEXCPT    reduce using rule 6 (asm -> error .)
    DBG             reduce using rule 6 (asm -> error .)
    DBGCMPLX        reduce using rule 6 (asm -> error .)
    DBGHALT         reduce using rule 6 (asm -> error .)
    HLT             reduce using rule 6 (asm -> error .)
    DBGA            reduce using rule 6 (asm -> error .)
    DBGAH           reduce using rule 6 (asm -> error .)
    DBGAL           reduce using rule 6 (asm -> error .)
    OUTC            reduce using rule 6 (asm -> error .)
    LSETUP          reduce using rule 6 (asm -> error .)
    LOOP            reduce using rule 6 (asm -> error .)
    LOOP_BEGIN      reduce using rule 6 (asm -> error .)
    LOOP_END        reduce using rule 6 (asm -> error .)
    BITMUX          reduce using rule 6 (asm -> error .)
    BITCLR          reduce using rule 6 (asm -> error .)
    BITSET          reduce using rule 6 (asm -> error .)
    BITTGL          reduce using rule 6 (asm -> error .)
    DIVQ            reduce using rule 6 (asm -> error .)
    DIVS            reduce using rule 6 (asm -> error .)
    REG_A_DOUBLE_ZERO reduce using rule 6 (asm -> error .)
    REG_A_DOUBLE_ONE reduce using rule 6 (asm -> error .)
    RTS             reduce using rule 6 (asm -> error .)
    RTI             reduce using rule 6 (asm -> error .)
    RTX             reduce using rule 6 (asm -> error .)
    RTN             reduce using rule 6 (asm -> error .)
    RTE             reduce using rule 6 (asm -> error .)
    LINK            reduce using rule 6 (asm -> error .)
    UNLINK          reduce using rule 6 (asm -> error .)
    FLUSH           reduce using rule 6 (asm -> error .)
    FLUSHINV        reduce using rule 6 (asm -> error .)
    IFLUSH          reduce using rule 6 (asm -> error .)
    PREFETCH        reduce using rule 6 (asm -> error .)
    STATUS_REG      reduce using rule 6 (asm -> error .)
    V               reduce using rule 6 (asm -> error .)
    $end            reduce using rule 6 (asm -> error .)


state 75

    (339) assign_macfunc -> a_macfunc .

    LPAREN          reduce using rule 339 (assign_macfunc -> a_macfunc .)
    COMMA           reduce using rule 339 (assign_macfunc -> a_macfunc .)
    SEMICOLON       reduce using rule 339 (assign_macfunc -> a_macfunc .)
    DOUBLE_BAR      reduce using rule 339 (assign_macfunc -> a_macfunc .)


state 76

    (160) jump -> TESTSET . LPAREN REG RPAREN

    LPAREN          shift and go to state 178


state 77

    (17) vector_mac -> assign_macfunc . opt_mode COMMA assign_macfunc opt_mode
    (18) vector_mac -> assign_macfunc . opt_mode
    (254) opt_mode -> . empty
    (255) opt_mode -> . LPAREN M COMMA MMOD RPAREN
    (256) opt_mode -> . LPAREN MMOD COMMA M RPAREN
    (257) opt_mode -> . LPAREN MMOD RPAREN
    (258) opt_mode -> . LPAREN M RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 150
    COMMA           reduce using rule 389 (empty -> .)
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    opt_mode                       shift and go to state 179
    empty                          shift and go to state 151

state 78

    (159) jump -> EXCPT . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 180
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 79

    (249) other -> DBGAL . LPAREN REG COMMA expr RPAREN

    LPAREN          shift and go to state 181


state 80

    (238) other -> CLI . REG

    REG             shift and go to state 182


state 81

    (213) pushpopmultiple -> reg_with_predec . ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> reg_with_predec . ASSIGN LPAREN REG COLON expr RPAREN
    (217) pushpopmultiple -> reg_with_predec . ASSIGN REG

    ASSIGN          shift and go to state 183


state 82

    (140) deposit -> BITMUX . LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl

    LPAREN          shift and go to state 184


state 83

    (14) asm_1 -> other .

    SEMICOLON       reduce using rule 14 (asm_1 -> other .)
    DOUBLE_BAR      reduce using rule 14 (asm_1 -> other .)


state 84

    (248) other -> DBGAH . LPAREN REG COMMA expr RPAREN

    LPAREN          shift and go to state 185


state 85

    (171) return -> RTE .

    SEMICOLON       reduce using rule 171 (return -> RTE .)
    DOUBLE_BAR      reduce using rule 171 (return -> RTE .)


state 86

    (245) other -> DBGHALT .

    SEMICOLON       reduce using rule 245 (other -> DBGHALT .)
    DOUBLE_BAR      reduce using rule 245 (other -> DBGHALT .)


state 87

    (239) other -> STI . REG

    REG             shift and go to state 186


state 88

    (39) dspalu -> a_assign . ABS REG_A
    (51) dspalu -> a_assign . MINUS REG_A
    (53) dspalu -> a_assign . a_assign expr
    (54) dspalu -> a_assign . REG_A LPAREN S RPAREN
    (58) dspalu -> a_assign . REG_A
    (59) dspalu -> a_assign . REG
    (62) dspalu -> a_assign . expr
    (67) dspalu -> a_assign . ABS REG_A COMMA a_assign ABS REG_A
    (68) dspalu -> a_assign . MINUS REG_A COMMA a_assign MINUS REG_A
    (78) dspalu -> a_assign . REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN
    (105) dspshift -> a_assign . ASHIFT REG_A BY HALF_REG
    (107) dspshift -> a_assign . REG_A LESS_LESS expr
    (116) deposit -> a_assign . REG_A _GREATER_GREATER_GREATER expr
    (117) deposit -> a_assign . LSHIFT REG_A BY HALF_REG
    (121) deposit -> a_assign . REG_A GREATER_GREATER expr
    (131) deposit -> a_assign . ROT REG_A BY HALF_REG
    (133) deposit -> a_assign . ROT REG_A BY expr
    (141) deposit -> a_assign . BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (348) a_macfunc -> a_assign . multiply_halfregs
    (335) a_assign -> . REG_A ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (377) expr -> . expr_1
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    ABS             shift and go to state 194
    MINUS           shift and go to state 189
    REG             shift and go to state 190
    ASHIFT          shift and go to state 197
    LSHIFT          shift and go to state 188
    ROT             shift and go to state 192
    BXORSHIFT       shift and go to state 191
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    HALF_REG        shift and go to state 101
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr                           shift and go to state 196
    symbol                         shift and go to state 117
    REG_A                          shift and go to state 187
    a_assign                       shift and go to state 193
    multiply_halfregs              shift and go to state 195
    expr_1                         shift and go to state 120

state 89

    (30) dspalu -> LPAREN . REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> LPAREN . REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> LPAREN . REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> LPAREN . REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN
    (351) a_full_macfunc -> LPAREN . A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> LPAREN . A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> LPAREN . A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs
    (344) assign_full_macfunc -> LPAREN . REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> LPAREN . REG COLON REG RPAREN ASSIGN multiply_regs
    (347) assign_full_macfunc -> LPAREN . REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN
    (215) pushpopmultiple -> LPAREN . REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc
    (216) pushpopmultiple -> LPAREN . REG COLON expr RPAREN ASSIGN reg_with_postinc

    REG             shift and go to state 199
    A_ONE_COLON_ZERO shift and go to state 198


state 90

    (252) REG_A -> REG_A_DOUBLE_ZERO .

    SEMICOLON       reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    DOUBLE_BAR      reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    COMMA           reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    ASSIGN          reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    _PLUS_ASSIGN    reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    _MINUS_ASSIGN   reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    LPAREN          reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    BY              reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    RPAREN          reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    _ASSIGN_ASSIGN  reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    LESS_THAN       reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    _LESS_THAN_ASSIGN reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    LESS_LESS       reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    _GREATER_GREATER_GREATER reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    GREATER_GREATER reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    PLUS            reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)
    MINUS           reduce using rule 252 (REG_A -> REG_A_DOUBLE_ZERO .)


state 91

    (162) jump -> JUMP_DOT_S . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 200
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 92

    (235) other -> CSYNC .

    SEMICOLON       reduce using rule 235 (other -> CSYNC .)
    DOUBLE_BAR      reduce using rule 235 (other -> CSYNC .)


state 93

    (142) bitlogic -> BITCLR . LPAREN REG COMMA expr RPAREN

    LPAREN          shift and go to state 201


state 94

    (218) linkage -> LINK . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 202
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 95

    (20) dspalu -> loophardware .

    SEMICOLON       reduce using rule 20 (dspalu -> loophardware .)
    DOUBLE_BAR      reduce using rule 20 (dspalu -> loophardware .)


state 96

    (155) jump -> CALL . LPAREN REG RPAREN
    (156) jump -> CALL . LPAREN PC PLUS REG RPAREN
    (165) jump -> CALL . expr
    (166) jump -> CALL . pltpc
    (377) expr -> . expr_1
    (371) pltpc -> . symbol AT PLTPC
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (364) symbol -> . SYMBOL
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1

    LPAREN          shift and go to state 203
    SYMBOL          shift and go to state 118
    NUMBER          shift and go to state 115
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116

    expr                           shift and go to state 205
    symbol                         shift and go to state 204
    eterm                          shift and go to state 111
    pltpc                          shift and go to state 206
    expr_1                         shift and go to state 120

state 97

    (23) dspalu -> deposit .

    SEMICOLON       reduce using rule 23 (dspalu -> deposit .)
    DOUBLE_BAR      reduce using rule 23 (dspalu -> deposit .)


state 98

    (163) jump -> JUMP_DOT_L . expr
    (164) jump -> JUMP_DOT_L . pltpc
    (377) expr -> . expr_1
    (371) pltpc -> . symbol AT PLTPC
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (364) symbol -> . SYMBOL
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1

    SYMBOL          shift and go to state 118
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116

    expr                           shift and go to state 207
    symbol                         shift and go to state 204
    eterm                          shift and go to state 111
    pltpc                          shift and go to state 208
    expr_1                         shift and go to state 120

state 99

    (40) dspalu -> A_ZERO_DOT_L ASSIGN . HALF_REG

    HALF_REG        shift and go to state 209


state 100

    (28) dspalu -> A_ZERO_DOT_H ASSIGN . HALF_REG

    HALF_REG        shift and go to state 210


state 101

    (355) multiply_halfregs -> HALF_REG . STAR HALF_REG

    STAR            shift and go to state 211


state 102

    (349) a_macfunc -> a_plusassign multiply_halfregs .

    LPAREN          reduce using rule 349 (a_macfunc -> a_plusassign multiply_halfregs .)
    COMMA           reduce using rule 349 (a_macfunc -> a_plusassign multiply_halfregs .)
    SEMICOLON       reduce using rule 349 (a_macfunc -> a_plusassign multiply_halfregs .)
    DOUBLE_BAR      reduce using rule 349 (a_macfunc -> a_plusassign multiply_halfregs .)
    RPAREN          reduce using rule 349 (a_macfunc -> a_plusassign multiply_halfregs .)


state 103

    (41) dspalu -> A_ONE_DOT_L ASSIGN . HALF_REG

    HALF_REG        shift and go to state 212


state 104

    (29) dspalu -> A_ONE_DOT_H ASSIGN . HALF_REG

    HALF_REG        shift and go to state 213


state 105

    (357) cc_op -> _BAR_ASSIGN .

    CCREG           reduce using rule 357 (cc_op -> _BAR_ASSIGN .)
    STATUS_REG      reduce using rule 357 (cc_op -> _BAR_ASSIGN .)
    V               reduce using rule 357 (cc_op -> _BAR_ASSIGN .)


state 106

    (358) cc_op -> _AMPERSAND_ASSIGN .

    CCREG           reduce using rule 358 (cc_op -> _AMPERSAND_ASSIGN .)
    STATUS_REG      reduce using rule 358 (cc_op -> _AMPERSAND_ASSIGN .)
    V               reduce using rule 358 (cc_op -> _AMPERSAND_ASSIGN .)


state 107

    (363) ccstat -> V cc_op . CCREG

    CCREG           shift and go to state 214


state 108

    (359) cc_op -> _CARET_ASSIGN .

    CCREG           reduce using rule 359 (cc_op -> _CARET_ASSIGN .)
    STATUS_REG      reduce using rule 359 (cc_op -> _CARET_ASSIGN .)
    V               reduce using rule 359 (cc_op -> _CARET_ASSIGN .)


state 109

    (356) cc_op -> ASSIGN .

    CCREG           reduce using rule 356 (cc_op -> ASSIGN .)


state 110

    (2) translation -> translation statement .

    error           reduce using rule 2 (translation -> translation statement .)
    REG             reduce using rule 2 (translation -> translation statement .)
    HALF_REG        reduce using rule 2 (translation -> translation statement .)
    A_ZERO_DOT_H    reduce using rule 2 (translation -> translation statement .)
    A_ONE_DOT_H     reduce using rule 2 (translation -> translation statement .)
    LPAREN          reduce using rule 2 (translation -> translation statement .)
    A_ZERO_DOT_L    reduce using rule 2 (translation -> translation statement .)
    A_ONE_DOT_L     reduce using rule 2 (translation -> translation statement .)
    SAA             reduce using rule 2 (translation -> translation statement .)
    CCREG           reduce using rule 2 (translation -> translation statement .)
    IF              reduce using rule 2 (translation -> translation statement .)
    JUMP            reduce using rule 2 (translation -> translation statement .)
    CALL            reduce using rule 2 (translation -> translation statement .)
    RAISE           reduce using rule 2 (translation -> translation statement .)
    EXCPT           reduce using rule 2 (translation -> translation statement .)
    TESTSET         reduce using rule 2 (translation -> translation statement .)
    JUMP_DOT_S      reduce using rule 2 (translation -> translation statement .)
    JUMP_DOT_L      reduce using rule 2 (translation -> translation statement .)
    NOP             reduce using rule 2 (translation -> translation statement .)
    MNOP            reduce using rule 2 (translation -> translation statement .)
    IDLE            reduce using rule 2 (translation -> translation statement .)
    B               reduce using rule 2 (translation -> translation statement .)
    W               reduce using rule 2 (translation -> translation statement .)
    LBRACK          reduce using rule 2 (translation -> translation statement .)
    ABORT           reduce using rule 2 (translation -> translation statement .)
    CSYNC           reduce using rule 2 (translation -> translation statement .)
    SSYNC           reduce using rule 2 (translation -> translation statement .)
    EMUEXCPT        reduce using rule 2 (translation -> translation statement .)
    CLI             reduce using rule 2 (translation -> translation statement .)
    STI             reduce using rule 2 (translation -> translation statement .)
    DISALGNEXCPT    reduce using rule 2 (translation -> translation statement .)
    DBG             reduce using rule 2 (translation -> translation statement .)
    DBGCMPLX        reduce using rule 2 (translation -> translation statement .)
    DBGHALT         reduce using rule 2 (translation -> translation statement .)
    HLT             reduce using rule 2 (translation -> translation statement .)
    DBGA            reduce using rule 2 (translation -> translation statement .)
    DBGAH           reduce using rule 2 (translation -> translation statement .)
    DBGAL           reduce using rule 2 (translation -> translation statement .)
    OUTC            reduce using rule 2 (translation -> translation statement .)
    LSETUP          reduce using rule 2 (translation -> translation statement .)
    LOOP            reduce using rule 2 (translation -> translation statement .)
    LOOP_BEGIN      reduce using rule 2 (translation -> translation statement .)
    LOOP_END        reduce using rule 2 (translation -> translation statement .)
    BITMUX          reduce using rule 2 (translation -> translation statement .)
    BITCLR          reduce using rule 2 (translation -> translation statement .)
    BITSET          reduce using rule 2 (translation -> translation statement .)
    BITTGL          reduce using rule 2 (translation -> translation statement .)
    DIVQ            reduce using rule 2 (translation -> translation statement .)
    DIVS            reduce using rule 2 (translation -> translation statement .)
    REG_A_DOUBLE_ZERO reduce using rule 2 (translation -> translation statement .)
    REG_A_DOUBLE_ONE reduce using rule 2 (translation -> translation statement .)
    RTS             reduce using rule 2 (translation -> translation statement .)
    RTI             reduce using rule 2 (translation -> translation statement .)
    RTX             reduce using rule 2 (translation -> translation statement .)
    RTN             reduce using rule 2 (translation -> translation statement .)
    RTE             reduce using rule 2 (translation -> translation statement .)
    LINK            reduce using rule 2 (translation -> translation statement .)
    UNLINK          reduce using rule 2 (translation -> translation statement .)
    FLUSH           reduce using rule 2 (translation -> translation statement .)
    FLUSHINV        reduce using rule 2 (translation -> translation statement .)
    IFLUSH          reduce using rule 2 (translation -> translation statement .)
    PREFETCH        reduce using rule 2 (translation -> translation statement .)
    STATUS_REG      reduce using rule 2 (translation -> translation statement .)
    V               reduce using rule 2 (translation -> translation statement .)
    $end            reduce using rule 2 (translation -> translation statement .)


state 111

    (388) expr_1 -> eterm .

    STAR            reduce using rule 388 (expr_1 -> eterm .)
    SLASH           reduce using rule 388 (expr_1 -> eterm .)
    PERCENT         reduce using rule 388 (expr_1 -> eterm .)
    PLUS            reduce using rule 388 (expr_1 -> eterm .)
    MINUS           reduce using rule 388 (expr_1 -> eterm .)
    LESS_LESS       reduce using rule 388 (expr_1 -> eterm .)
    GREATER_GREATER reduce using rule 388 (expr_1 -> eterm .)
    AMPERSAND       reduce using rule 388 (expr_1 -> eterm .)
    CARET           reduce using rule 388 (expr_1 -> eterm .)
    BAR             reduce using rule 388 (expr_1 -> eterm .)
    SEMICOLON       reduce using rule 388 (expr_1 -> eterm .)
    DOUBLE_BAR      reduce using rule 388 (expr_1 -> eterm .)
    REG             reduce using rule 388 (expr_1 -> eterm .)
    RPAREN          reduce using rule 388 (expr_1 -> eterm .)
    COMMA           reduce using rule 388 (expr_1 -> eterm .)
    LPAREN          reduce using rule 388 (expr_1 -> eterm .)
    RBRACK          reduce using rule 388 (expr_1 -> eterm .)


state 112

    (374) eterm -> LPAREN . expr_1 RPAREN
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 215

state 113

    (375) eterm -> TILDA . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 216

state 114

    (250) other -> OUTC expr .

    SEMICOLON       reduce using rule 250 (other -> OUTC expr .)
    DOUBLE_BAR      reduce using rule 250 (other -> OUTC expr .)


state 115

    (372) eterm -> NUMBER .

    STAR            reduce using rule 372 (eterm -> NUMBER .)
    SLASH           reduce using rule 372 (eterm -> NUMBER .)
    PERCENT         reduce using rule 372 (eterm -> NUMBER .)
    PLUS            reduce using rule 372 (eterm -> NUMBER .)
    MINUS           reduce using rule 372 (eterm -> NUMBER .)
    LESS_LESS       reduce using rule 372 (eterm -> NUMBER .)
    GREATER_GREATER reduce using rule 372 (eterm -> NUMBER .)
    AMPERSAND       reduce using rule 372 (eterm -> NUMBER .)
    CARET           reduce using rule 372 (eterm -> NUMBER .)
    BAR             reduce using rule 372 (eterm -> NUMBER .)
    LPAREN          reduce using rule 372 (eterm -> NUMBER .)
    SEMICOLON       reduce using rule 372 (eterm -> NUMBER .)
    DOUBLE_BAR      reduce using rule 372 (eterm -> NUMBER .)
    RPAREN          reduce using rule 372 (eterm -> NUMBER .)
    RBRACK          reduce using rule 372 (eterm -> NUMBER .)
    COMMA           reduce using rule 372 (eterm -> NUMBER .)
    REG             reduce using rule 372 (eterm -> NUMBER .)


state 116

    (376) eterm -> MINUS . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 217

state 117

    (373) eterm -> symbol .

    STAR            reduce using rule 373 (eterm -> symbol .)
    SLASH           reduce using rule 373 (eterm -> symbol .)
    PERCENT         reduce using rule 373 (eterm -> symbol .)
    PLUS            reduce using rule 373 (eterm -> symbol .)
    MINUS           reduce using rule 373 (eterm -> symbol .)
    LESS_LESS       reduce using rule 373 (eterm -> symbol .)
    GREATER_GREATER reduce using rule 373 (eterm -> symbol .)
    AMPERSAND       reduce using rule 373 (eterm -> symbol .)
    CARET           reduce using rule 373 (eterm -> symbol .)
    BAR             reduce using rule 373 (eterm -> symbol .)
    LPAREN          reduce using rule 373 (eterm -> symbol .)
    SEMICOLON       reduce using rule 373 (eterm -> symbol .)
    DOUBLE_BAR      reduce using rule 373 (eterm -> symbol .)
    RPAREN          reduce using rule 373 (eterm -> symbol .)
    RBRACK          reduce using rule 373 (eterm -> symbol .)
    COMMA           reduce using rule 373 (eterm -> symbol .)
    REG             reduce using rule 373 (eterm -> symbol .)


state 118

    (364) symbol -> SYMBOL .

    STAR            reduce using rule 364 (symbol -> SYMBOL .)
    SLASH           reduce using rule 364 (symbol -> SYMBOL .)
    PERCENT         reduce using rule 364 (symbol -> SYMBOL .)
    PLUS            reduce using rule 364 (symbol -> SYMBOL .)
    MINUS           reduce using rule 364 (symbol -> SYMBOL .)
    LESS_LESS       reduce using rule 364 (symbol -> SYMBOL .)
    GREATER_GREATER reduce using rule 364 (symbol -> SYMBOL .)
    AMPERSAND       reduce using rule 364 (symbol -> SYMBOL .)
    CARET           reduce using rule 364 (symbol -> SYMBOL .)
    BAR             reduce using rule 364 (symbol -> SYMBOL .)
    SEMICOLON       reduce using rule 364 (symbol -> SYMBOL .)
    DOUBLE_BAR      reduce using rule 364 (symbol -> SYMBOL .)
    LPAREN          reduce using rule 364 (symbol -> SYMBOL .)
    COMMA           reduce using rule 364 (symbol -> SYMBOL .)
    RPAREN          reduce using rule 364 (symbol -> SYMBOL .)
    REG             reduce using rule 364 (symbol -> SYMBOL .)
    RBRACK          reduce using rule 364 (symbol -> SYMBOL .)
    AT              reduce using rule 364 (symbol -> SYMBOL .)


state 119

    (251) other -> OUTC REG .

    SEMICOLON       reduce using rule 251 (other -> OUTC REG .)
    DOUBLE_BAR      reduce using rule 251 (other -> OUTC REG .)


state 120

    (377) expr -> expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    LPAREN          reduce using rule 377 (expr -> expr_1 .)
    SEMICOLON       reduce using rule 377 (expr -> expr_1 .)
    DOUBLE_BAR      reduce using rule 377 (expr -> expr_1 .)
    RPAREN          reduce using rule 377 (expr -> expr_1 .)
    RBRACK          reduce using rule 377 (expr -> expr_1 .)
    COMMA           reduce using rule 377 (expr -> expr_1 .)
    REG             reduce using rule 377 (expr -> expr_1 .)
    STAR            shift and go to state 220
    SLASH           shift and go to state 225
    PERCENT         shift and go to state 222
    PLUS            shift and go to state 223
    MINUS           shift and go to state 227
    LESS_LESS       shift and go to state 218
    GREATER_GREATER shift and go to state 221
    AMPERSAND       shift and go to state 226
    CARET           shift and go to state 219
    BAR             shift and go to state 224


state 121

    (244) other -> DBGCMPLX LPAREN . REG RPAREN

    REG             shift and go to state 228


state 122

    (144) bitlogic -> BITTGL LPAREN . REG COMMA expr RPAREN

    REG             shift and go to state 229


state 123

    (187) cache -> FLUSHINV LBRACK . REG RBRACK
    (311) reg_with_postinc -> LBRACK . REG _PLUS_PLUS RBRACK

    REG             shift and go to state 230


state 124

    (188) cache -> FLUSHINV reg_with_postinc .

    SEMICOLON       reduce using rule 188 (cache -> FLUSHINV reg_with_postinc .)
    DOUBLE_BAR      reduce using rule 188 (cache -> FLUSHINV reg_with_postinc .)


state 125

    (242) other -> DBG REG_A .

    SEMICOLON       reduce using rule 242 (other -> DBG REG_A .)
    DOUBLE_BAR      reduce using rule 242 (other -> DBG REG_A .)


state 126

    (243) other -> DBG REG .

    SEMICOLON       reduce using rule 243 (other -> DBG REG .)
    DOUBLE_BAR      reduce using rule 243 (other -> DBG REG .)


state 127

    (73) dspalu -> REG_A _PLUS_ASSIGN . REG_A w32_or_nothing
    (337) a_plusassign -> REG_A _PLUS_ASSIGN .
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    HALF_REG        reduce using rule 337 (a_plusassign -> REG_A _PLUS_ASSIGN .)
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 231

state 128

    (335) a_assign -> REG_A ASSIGN .

    HALF_REG        reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    ABS             reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    MINUS           reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    REG             reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    ASHIFT          reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    LSHIFT          reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    ROT             reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    BXORSHIFT       reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    REG_A_DOUBLE_ZERO reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    REG_A_DOUBLE_ONE reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    NUMBER          reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    LPAREN          reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    TILDA           reduce using rule 335 (a_assign -> REG_A ASSIGN .)
    SYMBOL          reduce using rule 335 (a_assign -> REG_A ASSIGN .)


state 129

    (336) a_minusassign -> REG_A _MINUS_ASSIGN .

    HALF_REG        reduce using rule 336 (a_minusassign -> REG_A _MINUS_ASSIGN .)
    REG_A_DOUBLE_ZERO reduce using rule 336 (a_minusassign -> REG_A _MINUS_ASSIGN .)
    REG_A_DOUBLE_ONE reduce using rule 336 (a_minusassign -> REG_A _MINUS_ASSIGN .)


state 130

    (247) other -> DBGA LPAREN . HALF_REG COMMA expr RPAREN

    HALF_REG        shift and go to state 232


state 131

    (27) dspalu -> HALF_REG ASSIGN . LPAREN a_plusassign REG_A RPAREN
    (48) dspalu -> HALF_REG ASSIGN . HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG
    (52) dspalu -> HALF_REG ASSIGN . HALF_REG plus_minus HALF_REG amod1
    (55) dspalu -> HALF_REG ASSIGN . REG LPAREN RND RPAREN
    (56) dspalu -> HALF_REG ASSIGN . REG plus_minus REG LPAREN RND12 RPAREN
    (57) dspalu -> HALF_REG ASSIGN . REG plus_minus REG LPAREN RND20 RPAREN
    (61) dspalu -> HALF_REG ASSIGN . expr
    (64) dspalu -> HALF_REG ASSIGN . REG
    (98) dspmult -> HALF_REG ASSIGN . multiply_halfregs opt_mode
    (101) dspmult -> HALF_REG ASSIGN . multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode
    (106) dspshift -> HALF_REG ASSIGN . ASHIFT HALF_REG BY HALF_REG smod
    (109) dspshift -> HALF_REG ASSIGN . HALF_REG LESS_LESS expr smod
    (201) loadstore -> HALF_REG ASSIGN . W LBRACK REG post_op RBRACK
    (204) loadstore -> HALF_REG ASSIGN . W LBRACK REG _PLUS_PLUS REG RBRACK
    (111) expadj -> HALF_REG ASSIGN . EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod
    (112) expadj -> HALF_REG ASSIGN . EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN
    (118) deposit -> HALF_REG ASSIGN . LSHIFT HALF_REG BY HALF_REG
    (123) deposit -> HALF_REG ASSIGN . HALF_REG GREATER_GREATER expr
    (124) deposit -> HALF_REG ASSIGN . HALF_REG _GREATER_GREATER_GREATER expr smod
    (126) deposit -> HALF_REG ASSIGN . ONES REG
    (128) deposit -> HALF_REG ASSIGN . CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN
    (129) deposit -> HALF_REG ASSIGN . CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN
    (130) deposit -> HALF_REG ASSIGN . CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (135) deposit -> HALF_REG ASSIGN . SIGNBITS REG_A
    (136) deposit -> HALF_REG ASSIGN . SIGNBITS REG
    (137) deposit -> HALF_REG ASSIGN . SIGNBITS HALF_REG
    (138) deposit -> HALF_REG ASSIGN . VIT_MAX LPAREN REG RPAREN asr_asl
    (341) assign_macfunc -> HALF_REG ASSIGN . LPAREN a_macfunc RPAREN
    (342) assign_macfunc -> HALF_REG ASSIGN . REG_A
    (377) expr -> . expr_1
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    LPAREN          shift and go to state 243
    HALF_REG        shift and go to state 236
    REG             shift and go to state 239
    ASHIFT          shift and go to state 246
    W               shift and go to state 233
    EXPADJ          shift and go to state 240
    LSHIFT          shift and go to state 235
    ONES            shift and go to state 242
    CCREG           shift and go to state 237
    SIGNBITS        shift and go to state 241
    VIT_MAX         shift and go to state 238
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    NUMBER          shift and go to state 115
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr                           shift and go to state 245
    symbol                         shift and go to state 117
    REG_A                          shift and go to state 234
    multiply_halfregs              shift and go to state 244
    expr_1                         shift and go to state 120

state 132

    (5) asm -> parallel_instructions SEMICOLON .

    error           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    REG             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    HALF_REG        reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    A_ZERO_DOT_H    reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    A_ONE_DOT_H     reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    LPAREN          reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    A_ZERO_DOT_L    reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    A_ONE_DOT_L     reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    SAA             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    CCREG           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    IF              reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    JUMP            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    CALL            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    RAISE           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    EXCPT           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    TESTSET         reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    JUMP_DOT_S      reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    JUMP_DOT_L      reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    NOP             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    MNOP            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    IDLE            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    B               reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    W               reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    LBRACK          reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    ABORT           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    CSYNC           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    SSYNC           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    EMUEXCPT        reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    CLI             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    STI             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    DISALGNEXCPT    reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    DBG             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    DBGCMPLX        reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    DBGHALT         reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    HLT             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    DBGA            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    DBGAH           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    DBGAL           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    OUTC            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    LSETUP          reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    LOOP            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    LOOP_BEGIN      reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    LOOP_END        reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    BITMUX          reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    BITCLR          reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    BITSET          reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    BITTGL          reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    DIVQ            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    DIVS            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    REG_A_DOUBLE_ZERO reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    REG_A_DOUBLE_ONE reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    RTS             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    RTI             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    RTX             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    RTN             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    RTE             reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    LINK            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    UNLINK          reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    FLUSH           reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    FLUSHINV        reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    IFLUSH          reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    PREFETCH        reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    STATUS_REG      reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    V               reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)
    $end            reduce using rule 5 (asm -> parallel_instructions SEMICOLON .)


state 133

    (4) asm -> asm_1 SEMICOLON .

    error           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    REG             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    HALF_REG        reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    A_ZERO_DOT_H    reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    A_ONE_DOT_H     reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    LPAREN          reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    A_ZERO_DOT_L    reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    A_ONE_DOT_L     reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    SAA             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    CCREG           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    IF              reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    JUMP            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    CALL            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    RAISE           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    EXCPT           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    TESTSET         reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    JUMP_DOT_S      reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    JUMP_DOT_L      reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    NOP             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    MNOP            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    IDLE            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    B               reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    W               reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    LBRACK          reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    ABORT           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    CSYNC           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    SSYNC           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    EMUEXCPT        reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    CLI             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    STI             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    DISALGNEXCPT    reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    DBG             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    DBGCMPLX        reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    DBGHALT         reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    HLT             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    DBGA            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    DBGAH           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    DBGAL           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    OUTC            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    LSETUP          reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    LOOP            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    LOOP_BEGIN      reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    LOOP_END        reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    BITMUX          reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    BITCLR          reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    BITSET          reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    BITTGL          reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    DIVQ            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    DIVS            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    REG_A_DOUBLE_ZERO reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    REG_A_DOUBLE_ONE reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    RTS             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    RTI             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    RTX             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    RTN             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    RTE             reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    LINK            reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    UNLINK          reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    FLUSH           reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    FLUSHINV        reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    IFLUSH          reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    PREFETCH        reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    STATUS_REG      reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    V               reduce using rule 4 (asm -> asm_1 SEMICOLON .)
    $end            reduce using rule 4 (asm -> asm_1 SEMICOLON .)


state 134

    (15) parallel_instructions -> asm_1 DOUBLE_BAR . asm_1 DOUBLE_BAR asm_1
    (16) parallel_instructions -> asm_1 DOUBLE_BAR . asm_1
    (7) asm_1 -> . dspalu
    (8) asm_1 -> . dspmult
    (9) asm_1 -> . dspshift
    (10) asm_1 -> . jump
    (11) asm_1 -> . nop
    (12) asm_1 -> . idle
    (13) asm_1 -> . loadstore
    (14) asm_1 -> . other
    (19) dspalu -> . comp
    (20) dspalu -> . loophardware
    (21) dspalu -> . vector_mac
    (22) dspalu -> . expadj
    (23) dspalu -> . deposit
    (24) dspalu -> . bitlogic
    (25) dspalu -> . alu2
    (26) dspalu -> . REG ASSIGN LPAREN a_plusassign REG_A RPAREN
    (27) dspalu -> . HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN
    (28) dspalu -> . A_ZERO_DOT_H ASSIGN HALF_REG
    (29) dspalu -> . A_ONE_DOT_H ASSIGN HALF_REG
    (30) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN
    (34) dspalu -> . REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H
    (35) dspalu -> . REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1
    (36) dspalu -> . REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1
    (37) dspalu -> . REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2
    (38) dspalu -> . REG ASSIGN ABS REG vmod
    (39) dspalu -> . a_assign ABS REG_A
    (40) dspalu -> . A_ZERO_DOT_L ASSIGN HALF_REG
    (41) dspalu -> . A_ONE_DOT_L ASSIGN HALF_REG
    (42) dspalu -> . REG ASSIGN c_align LPAREN REG COMMA REG RPAREN
    (43) dspalu -> . REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> . REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (45) dspalu -> . REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op
    (46) dspalu -> . REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op
    (47) dspalu -> . REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN
    (48) dspalu -> . HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG
    (49) dspalu -> . REG ASSIGN REG plus_minus REG amod1
    (50) dspalu -> . REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod
    (51) dspalu -> . a_assign MINUS REG_A
    (52) dspalu -> . HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1
    (53) dspalu -> . a_assign a_assign expr
    (54) dspalu -> . a_assign REG_A LPAREN S RPAREN
    (55) dspalu -> . HALF_REG ASSIGN REG LPAREN RND RPAREN
    (56) dspalu -> . HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN
    (57) dspalu -> . HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN
    (58) dspalu -> . a_assign REG_A
    (59) dspalu -> . a_assign REG
    (60) dspalu -> . REG ASSIGN HALF_REG xpmod
    (61) dspalu -> . HALF_REG ASSIGN expr
    (62) dspalu -> . a_assign expr
    (63) dspalu -> . REG ASSIGN expr xpmod1
    (64) dspalu -> . HALF_REG ASSIGN REG
    (65) dspalu -> . REG ASSIGN REG op_bar_op REG amod0
    (66) dspalu -> . REG ASSIGN BYTE_DREG xpmod
    (67) dspalu -> . a_assign ABS REG_A COMMA a_assign ABS REG_A
    (68) dspalu -> . a_assign MINUS REG_A COMMA a_assign MINUS REG_A
    (69) dspalu -> . a_minusassign REG_A w32_or_nothing
    (70) dspalu -> . REG _MINUS_ASSIGN expr
    (71) dspalu -> . REG _PLUS_ASSIGN REG LPAREN BREV RPAREN
    (72) dspalu -> . REG _MINUS_ASSIGN REG
    (73) dspalu -> . REG_A _PLUS_ASSIGN REG_A w32_or_nothing
    (74) dspalu -> . REG _PLUS_ASSIGN REG
    (75) dspalu -> . REG _PLUS_ASSIGN expr
    (76) dspalu -> . REG _STAR_ASSIGN REG
    (77) dspalu -> . SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (78) dspalu -> . a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN
    (79) dspalu -> . REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr
    (98) dspmult -> . HALF_REG ASSIGN multiply_halfregs opt_mode
    (99) dspmult -> . REG ASSIGN multiply_regs opt_mode
    (100) dspmult -> . REG ASSIGN multiply_halfregs opt_mode
    (101) dspmult -> . HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode
    (102) dspmult -> . REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode
    (103) dspmult -> . a_full_macfunc opt_mode
    (104) dspmult -> . assign_full_macfunc opt_mode
    (105) dspshift -> . a_assign ASHIFT REG_A BY HALF_REG
    (106) dspshift -> . HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod
    (107) dspshift -> . a_assign REG_A LESS_LESS expr
    (108) dspshift -> . REG ASSIGN REG LESS_LESS expr vsmod
    (109) dspshift -> . HALF_REG ASSIGN HALF_REG LESS_LESS expr smod
    (110) dspshift -> . REG ASSIGN ASHIFT REG BY HALF_REG vsmod
    (145) jump -> . CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN
    (146) jump -> . return
    (147) jump -> . CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN
    (148) jump -> . IF BANG CCREG REG ASSIGN REG
    (149) jump -> . IF CCREG REG ASSIGN REG
    (150) jump -> . IF BANG CCREG JUMP expr
    (151) jump -> . IF BANG CCREG JUMP expr LPAREN BP RPAREN
    (152) jump -> . IF CCREG JUMP expr
    (153) jump -> . IF CCREG JUMP expr LPAREN BP RPAREN
    (154) jump -> . JUMP LPAREN REG RPAREN
    (155) jump -> . CALL LPAREN REG RPAREN
    (156) jump -> . CALL LPAREN PC PLUS REG RPAREN
    (157) jump -> . JUMP LPAREN PC PLUS REG RPAREN
    (158) jump -> . RAISE expr
    (159) jump -> . EXCPT expr
    (160) jump -> . TESTSET LPAREN REG RPAREN
    (161) jump -> . JUMP expr
    (162) jump -> . JUMP_DOT_S expr
    (163) jump -> . JUMP_DOT_L expr
    (164) jump -> . JUMP_DOT_L pltpc
    (165) jump -> . CALL expr
    (166) jump -> . CALL pltpc
    (172) nop -> . NOP
    (173) nop -> . MNOP
    (174) idle -> . IDLE
    (193) loadstore -> . pushpopmultiple
    (194) loadstore -> . B LBRACK REG post_op RBRACK ASSIGN REG
    (195) loadstore -> . B LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (196) loadstore -> . W LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (197) loadstore -> . W LBRACK REG post_op RBRACK ASSIGN REG
    (198) loadstore -> . W LBRACK REG post_op RBRACK ASSIGN HALF_REG
    (199) loadstore -> . LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (200) loadstore -> . REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod
    (201) loadstore -> . HALF_REG ASSIGN W LBRACK REG post_op RBRACK
    (202) loadstore -> . REG ASSIGN W LBRACK REG post_op RBRACK xpmod
    (203) loadstore -> . REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod
    (204) loadstore -> . HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK
    (205) loadstore -> . LBRACK REG post_op RBRACK ASSIGN REG
    (206) loadstore -> . LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG
    (207) loadstore -> . W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG
    (208) loadstore -> . REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod
    (209) loadstore -> . REG ASSIGN B LBRACK REG post_op RBRACK xpmod
    (210) loadstore -> . REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK
    (211) loadstore -> . REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK
    (212) loadstore -> . REG ASSIGN LBRACK REG post_op RBRACK
    (232) other -> . ABORT
    (233) other -> . linkage
    (234) other -> . cache
    (235) other -> . CSYNC
    (236) other -> . SSYNC
    (237) other -> . EMUEXCPT
    (238) other -> . CLI REG
    (239) other -> . STI REG
    (240) other -> . DISALGNEXCPT
    (241) other -> . DBG
    (242) other -> . DBG REG_A
    (243) other -> . DBG REG
    (244) other -> . DBGCMPLX LPAREN REG RPAREN
    (245) other -> . DBGHALT
    (246) other -> . HLT
    (247) other -> . DBGA LPAREN HALF_REG COMMA expr RPAREN
    (248) other -> . DBGAH LPAREN REG COMMA expr RPAREN
    (249) other -> . DBGAL LPAREN REG COMMA expr RPAREN
    (250) other -> . OUTC expr
    (251) other -> . OUTC REG
    (80) comp -> . REG ASSIGN REG BAR REG
    (81) comp -> . REG ASSIGN REG CARET REG
    (82) comp -> . REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN
    (83) comp -> . CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A
    (84) comp -> . CCREG ASSIGN REG_A LESS_THAN REG_A
    (85) comp -> . CCREG ASSIGN REG LESS_THAN REG iu_or_nothing
    (86) comp -> . CCREG ASSIGN REG LESS_THAN expr iu_or_nothing
    (87) comp -> . CCREG ASSIGN REG _ASSIGN_ASSIGN REG
    (88) comp -> . CCREG ASSIGN REG _ASSIGN_ASSIGN expr
    (89) comp -> . CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A
    (90) comp -> . CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing
    (91) comp -> . CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing
    (92) comp -> . REG ASSIGN REG AMPERSAND REG
    (93) comp -> . ccstat
    (94) comp -> . REG ASSIGN REG
    (95) comp -> . CCREG ASSIGN REG
    (96) comp -> . REG ASSIGN CCREG
    (97) comp -> . CCREG _ASSIGN_BANG CCREG
    (220) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG
    (221) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG
    (222) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr
    (223) loophardware -> . LOOP expr REG
    (224) loophardware -> . LOOP expr REG ASSIGN REG
    (225) loophardware -> . LOOP expr REG ASSIGN REG GREATER_GREATER expr
    (226) loophardware -> . LOOP_BEGIN NUMBER
    (227) loophardware -> . LOOP_BEGIN expr
    (228) loophardware -> . LOOP_END NUMBER
    (229) loophardware -> . LOOP_END expr
    (230) loophardware -> . LOOP REG ASSIGN NUMBER
    (231) loophardware -> . LOOP_END
    (17) vector_mac -> . assign_macfunc opt_mode COMMA assign_macfunc opt_mode
    (18) vector_mac -> . assign_macfunc opt_mode
    (111) expadj -> . HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod
    (112) expadj -> . HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN
    (113) deposit -> . REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN
    (114) deposit -> . REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN
    (115) deposit -> . REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod
    (116) deposit -> . a_assign REG_A _GREATER_GREATER_GREATER expr
    (117) deposit -> . a_assign LSHIFT REG_A BY HALF_REG
    (118) deposit -> . HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG
    (119) deposit -> . REG ASSIGN LSHIFT REG BY HALF_REG vmod
    (120) deposit -> . REG ASSIGN SHIFT REG BY HALF_REG
    (121) deposit -> . a_assign REG_A GREATER_GREATER expr
    (122) deposit -> . REG ASSIGN REG GREATER_GREATER expr vmod
    (123) deposit -> . HALF_REG ASSIGN HALF_REG GREATER_GREATER expr
    (124) deposit -> . HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod
    (125) deposit -> . REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod
    (126) deposit -> . HALF_REG ASSIGN ONES REG
    (127) deposit -> . REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN
    (128) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN
    (129) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN
    (130) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (131) deposit -> . a_assign ROT REG_A BY HALF_REG
    (132) deposit -> . REG ASSIGN ROT REG BY HALF_REG
    (133) deposit -> . a_assign ROT REG_A BY expr
    (134) deposit -> . REG ASSIGN ROT REG BY expr
    (135) deposit -> . HALF_REG ASSIGN SIGNBITS REG_A
    (136) deposit -> . HALF_REG ASSIGN SIGNBITS REG
    (137) deposit -> . HALF_REG ASSIGN SIGNBITS HALF_REG
    (138) deposit -> . HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl
    (139) deposit -> . REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl
    (140) deposit -> . BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl
    (141) deposit -> . a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (142) bitlogic -> . BITCLR LPAREN REG COMMA expr RPAREN
    (143) bitlogic -> . BITSET LPAREN REG COMMA expr RPAREN
    (144) bitlogic -> . BITTGL LPAREN REG COMMA expr RPAREN
    (175) alu2 -> . DIVQ LPAREN REG COMMA REG RPAREN
    (176) alu2 -> . DIVS LPAREN REG COMMA REG RPAREN
    (177) alu2 -> . REG ASSIGN MINUS REG vsmod
    (178) alu2 -> . REG ASSIGN TILDA REG
    (179) alu2 -> . REG _GREATER_GREATER_ASSIGN REG
    (180) alu2 -> . REG _GREATER_GREATER_ASSIGN expr
    (181) alu2 -> . REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG
    (182) alu2 -> . REG _LESS_LESS_ASSIGN REG
    (183) alu2 -> . REG _LESS_LESS_ASSIGN expr
    (184) alu2 -> . REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr
    (335) a_assign -> . REG_A ASSIGN
    (336) a_minusassign -> . REG_A _MINUS_ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (351) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs
    (343) assign_full_macfunc -> . REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (344) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN multiply_regs
    (346) assign_full_macfunc -> . REG ASSIGN LPAREN a_full_macfunc RPAREN
    (347) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN
    (167) return -> . RTS
    (168) return -> . RTI
    (169) return -> . RTX
    (170) return -> . RTN
    (171) return -> . RTE
    (213) pushpopmultiple -> . reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> . reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN
    (215) pushpopmultiple -> . LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc
    (216) pushpopmultiple -> . LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc
    (217) pushpopmultiple -> . reg_with_predec ASSIGN REG
    (218) linkage -> . LINK expr
    (219) linkage -> . UNLINK
    (185) cache -> . FLUSH LBRACK REG RBRACK
    (186) cache -> . FLUSH reg_with_postinc
    (187) cache -> . FLUSHINV LBRACK REG RBRACK
    (188) cache -> . FLUSHINV reg_with_postinc
    (189) cache -> . IFLUSH LBRACK REG RBRACK
    (190) cache -> . IFLUSH reg_with_postinc
    (191) cache -> . PREFETCH LBRACK REG RBRACK
    (192) cache -> . PREFETCH reg_with_postinc
    (360) ccstat -> . CCREG cc_op STATUS_REG
    (361) ccstat -> . CCREG cc_op V
    (362) ccstat -> . STATUS_REG cc_op CCREG
    (363) ccstat -> . V cc_op CCREG
    (338) assign_macfunc -> . REG ASSIGN REG_A
    (339) assign_macfunc -> . a_macfunc
    (340) assign_macfunc -> . REG ASSIGN LPAREN a_macfunc RPAREN
    (341) assign_macfunc -> . HALF_REG ASSIGN LPAREN a_macfunc RPAREN
    (342) assign_macfunc -> . HALF_REG ASSIGN REG_A
    (310) reg_with_predec -> . LBRACK _MINUS_MINUS REG RBRACK
    (348) a_macfunc -> . a_assign multiply_halfregs
    (349) a_macfunc -> . a_plusassign multiply_halfregs
    (350) a_macfunc -> . a_minusassign multiply_halfregs
    (337) a_plusassign -> . REG_A _PLUS_ASSIGN

    REG             shift and go to state 57
    HALF_REG        shift and go to state 32
    A_ZERO_DOT_H    shift and go to state 3
    A_ONE_DOT_H     shift and go to state 11
    LPAREN          shift and go to state 89
    A_ZERO_DOT_L    shift and go to state 2
    A_ONE_DOT_L     shift and go to state 9
    SAA             shift and go to state 53
    CCREG           shift and go to state 41
    IF              shift and go to state 62
    JUMP            shift and go to state 68
    CALL            shift and go to state 96
    RAISE           shift and go to state 54
    EXCPT           shift and go to state 78
    TESTSET         shift and go to state 76
    JUMP_DOT_S      shift and go to state 91
    JUMP_DOT_L      shift and go to state 98
    NOP             shift and go to state 52
    MNOP            shift and go to state 66
    IDLE            shift and go to state 59
    B               shift and go to state 64
    W               shift and go to state 44
    LBRACK          shift and go to state 48
    ABORT           shift and go to state 26
    CSYNC           shift and go to state 92
    SSYNC           shift and go to state 61
    EMUEXCPT        shift and go to state 4
    CLI             shift and go to state 80
    STI             shift and go to state 87
    DISALGNEXCPT    shift and go to state 40
    DBG             shift and go to state 25
    DBGCMPLX        shift and go to state 18
    DBGHALT         shift and go to state 86
    HLT             shift and go to state 47
    DBGA            shift and go to state 29
    DBGAH           shift and go to state 84
    DBGAL           shift and go to state 79
    OUTC            shift and go to state 17
    LSETUP          shift and go to state 67
    LOOP            shift and go to state 51
    LOOP_BEGIN      shift and go to state 38
    LOOP_END        shift and go to state 46
    BITMUX          shift and go to state 82
    BITCLR          shift and go to state 93
    BITSET          shift and go to state 70
    BITTGL          shift and go to state 22
    DIVQ            shift and go to state 72
    DIVS            shift and go to state 71
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    RTS             shift and go to state 21
    RTI             shift and go to state 1
    RTX             shift and go to state 39
    RTN             shift and go to state 35
    RTE             shift and go to state 85
    LINK            shift and go to state 94
    UNLINK          shift and go to state 33
    FLUSH           shift and go to state 43
    FLUSHINV        shift and go to state 24
    IFLUSH          shift and go to state 69
    PREFETCH        shift and go to state 63
    STATUS_REG      shift and go to state 56
    V               shift and go to state 14

    cache                          shift and go to state 10
    REG_A                          shift and go to state 28
    jump                           shift and go to state 30
    reg_with_predec                shift and go to state 81
    pushpopmultiple                shift and go to state 55
    dspmult                        shift and go to state 5
    dspshift                       shift and go to state 31
    ccstat                         shift and go to state 6
    vector_mac                     shift and go to state 7
    dspalu                         shift and go to state 58
    asm_1                          shift and go to state 247
    idle                           shift and go to state 73
    other                          shift and go to state 83
    expadj                         shift and go to state 12
    assign_macfunc                 shift and go to state 77
    return                         shift and go to state 15
    comp                           shift and go to state 42
    a_assign                       shift and go to state 88
    a_plusassign                   shift and go to state 8
    nop                            shift and go to state 19
    bitlogic                       shift and go to state 20
    linkage                        shift and go to state 60
    loadstore                      shift and go to state 23
    a_minusassign                  shift and go to state 37
    loophardware                   shift and go to state 95
    a_full_macfunc                 shift and go to state 49
    assign_full_macfunc            shift and go to state 50
    deposit                        shift and go to state 97
    a_macfunc                      shift and go to state 75
    alu2                           shift and go to state 27

state 135

    (69) dspalu -> a_minusassign REG_A . w32_or_nothing
    (306) w32_or_nothing -> . empty
    (307) w32_or_nothing -> . LPAREN MMOD RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 249
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    w32_or_nothing                 shift and go to state 248
    empty                          shift and go to state 250

state 136

    (350) a_macfunc -> a_minusassign multiply_halfregs .

    LPAREN          reduce using rule 350 (a_macfunc -> a_minusassign multiply_halfregs .)
    COMMA           reduce using rule 350 (a_macfunc -> a_minusassign multiply_halfregs .)
    SEMICOLON       reduce using rule 350 (a_macfunc -> a_minusassign multiply_halfregs .)
    DOUBLE_BAR      reduce using rule 350 (a_macfunc -> a_minusassign multiply_halfregs .)
    RPAREN          reduce using rule 350 (a_macfunc -> a_minusassign multiply_halfregs .)


state 137

    (227) loophardware -> LOOP_BEGIN expr .

    SEMICOLON       reduce using rule 227 (loophardware -> LOOP_BEGIN expr .)
    DOUBLE_BAR      reduce using rule 227 (loophardware -> LOOP_BEGIN expr .)


state 138

    (226) loophardware -> LOOP_BEGIN NUMBER .
    (372) eterm -> NUMBER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 226 (loophardware -> LOOP_BEGIN NUMBER .)
  ! reduce/reduce conflict for DOUBLE_BAR resolved using rule 226 (loophardware -> LOOP_BEGIN NUMBER .)
    SEMICOLON       reduce using rule 226 (loophardware -> LOOP_BEGIN NUMBER .)
    DOUBLE_BAR      reduce using rule 226 (loophardware -> LOOP_BEGIN NUMBER .)
    STAR            reduce using rule 372 (eterm -> NUMBER .)
    SLASH           reduce using rule 372 (eterm -> NUMBER .)
    PERCENT         reduce using rule 372 (eterm -> NUMBER .)
    PLUS            reduce using rule 372 (eterm -> NUMBER .)
    MINUS           reduce using rule 372 (eterm -> NUMBER .)
    LESS_LESS       reduce using rule 372 (eterm -> NUMBER .)
    GREATER_GREATER reduce using rule 372 (eterm -> NUMBER .)
    AMPERSAND       reduce using rule 372 (eterm -> NUMBER .)
    CARET           reduce using rule 372 (eterm -> NUMBER .)
    BAR             reduce using rule 372 (eterm -> NUMBER .)

  ! SEMICOLON       [ reduce using rule 372 (eterm -> NUMBER .) ]
  ! DOUBLE_BAR      [ reduce using rule 372 (eterm -> NUMBER .) ]


state 139

    (147) jump -> CCREG ASSIGN . BITTST LPAREN REG COMMA expr RPAREN
    (83) comp -> CCREG ASSIGN . REG_A _ASSIGN_ASSIGN REG_A
    (84) comp -> CCREG ASSIGN . REG_A LESS_THAN REG_A
    (85) comp -> CCREG ASSIGN . REG LESS_THAN REG iu_or_nothing
    (86) comp -> CCREG ASSIGN . REG LESS_THAN expr iu_or_nothing
    (87) comp -> CCREG ASSIGN . REG _ASSIGN_ASSIGN REG
    (88) comp -> CCREG ASSIGN . REG _ASSIGN_ASSIGN expr
    (89) comp -> CCREG ASSIGN . REG_A _LESS_THAN_ASSIGN REG_A
    (90) comp -> CCREG ASSIGN . REG _LESS_THAN_ASSIGN REG iu_or_nothing
    (91) comp -> CCREG ASSIGN . REG _LESS_THAN_ASSIGN expr iu_or_nothing
    (95) comp -> CCREG ASSIGN . REG
    (356) cc_op -> ASSIGN .
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    BITTST          shift and go to state 253
    REG             shift and go to state 252
    STATUS_REG      reduce using rule 356 (cc_op -> ASSIGN .)
    V               reduce using rule 356 (cc_op -> ASSIGN .)
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 251

state 140

    (360) ccstat -> CCREG cc_op . STATUS_REG
    (361) ccstat -> CCREG cc_op . V

    STATUS_REG      shift and go to state 255
    V               shift and go to state 254


state 141

    (145) jump -> CCREG _ASSIGN_BANG . BITTST LPAREN REG COMMA expr RPAREN
    (97) comp -> CCREG _ASSIGN_BANG . CCREG

    BITTST          shift and go to state 257
    CCREG           shift and go to state 256


state 142

    (185) cache -> FLUSH LBRACK . REG RBRACK
    (311) reg_with_postinc -> LBRACK . REG _PLUS_PLUS RBRACK

    REG             shift and go to state 258


state 143

    (186) cache -> FLUSH reg_with_postinc .

    SEMICOLON       reduce using rule 186 (cache -> FLUSH reg_with_postinc .)
    DOUBLE_BAR      reduce using rule 186 (cache -> FLUSH reg_with_postinc .)


state 144

    (196) loadstore -> W LBRACK . REG plus_minus expr RBRACK ASSIGN REG
    (197) loadstore -> W LBRACK . REG post_op RBRACK ASSIGN REG
    (198) loadstore -> W LBRACK . REG post_op RBRACK ASSIGN HALF_REG
    (207) loadstore -> W LBRACK . REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG

    REG             shift and go to state 259


state 145

    (229) loophardware -> LOOP_END expr .

    SEMICOLON       reduce using rule 229 (loophardware -> LOOP_END expr .)
    DOUBLE_BAR      reduce using rule 229 (loophardware -> LOOP_END expr .)


state 146

    (228) loophardware -> LOOP_END NUMBER .
    (372) eterm -> NUMBER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 228 (loophardware -> LOOP_END NUMBER .)
  ! reduce/reduce conflict for DOUBLE_BAR resolved using rule 228 (loophardware -> LOOP_END NUMBER .)
    SEMICOLON       reduce using rule 228 (loophardware -> LOOP_END NUMBER .)
    DOUBLE_BAR      reduce using rule 228 (loophardware -> LOOP_END NUMBER .)
    STAR            reduce using rule 372 (eterm -> NUMBER .)
    SLASH           reduce using rule 372 (eterm -> NUMBER .)
    PERCENT         reduce using rule 372 (eterm -> NUMBER .)
    PLUS            reduce using rule 372 (eterm -> NUMBER .)
    MINUS           reduce using rule 372 (eterm -> NUMBER .)
    LESS_LESS       reduce using rule 372 (eterm -> NUMBER .)
    GREATER_GREATER reduce using rule 372 (eterm -> NUMBER .)
    AMPERSAND       reduce using rule 372 (eterm -> NUMBER .)
    CARET           reduce using rule 372 (eterm -> NUMBER .)
    BAR             reduce using rule 372 (eterm -> NUMBER .)

  ! SEMICOLON       [ reduce using rule 372 (eterm -> NUMBER .) ]
  ! DOUBLE_BAR      [ reduce using rule 372 (eterm -> NUMBER .) ]


state 147

    (310) reg_with_predec -> LBRACK _MINUS_MINUS . REG RBRACK

    REG             shift and go to state 260


state 148

    (199) loadstore -> LBRACK REG . plus_minus expr RBRACK ASSIGN REG
    (205) loadstore -> LBRACK REG . post_op RBRACK ASSIGN REG
    (206) loadstore -> LBRACK REG . _PLUS_PLUS REG RBRACK ASSIGN REG
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS
    (332) post_op -> . empty
    (333) post_op -> . _PLUS_PLUS
    (334) post_op -> . _MINUS_MINUS
    (389) empty -> .

    _PLUS_PLUS      shift and go to state 263
    PLUS            shift and go to state 265
    MINUS           shift and go to state 266
    _MINUS_MINUS    shift and go to state 262
    RBRACK          reduce using rule 389 (empty -> .)

    post_op                        shift and go to state 264
    empty                          shift and go to state 267
    plus_minus                     shift and go to state 261

state 149

    (103) dspmult -> a_full_macfunc opt_mode .

    DOUBLE_BAR      reduce using rule 103 (dspmult -> a_full_macfunc opt_mode .)
    SEMICOLON       reduce using rule 103 (dspmult -> a_full_macfunc opt_mode .)


state 150

    (255) opt_mode -> LPAREN . M COMMA MMOD RPAREN
    (256) opt_mode -> LPAREN . MMOD COMMA M RPAREN
    (257) opt_mode -> LPAREN . MMOD RPAREN
    (258) opt_mode -> LPAREN . M RPAREN

    M               shift and go to state 269
    MMOD            shift and go to state 268


state 151

    (254) opt_mode -> empty .

    COMMA           reduce using rule 254 (opt_mode -> empty .)
    SEMICOLON       reduce using rule 254 (opt_mode -> empty .)
    DOUBLE_BAR      reduce using rule 254 (opt_mode -> empty .)


state 152

    (104) dspmult -> assign_full_macfunc opt_mode .

    DOUBLE_BAR      reduce using rule 104 (dspmult -> assign_full_macfunc opt_mode .)
    SEMICOLON       reduce using rule 104 (dspmult -> assign_full_macfunc opt_mode .)


state 153

    (230) loophardware -> LOOP REG . ASSIGN NUMBER

    ASSIGN          shift and go to state 270


state 154

    (223) loophardware -> LOOP expr . REG
    (224) loophardware -> LOOP expr . REG ASSIGN REG
    (225) loophardware -> LOOP expr . REG ASSIGN REG GREATER_GREATER expr

    REG             shift and go to state 271


state 155

    (77) dspalu -> SAA LPAREN . REG COLON expr COMMA REG COLON expr RPAREN aligndir

    REG             shift and go to state 272


state 156

    (158) jump -> RAISE expr .

    SEMICOLON       reduce using rule 158 (jump -> RAISE expr .)
    DOUBLE_BAR      reduce using rule 158 (jump -> RAISE expr .)


state 157

    (362) ccstat -> STATUS_REG cc_op . CCREG

    CCREG           shift and go to state 273


state 158

    (182) alu2 -> REG _LESS_LESS_ASSIGN . REG
    (183) alu2 -> REG _LESS_LESS_ASSIGN . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 275
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 274
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 159

    (71) dspalu -> REG _PLUS_ASSIGN . REG LPAREN BREV RPAREN
    (74) dspalu -> REG _PLUS_ASSIGN . REG
    (75) dspalu -> REG _PLUS_ASSIGN . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 276
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 277
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 160

    (179) alu2 -> REG _GREATER_GREATER_ASSIGN . REG
    (180) alu2 -> REG _GREATER_GREATER_ASSIGN . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 279
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 278
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 161

    (26) dspalu -> REG ASSIGN . LPAREN a_plusassign REG_A RPAREN
    (34) dspalu -> REG ASSIGN . A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H
    (35) dspalu -> REG ASSIGN . REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1
    (36) dspalu -> REG ASSIGN . REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1
    (37) dspalu -> REG ASSIGN . REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2
    (38) dspalu -> REG ASSIGN . ABS REG vmod
    (42) dspalu -> REG ASSIGN . c_align LPAREN REG COMMA REG RPAREN
    (43) dspalu -> REG ASSIGN . BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN . BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (45) dspalu -> REG ASSIGN . BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op
    (46) dspalu -> REG ASSIGN . BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op
    (47) dspalu -> REG ASSIGN . BYTEPACK LPAREN REG COMMA REG RPAREN
    (49) dspalu -> REG ASSIGN . REG plus_minus REG amod1
    (50) dspalu -> REG ASSIGN . min_max LPAREN REG COMMA REG RPAREN vmod
    (60) dspalu -> REG ASSIGN . HALF_REG xpmod
    (63) dspalu -> REG ASSIGN . expr xpmod1
    (65) dspalu -> REG ASSIGN . REG op_bar_op REG amod0
    (66) dspalu -> REG ASSIGN . BYTE_DREG xpmod
    (79) dspalu -> REG ASSIGN . LPAREN REG PLUS REG RPAREN LESS_LESS expr
    (99) dspmult -> REG ASSIGN . multiply_regs opt_mode
    (100) dspmult -> REG ASSIGN . multiply_halfregs opt_mode
    (102) dspmult -> REG ASSIGN . multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode
    (108) dspshift -> REG ASSIGN . REG LESS_LESS expr vsmod
    (110) dspshift -> REG ASSIGN . ASHIFT REG BY HALF_REG vsmod
    (200) loadstore -> REG ASSIGN . W LBRACK REG plus_minus expr RBRACK xpmod
    (202) loadstore -> REG ASSIGN . W LBRACK REG post_op RBRACK xpmod
    (203) loadstore -> REG ASSIGN . W LBRACK REG _PLUS_PLUS REG RBRACK xpmod
    (208) loadstore -> REG ASSIGN . B LBRACK REG plus_minus expr RBRACK xpmod
    (209) loadstore -> REG ASSIGN . B LBRACK REG post_op RBRACK xpmod
    (210) loadstore -> REG ASSIGN . LBRACK REG _PLUS_PLUS REG RBRACK
    (211) loadstore -> REG ASSIGN . LBRACK REG plus_minus got_or_expr RBRACK
    (212) loadstore -> REG ASSIGN . LBRACK REG post_op RBRACK
    (80) comp -> REG ASSIGN . REG BAR REG
    (81) comp -> REG ASSIGN . REG CARET REG
    (82) comp -> REG ASSIGN . REG PLUS LPAREN REG LESS_LESS expr RPAREN
    (92) comp -> REG ASSIGN . REG AMPERSAND REG
    (94) comp -> REG ASSIGN . REG
    (96) comp -> REG ASSIGN . CCREG
    (113) deposit -> REG ASSIGN . DEPOSIT LPAREN REG COMMA REG RPAREN
    (114) deposit -> REG ASSIGN . DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN
    (115) deposit -> REG ASSIGN . EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod
    (119) deposit -> REG ASSIGN . LSHIFT REG BY HALF_REG vmod
    (120) deposit -> REG ASSIGN . SHIFT REG BY HALF_REG
    (122) deposit -> REG ASSIGN . REG GREATER_GREATER expr vmod
    (125) deposit -> REG ASSIGN . REG _GREATER_GREATER_GREATER expr vsmod
    (127) deposit -> REG ASSIGN . PACK LPAREN HALF_REG COMMA HALF_REG RPAREN
    (132) deposit -> REG ASSIGN . ROT REG BY HALF_REG
    (134) deposit -> REG ASSIGN . ROT REG BY expr
    (139) deposit -> REG ASSIGN . VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl
    (177) alu2 -> REG ASSIGN . MINUS REG vsmod
    (178) alu2 -> REG ASSIGN . TILDA REG
    (343) assign_full_macfunc -> REG ASSIGN . LPAREN A_ONE_COLON_ZERO RPAREN
    (346) assign_full_macfunc -> REG ASSIGN . LPAREN a_full_macfunc RPAREN
    (338) assign_macfunc -> REG ASSIGN . REG_A
    (340) assign_macfunc -> REG ASSIGN . LPAREN a_macfunc RPAREN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (303) c_align -> . ALIGN8
    (304) c_align -> . ALIGN16
    (305) c_align -> . ALIGN24
    (312) min_max -> . MIN
    (313) min_max -> . MAX
    (377) expr -> . expr_1
    (354) multiply_regs -> . REG STAR REG
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    LPAREN          shift and go to state 299
    A_ONE_DOT_L     shift and go to state 289
    REG             shift and go to state 291
    ABS             shift and go to state 297
    BYTEOP1P        shift and go to state 306
    BYTEOP2P        shift and go to state 288
    BYTEOP3P        shift and go to state 296
    BYTEPACK        shift and go to state 300
    HALF_REG        shift and go to state 287
    BYTE_DREG       shift and go to state 301
    ASHIFT          shift and go to state 313
    W               shift and go to state 281
    B               shift and go to state 311
    LBRACK          shift and go to state 307
    CCREG           shift and go to state 294
    DEPOSIT         shift and go to state 298
    EXTRACT         shift and go to state 305
    LSHIFT          shift and go to state 285
    SHIFT           shift and go to state 283
    PACK            shift and go to state 314
    ROT             shift and go to state 280
    VIT_MAX         shift and go to state 290
    MINUS           shift and go to state 286
    TILDA           shift and go to state 308
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    ALIGN8          shift and go to state 312
    ALIGN16         shift and go to state 303
    ALIGN24         shift and go to state 284
    MIN             shift and go to state 282
    MAX             shift and go to state 310
    NUMBER          shift and go to state 115
    SYMBOL          shift and go to state 118

    REG_A                          shift and go to state 293
    multiply_regs                  shift and go to state 292
    expr_1                         shift and go to state 120
    min_max                        shift and go to state 295
    symbol                         shift and go to state 117
    eterm                          shift and go to state 111
    multiply_halfregs              shift and go to state 302
    expr                           shift and go to state 304
    c_align                        shift and go to state 309

state 162

    (70) dspalu -> REG _MINUS_ASSIGN . expr
    (72) dspalu -> REG _MINUS_ASSIGN . REG
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 316
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 315
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 163

    (181) alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN . REG
    (184) alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 318
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 317
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 164

    (76) dspalu -> REG _STAR_ASSIGN . REG

    REG             shift and go to state 319


state 165

    (149) jump -> IF CCREG . REG ASSIGN REG
    (152) jump -> IF CCREG . JUMP expr
    (153) jump -> IF CCREG . JUMP expr LPAREN BP RPAREN

    REG             shift and go to state 320
    JUMP            shift and go to state 321


state 166

    (148) jump -> IF BANG . CCREG REG ASSIGN REG
    (150) jump -> IF BANG . CCREG JUMP expr
    (151) jump -> IF BANG . CCREG JUMP expr LPAREN BP RPAREN

    CCREG           shift and go to state 322


state 167

    (191) cache -> PREFETCH LBRACK . REG RBRACK
    (311) reg_with_postinc -> LBRACK . REG _PLUS_PLUS RBRACK

    REG             shift and go to state 323


state 168

    (192) cache -> PREFETCH reg_with_postinc .

    SEMICOLON       reduce using rule 192 (cache -> PREFETCH reg_with_postinc .)
    DOUBLE_BAR      reduce using rule 192 (cache -> PREFETCH reg_with_postinc .)


state 169

    (194) loadstore -> B LBRACK . REG post_op RBRACK ASSIGN REG
    (195) loadstore -> B LBRACK . REG plus_minus expr RBRACK ASSIGN REG

    REG             shift and go to state 324


state 170

    (220) loophardware -> LSETUP LPAREN . expr COMMA expr RPAREN REG
    (221) loophardware -> LSETUP LPAREN . expr COMMA expr RPAREN REG ASSIGN REG
    (222) loophardware -> LSETUP LPAREN . expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 325
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 171

    (154) jump -> JUMP LPAREN . REG RPAREN
    (157) jump -> JUMP LPAREN . PC PLUS REG RPAREN
    (374) eterm -> LPAREN . expr_1 RPAREN
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 327
    PC              shift and go to state 326
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 215

state 172

    (161) jump -> JUMP expr .

    SEMICOLON       reduce using rule 161 (jump -> JUMP expr .)
    DOUBLE_BAR      reduce using rule 161 (jump -> JUMP expr .)


state 173

    (189) cache -> IFLUSH LBRACK . REG RBRACK
    (311) reg_with_postinc -> LBRACK . REG _PLUS_PLUS RBRACK

    REG             shift and go to state 328


state 174

    (190) cache -> IFLUSH reg_with_postinc .

    SEMICOLON       reduce using rule 190 (cache -> IFLUSH reg_with_postinc .)
    DOUBLE_BAR      reduce using rule 190 (cache -> IFLUSH reg_with_postinc .)


state 175

    (143) bitlogic -> BITSET LPAREN . REG COMMA expr RPAREN

    REG             shift and go to state 329


state 176

    (176) alu2 -> DIVS LPAREN . REG COMMA REG RPAREN

    REG             shift and go to state 330


state 177

    (175) alu2 -> DIVQ LPAREN . REG COMMA REG RPAREN

    REG             shift and go to state 331


state 178

    (160) jump -> TESTSET LPAREN . REG RPAREN

    REG             shift and go to state 332


state 179

    (17) vector_mac -> assign_macfunc opt_mode . COMMA assign_macfunc opt_mode
    (18) vector_mac -> assign_macfunc opt_mode .

    COMMA           shift and go to state 333
    SEMICOLON       reduce using rule 18 (vector_mac -> assign_macfunc opt_mode .)
    DOUBLE_BAR      reduce using rule 18 (vector_mac -> assign_macfunc opt_mode .)


state 180

    (159) jump -> EXCPT expr .

    SEMICOLON       reduce using rule 159 (jump -> EXCPT expr .)
    DOUBLE_BAR      reduce using rule 159 (jump -> EXCPT expr .)


state 181

    (249) other -> DBGAL LPAREN . REG COMMA expr RPAREN

    REG             shift and go to state 334


state 182

    (238) other -> CLI REG .

    SEMICOLON       reduce using rule 238 (other -> CLI REG .)
    DOUBLE_BAR      reduce using rule 238 (other -> CLI REG .)


state 183

    (213) pushpopmultiple -> reg_with_predec ASSIGN . LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> reg_with_predec ASSIGN . LPAREN REG COLON expr RPAREN
    (217) pushpopmultiple -> reg_with_predec ASSIGN . REG

    LPAREN          shift and go to state 336
    REG             shift and go to state 335


state 184

    (140) deposit -> BITMUX LPAREN . REG COMMA REG COMMA REG_A RPAREN asr_asl

    REG             shift and go to state 337


state 185

    (248) other -> DBGAH LPAREN . REG COMMA expr RPAREN

    REG             shift and go to state 338


state 186

    (239) other -> STI REG .

    SEMICOLON       reduce using rule 239 (other -> STI REG .)
    DOUBLE_BAR      reduce using rule 239 (other -> STI REG .)


state 187

    (54) dspalu -> a_assign REG_A . LPAREN S RPAREN
    (58) dspalu -> a_assign REG_A .
    (78) dspalu -> a_assign REG_A . LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN
    (107) dspshift -> a_assign REG_A . LESS_LESS expr
    (116) deposit -> a_assign REG_A . _GREATER_GREATER_GREATER expr
    (121) deposit -> a_assign REG_A . GREATER_GREATER expr
    (335) a_assign -> REG_A . ASSIGN

    LPAREN          shift and go to state 341
    SEMICOLON       reduce using rule 58 (dspalu -> a_assign REG_A .)
    DOUBLE_BAR      reduce using rule 58 (dspalu -> a_assign REG_A .)
    LESS_LESS       shift and go to state 339
    _GREATER_GREATER_GREATER shift and go to state 342
    GREATER_GREATER shift and go to state 340
    ASSIGN          shift and go to state 128


state 188

    (117) deposit -> a_assign LSHIFT . REG_A BY HALF_REG
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 343

state 189

    (51) dspalu -> a_assign MINUS . REG_A
    (68) dspalu -> a_assign MINUS . REG_A COMMA a_assign MINUS REG_A
    (376) eterm -> MINUS . expr_1
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    symbol                         shift and go to state 117
    eterm                          shift and go to state 111
    REG_A                          shift and go to state 344
    expr_1                         shift and go to state 217

state 190

    (59) dspalu -> a_assign REG .

    SEMICOLON       reduce using rule 59 (dspalu -> a_assign REG .)
    DOUBLE_BAR      reduce using rule 59 (dspalu -> a_assign REG .)


state 191

    (141) deposit -> a_assign BXORSHIFT . LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN

    LPAREN          shift and go to state 345


state 192

    (131) deposit -> a_assign ROT . REG_A BY HALF_REG
    (133) deposit -> a_assign ROT . REG_A BY expr
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 346

state 193

    (53) dspalu -> a_assign a_assign . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 347
    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120
    symbol                         shift and go to state 117

state 194

    (39) dspalu -> a_assign ABS . REG_A
    (67) dspalu -> a_assign ABS . REG_A COMMA a_assign ABS REG_A
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 348

state 195

    (348) a_macfunc -> a_assign multiply_halfregs .

    LPAREN          reduce using rule 348 (a_macfunc -> a_assign multiply_halfregs .)
    COMMA           reduce using rule 348 (a_macfunc -> a_assign multiply_halfregs .)
    SEMICOLON       reduce using rule 348 (a_macfunc -> a_assign multiply_halfregs .)
    DOUBLE_BAR      reduce using rule 348 (a_macfunc -> a_assign multiply_halfregs .)
    RPAREN          reduce using rule 348 (a_macfunc -> a_assign multiply_halfregs .)


state 196

    (62) dspalu -> a_assign expr .

    SEMICOLON       reduce using rule 62 (dspalu -> a_assign expr .)
    DOUBLE_BAR      reduce using rule 62 (dspalu -> a_assign expr .)


state 197

    (105) dspshift -> a_assign ASHIFT . REG_A BY HALF_REG
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 349

state 198

    (351) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO . RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO . RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO . RPAREN _MINUS_ASSIGN multiply_regs

    RPAREN          shift and go to state 350


state 199

    (30) dspalu -> LPAREN REG . COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> LPAREN REG . COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> LPAREN REG . COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> LPAREN REG . COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN
    (344) assign_full_macfunc -> LPAREN REG . COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> LPAREN REG . COLON REG RPAREN ASSIGN multiply_regs
    (347) assign_full_macfunc -> LPAREN REG . COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN
    (215) pushpopmultiple -> LPAREN REG . COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc
    (216) pushpopmultiple -> LPAREN REG . COLON expr RPAREN ASSIGN reg_with_postinc

    COMMA           shift and go to state 351
    COLON           shift and go to state 352


state 200

    (162) jump -> JUMP_DOT_S expr .

    SEMICOLON       reduce using rule 162 (jump -> JUMP_DOT_S expr .)
    DOUBLE_BAR      reduce using rule 162 (jump -> JUMP_DOT_S expr .)


state 201

    (142) bitlogic -> BITCLR LPAREN . REG COMMA expr RPAREN

    REG             shift and go to state 353


state 202

    (218) linkage -> LINK expr .

    SEMICOLON       reduce using rule 218 (linkage -> LINK expr .)
    DOUBLE_BAR      reduce using rule 218 (linkage -> LINK expr .)


state 203

    (155) jump -> CALL LPAREN . REG RPAREN
    (156) jump -> CALL LPAREN . PC PLUS REG RPAREN
    (374) eterm -> LPAREN . expr_1 RPAREN
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 355
    PC              shift and go to state 354
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 215

state 204

    (371) pltpc -> symbol . AT PLTPC
    (373) eterm -> symbol .

    AT              shift and go to state 356
    STAR            reduce using rule 373 (eterm -> symbol .)
    SLASH           reduce using rule 373 (eterm -> symbol .)
    PERCENT         reduce using rule 373 (eterm -> symbol .)
    PLUS            reduce using rule 373 (eterm -> symbol .)
    MINUS           reduce using rule 373 (eterm -> symbol .)
    LESS_LESS       reduce using rule 373 (eterm -> symbol .)
    GREATER_GREATER reduce using rule 373 (eterm -> symbol .)
    AMPERSAND       reduce using rule 373 (eterm -> symbol .)
    CARET           reduce using rule 373 (eterm -> symbol .)
    BAR             reduce using rule 373 (eterm -> symbol .)
    SEMICOLON       reduce using rule 373 (eterm -> symbol .)
    DOUBLE_BAR      reduce using rule 373 (eterm -> symbol .)


state 205

    (165) jump -> CALL expr .

    SEMICOLON       reduce using rule 165 (jump -> CALL expr .)
    DOUBLE_BAR      reduce using rule 165 (jump -> CALL expr .)


state 206

    (166) jump -> CALL pltpc .

    SEMICOLON       reduce using rule 166 (jump -> CALL pltpc .)
    DOUBLE_BAR      reduce using rule 166 (jump -> CALL pltpc .)


state 207

    (163) jump -> JUMP_DOT_L expr .

    SEMICOLON       reduce using rule 163 (jump -> JUMP_DOT_L expr .)
    DOUBLE_BAR      reduce using rule 163 (jump -> JUMP_DOT_L expr .)


state 208

    (164) jump -> JUMP_DOT_L pltpc .

    SEMICOLON       reduce using rule 164 (jump -> JUMP_DOT_L pltpc .)
    DOUBLE_BAR      reduce using rule 164 (jump -> JUMP_DOT_L pltpc .)


state 209

    (40) dspalu -> A_ZERO_DOT_L ASSIGN HALF_REG .

    SEMICOLON       reduce using rule 40 (dspalu -> A_ZERO_DOT_L ASSIGN HALF_REG .)
    DOUBLE_BAR      reduce using rule 40 (dspalu -> A_ZERO_DOT_L ASSIGN HALF_REG .)


state 210

    (28) dspalu -> A_ZERO_DOT_H ASSIGN HALF_REG .

    SEMICOLON       reduce using rule 28 (dspalu -> A_ZERO_DOT_H ASSIGN HALF_REG .)
    DOUBLE_BAR      reduce using rule 28 (dspalu -> A_ZERO_DOT_H ASSIGN HALF_REG .)


state 211

    (355) multiply_halfregs -> HALF_REG STAR . HALF_REG

    HALF_REG        shift and go to state 357


state 212

    (41) dspalu -> A_ONE_DOT_L ASSIGN HALF_REG .

    SEMICOLON       reduce using rule 41 (dspalu -> A_ONE_DOT_L ASSIGN HALF_REG .)
    DOUBLE_BAR      reduce using rule 41 (dspalu -> A_ONE_DOT_L ASSIGN HALF_REG .)


state 213

    (29) dspalu -> A_ONE_DOT_H ASSIGN HALF_REG .

    SEMICOLON       reduce using rule 29 (dspalu -> A_ONE_DOT_H ASSIGN HALF_REG .)
    DOUBLE_BAR      reduce using rule 29 (dspalu -> A_ONE_DOT_H ASSIGN HALF_REG .)


state 214

    (363) ccstat -> V cc_op CCREG .

    SEMICOLON       reduce using rule 363 (ccstat -> V cc_op CCREG .)
    DOUBLE_BAR      reduce using rule 363 (ccstat -> V cc_op CCREG .)


state 215

    (374) eterm -> LPAREN expr_1 . RPAREN
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    RPAREN          shift and go to state 358
    STAR            shift and go to state 220
    SLASH           shift and go to state 225
    PERCENT         shift and go to state 222
    PLUS            shift and go to state 223
    MINUS           shift and go to state 227
    LESS_LESS       shift and go to state 218
    GREATER_GREATER shift and go to state 221
    AMPERSAND       shift and go to state 226
    CARET           shift and go to state 219
    BAR             shift and go to state 224


state 216

    (375) eterm -> TILDA expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    STAR            reduce using rule 375 (eterm -> TILDA expr_1 .)
    SLASH           reduce using rule 375 (eterm -> TILDA expr_1 .)
    PERCENT         reduce using rule 375 (eterm -> TILDA expr_1 .)
    PLUS            reduce using rule 375 (eterm -> TILDA expr_1 .)
    MINUS           reduce using rule 375 (eterm -> TILDA expr_1 .)
    LESS_LESS       reduce using rule 375 (eterm -> TILDA expr_1 .)
    GREATER_GREATER reduce using rule 375 (eterm -> TILDA expr_1 .)
    AMPERSAND       reduce using rule 375 (eterm -> TILDA expr_1 .)
    CARET           reduce using rule 375 (eterm -> TILDA expr_1 .)
    BAR             reduce using rule 375 (eterm -> TILDA expr_1 .)
    LPAREN          reduce using rule 375 (eterm -> TILDA expr_1 .)
    SEMICOLON       reduce using rule 375 (eterm -> TILDA expr_1 .)
    DOUBLE_BAR      reduce using rule 375 (eterm -> TILDA expr_1 .)
    RPAREN          reduce using rule 375 (eterm -> TILDA expr_1 .)
    RBRACK          reduce using rule 375 (eterm -> TILDA expr_1 .)
    COMMA           reduce using rule 375 (eterm -> TILDA expr_1 .)
    REG             reduce using rule 375 (eterm -> TILDA expr_1 .)

  ! STAR            [ shift and go to state 220 ]
  ! SLASH           [ shift and go to state 225 ]
  ! PERCENT         [ shift and go to state 222 ]
  ! PLUS            [ shift and go to state 223 ]
  ! MINUS           [ shift and go to state 227 ]
  ! LESS_LESS       [ shift and go to state 218 ]
  ! GREATER_GREATER [ shift and go to state 221 ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 217

    (376) eterm -> MINUS expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    STAR            reduce using rule 376 (eterm -> MINUS expr_1 .)
    SLASH           reduce using rule 376 (eterm -> MINUS expr_1 .)
    PERCENT         reduce using rule 376 (eterm -> MINUS expr_1 .)
    PLUS            reduce using rule 376 (eterm -> MINUS expr_1 .)
    MINUS           reduce using rule 376 (eterm -> MINUS expr_1 .)
    LESS_LESS       reduce using rule 376 (eterm -> MINUS expr_1 .)
    GREATER_GREATER reduce using rule 376 (eterm -> MINUS expr_1 .)
    AMPERSAND       reduce using rule 376 (eterm -> MINUS expr_1 .)
    CARET           reduce using rule 376 (eterm -> MINUS expr_1 .)
    BAR             reduce using rule 376 (eterm -> MINUS expr_1 .)
    LPAREN          reduce using rule 376 (eterm -> MINUS expr_1 .)
    SEMICOLON       reduce using rule 376 (eterm -> MINUS expr_1 .)
    DOUBLE_BAR      reduce using rule 376 (eterm -> MINUS expr_1 .)
    RPAREN          reduce using rule 376 (eterm -> MINUS expr_1 .)
    RBRACK          reduce using rule 376 (eterm -> MINUS expr_1 .)
    COMMA           reduce using rule 376 (eterm -> MINUS expr_1 .)
    REG             reduce using rule 376 (eterm -> MINUS expr_1 .)

  ! STAR            [ shift and go to state 220 ]
  ! SLASH           [ shift and go to state 225 ]
  ! PERCENT         [ shift and go to state 222 ]
  ! PLUS            [ shift and go to state 223 ]
  ! MINUS           [ shift and go to state 227 ]
  ! LESS_LESS       [ shift and go to state 218 ]
  ! GREATER_GREATER [ shift and go to state 221 ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 218

    (383) expr_1 -> expr_1 LESS_LESS . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 359

state 219

    (386) expr_1 -> expr_1 CARET . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 360

state 220

    (378) expr_1 -> expr_1 STAR . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 361

state 221

    (384) expr_1 -> expr_1 GREATER_GREATER . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 362

state 222

    (380) expr_1 -> expr_1 PERCENT . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 363

state 223

    (381) expr_1 -> expr_1 PLUS . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 364

state 224

    (387) expr_1 -> expr_1 BAR . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 365

state 225

    (379) expr_1 -> expr_1 SLASH . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 366

state 226

    (385) expr_1 -> expr_1 AMPERSAND . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 367

state 227

    (382) expr_1 -> expr_1 MINUS . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 368

state 228

    (244) other -> DBGCMPLX LPAREN REG . RPAREN

    RPAREN          shift and go to state 369


state 229

    (144) bitlogic -> BITTGL LPAREN REG . COMMA expr RPAREN

    COMMA           shift and go to state 370


state 230

    (187) cache -> FLUSHINV LBRACK REG . RBRACK
    (311) reg_with_postinc -> LBRACK REG . _PLUS_PLUS RBRACK

    RBRACK          shift and go to state 372
    _PLUS_PLUS      shift and go to state 371


state 231

    (73) dspalu -> REG_A _PLUS_ASSIGN REG_A . w32_or_nothing
    (306) w32_or_nothing -> . empty
    (307) w32_or_nothing -> . LPAREN MMOD RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 249
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    w32_or_nothing                 shift and go to state 373
    empty                          shift and go to state 250

state 232

    (247) other -> DBGA LPAREN HALF_REG . COMMA expr RPAREN

    COMMA           shift and go to state 374


state 233

    (201) loadstore -> HALF_REG ASSIGN W . LBRACK REG post_op RBRACK
    (204) loadstore -> HALF_REG ASSIGN W . LBRACK REG _PLUS_PLUS REG RBRACK

    LBRACK          shift and go to state 375


state 234

    (342) assign_macfunc -> HALF_REG ASSIGN REG_A .

    LPAREN          reduce using rule 342 (assign_macfunc -> HALF_REG ASSIGN REG_A .)
    COMMA           reduce using rule 342 (assign_macfunc -> HALF_REG ASSIGN REG_A .)
    SEMICOLON       reduce using rule 342 (assign_macfunc -> HALF_REG ASSIGN REG_A .)
    DOUBLE_BAR      reduce using rule 342 (assign_macfunc -> HALF_REG ASSIGN REG_A .)


state 235

    (118) deposit -> HALF_REG ASSIGN LSHIFT . HALF_REG BY HALF_REG

    HALF_REG        shift and go to state 376


state 236

    (48) dspalu -> HALF_REG ASSIGN HALF_REG . ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG
    (52) dspalu -> HALF_REG ASSIGN HALF_REG . plus_minus HALF_REG amod1
    (109) dspshift -> HALF_REG ASSIGN HALF_REG . LESS_LESS expr smod
    (123) deposit -> HALF_REG ASSIGN HALF_REG . GREATER_GREATER expr
    (124) deposit -> HALF_REG ASSIGN HALF_REG . _GREATER_GREATER_GREATER expr smod
    (355) multiply_halfregs -> HALF_REG . STAR HALF_REG
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS

    ASSIGN          shift and go to state 381
    LESS_LESS       shift and go to state 377
    GREATER_GREATER shift and go to state 379
    _GREATER_GREATER_GREATER shift and go to state 380
    STAR            shift and go to state 211
    PLUS            shift and go to state 265
    MINUS           shift and go to state 266

    plus_minus                     shift and go to state 378

state 237

    (128) deposit -> HALF_REG ASSIGN CCREG . ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN
    (129) deposit -> HALF_REG ASSIGN CCREG . ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN
    (130) deposit -> HALF_REG ASSIGN CCREG . ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN

    ASSIGN          shift and go to state 382


state 238

    (138) deposit -> HALF_REG ASSIGN VIT_MAX . LPAREN REG RPAREN asr_asl

    LPAREN          shift and go to state 383


state 239

    (55) dspalu -> HALF_REG ASSIGN REG . LPAREN RND RPAREN
    (56) dspalu -> HALF_REG ASSIGN REG . plus_minus REG LPAREN RND12 RPAREN
    (57) dspalu -> HALF_REG ASSIGN REG . plus_minus REG LPAREN RND20 RPAREN
    (64) dspalu -> HALF_REG ASSIGN REG .
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS

    LPAREN          shift and go to state 385
    SEMICOLON       reduce using rule 64 (dspalu -> HALF_REG ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 64 (dspalu -> HALF_REG ASSIGN REG .)
    PLUS            shift and go to state 265
    MINUS           shift and go to state 266

    plus_minus                     shift and go to state 384

state 240

    (111) expadj -> HALF_REG ASSIGN EXPADJ . LPAREN REG COMMA HALF_REG RPAREN vmod
    (112) expadj -> HALF_REG ASSIGN EXPADJ . LPAREN HALF_REG COMMA HALF_REG RPAREN

    LPAREN          shift and go to state 386


state 241

    (135) deposit -> HALF_REG ASSIGN SIGNBITS . REG_A
    (136) deposit -> HALF_REG ASSIGN SIGNBITS . REG
    (137) deposit -> HALF_REG ASSIGN SIGNBITS . HALF_REG
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG             shift and go to state 389
    HALF_REG        shift and go to state 387
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 388

state 242

    (126) deposit -> HALF_REG ASSIGN ONES . REG

    REG             shift and go to state 390


state 243

    (27) dspalu -> HALF_REG ASSIGN LPAREN . a_plusassign REG_A RPAREN
    (341) assign_macfunc -> HALF_REG ASSIGN LPAREN . a_macfunc RPAREN
    (374) eterm -> LPAREN . expr_1 RPAREN
    (337) a_plusassign -> . REG_A _PLUS_ASSIGN
    (348) a_macfunc -> . a_assign multiply_halfregs
    (349) a_macfunc -> . a_plusassign multiply_halfregs
    (350) a_macfunc -> . a_minusassign multiply_halfregs
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (335) a_assign -> . REG_A ASSIGN
    (336) a_minusassign -> . REG_A _MINUS_ASSIGN
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    REG_A                          shift and go to state 391
    a_assign                       shift and go to state 392
    a_minusassign                  shift and go to state 394
    a_plusassign                   shift and go to state 393
    a_macfunc                      shift and go to state 395
    expr_1                         shift and go to state 215

state 244

    (98) dspmult -> HALF_REG ASSIGN multiply_halfregs . opt_mode
    (101) dspmult -> HALF_REG ASSIGN multiply_halfregs . opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode
    (254) opt_mode -> . empty
    (255) opt_mode -> . LPAREN M COMMA MMOD RPAREN
    (256) opt_mode -> . LPAREN MMOD COMMA M RPAREN
    (257) opt_mode -> . LPAREN MMOD RPAREN
    (258) opt_mode -> . LPAREN M RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 150
    COMMA           reduce using rule 389 (empty -> .)
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    opt_mode                       shift and go to state 396
    empty                          shift and go to state 151

state 245

    (61) dspalu -> HALF_REG ASSIGN expr .

    SEMICOLON       reduce using rule 61 (dspalu -> HALF_REG ASSIGN expr .)
    DOUBLE_BAR      reduce using rule 61 (dspalu -> HALF_REG ASSIGN expr .)


state 246

    (106) dspshift -> HALF_REG ASSIGN ASHIFT . HALF_REG BY HALF_REG smod

    HALF_REG        shift and go to state 397


state 247

    (15) parallel_instructions -> asm_1 DOUBLE_BAR asm_1 . DOUBLE_BAR asm_1
    (16) parallel_instructions -> asm_1 DOUBLE_BAR asm_1 .

    DOUBLE_BAR      shift and go to state 398
    SEMICOLON       reduce using rule 16 (parallel_instructions -> asm_1 DOUBLE_BAR asm_1 .)


state 248

    (69) dspalu -> a_minusassign REG_A w32_or_nothing .

    SEMICOLON       reduce using rule 69 (dspalu -> a_minusassign REG_A w32_or_nothing .)
    DOUBLE_BAR      reduce using rule 69 (dspalu -> a_minusassign REG_A w32_or_nothing .)


state 249

    (307) w32_or_nothing -> LPAREN . MMOD RPAREN

    MMOD            shift and go to state 399


state 250

    (306) w32_or_nothing -> empty .

    SEMICOLON       reduce using rule 306 (w32_or_nothing -> empty .)
    DOUBLE_BAR      reduce using rule 306 (w32_or_nothing -> empty .)


state 251

    (83) comp -> CCREG ASSIGN REG_A . _ASSIGN_ASSIGN REG_A
    (84) comp -> CCREG ASSIGN REG_A . LESS_THAN REG_A
    (89) comp -> CCREG ASSIGN REG_A . _LESS_THAN_ASSIGN REG_A

    _ASSIGN_ASSIGN  shift and go to state 400
    LESS_THAN       shift and go to state 401
    _LESS_THAN_ASSIGN shift and go to state 402


state 252

    (85) comp -> CCREG ASSIGN REG . LESS_THAN REG iu_or_nothing
    (86) comp -> CCREG ASSIGN REG . LESS_THAN expr iu_or_nothing
    (87) comp -> CCREG ASSIGN REG . _ASSIGN_ASSIGN REG
    (88) comp -> CCREG ASSIGN REG . _ASSIGN_ASSIGN expr
    (90) comp -> CCREG ASSIGN REG . _LESS_THAN_ASSIGN REG iu_or_nothing
    (91) comp -> CCREG ASSIGN REG . _LESS_THAN_ASSIGN expr iu_or_nothing
    (95) comp -> CCREG ASSIGN REG .

    LESS_THAN       shift and go to state 404
    _ASSIGN_ASSIGN  shift and go to state 403
    _LESS_THAN_ASSIGN shift and go to state 405
    SEMICOLON       reduce using rule 95 (comp -> CCREG ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 95 (comp -> CCREG ASSIGN REG .)


state 253

    (147) jump -> CCREG ASSIGN BITTST . LPAREN REG COMMA expr RPAREN

    LPAREN          shift and go to state 406


state 254

    (361) ccstat -> CCREG cc_op V .

    SEMICOLON       reduce using rule 361 (ccstat -> CCREG cc_op V .)
    DOUBLE_BAR      reduce using rule 361 (ccstat -> CCREG cc_op V .)


state 255

    (360) ccstat -> CCREG cc_op STATUS_REG .

    SEMICOLON       reduce using rule 360 (ccstat -> CCREG cc_op STATUS_REG .)
    DOUBLE_BAR      reduce using rule 360 (ccstat -> CCREG cc_op STATUS_REG .)


state 256

    (97) comp -> CCREG _ASSIGN_BANG CCREG .

    SEMICOLON       reduce using rule 97 (comp -> CCREG _ASSIGN_BANG CCREG .)
    DOUBLE_BAR      reduce using rule 97 (comp -> CCREG _ASSIGN_BANG CCREG .)


state 257

    (145) jump -> CCREG _ASSIGN_BANG BITTST . LPAREN REG COMMA expr RPAREN

    LPAREN          shift and go to state 407


state 258

    (185) cache -> FLUSH LBRACK REG . RBRACK
    (311) reg_with_postinc -> LBRACK REG . _PLUS_PLUS RBRACK

    RBRACK          shift and go to state 408
    _PLUS_PLUS      shift and go to state 371


state 259

    (196) loadstore -> W LBRACK REG . plus_minus expr RBRACK ASSIGN REG
    (197) loadstore -> W LBRACK REG . post_op RBRACK ASSIGN REG
    (198) loadstore -> W LBRACK REG . post_op RBRACK ASSIGN HALF_REG
    (207) loadstore -> W LBRACK REG . _PLUS_PLUS REG RBRACK ASSIGN HALF_REG
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS
    (332) post_op -> . empty
    (333) post_op -> . _PLUS_PLUS
    (334) post_op -> . _MINUS_MINUS
    (389) empty -> .

    _PLUS_PLUS      shift and go to state 410
    PLUS            shift and go to state 265
    MINUS           shift and go to state 266
    _MINUS_MINUS    shift and go to state 262
    RBRACK          reduce using rule 389 (empty -> .)

    post_op                        shift and go to state 411
    empty                          shift and go to state 267
    plus_minus                     shift and go to state 409

state 260

    (310) reg_with_predec -> LBRACK _MINUS_MINUS REG . RBRACK

    RBRACK          shift and go to state 412


state 261

    (199) loadstore -> LBRACK REG plus_minus . expr RBRACK ASSIGN REG
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 413
    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120
    symbol                         shift and go to state 117

state 262

    (334) post_op -> _MINUS_MINUS .

    RBRACK          reduce using rule 334 (post_op -> _MINUS_MINUS .)


state 263

    (206) loadstore -> LBRACK REG _PLUS_PLUS . REG RBRACK ASSIGN REG
    (333) post_op -> _PLUS_PLUS .

    REG             shift and go to state 414
    RBRACK          reduce using rule 333 (post_op -> _PLUS_PLUS .)


state 264

    (205) loadstore -> LBRACK REG post_op . RBRACK ASSIGN REG

    RBRACK          shift and go to state 415


state 265

    (318) plus_minus -> PLUS .

    NUMBER          reduce using rule 318 (plus_minus -> PLUS .)
    LPAREN          reduce using rule 318 (plus_minus -> PLUS .)
    TILDA           reduce using rule 318 (plus_minus -> PLUS .)
    MINUS           reduce using rule 318 (plus_minus -> PLUS .)
    SYMBOL          reduce using rule 318 (plus_minus -> PLUS .)
    REG             reduce using rule 318 (plus_minus -> PLUS .)
    HALF_REG        reduce using rule 318 (plus_minus -> PLUS .)


state 266

    (319) plus_minus -> MINUS .

    NUMBER          reduce using rule 319 (plus_minus -> MINUS .)
    LPAREN          reduce using rule 319 (plus_minus -> MINUS .)
    TILDA           reduce using rule 319 (plus_minus -> MINUS .)
    MINUS           reduce using rule 319 (plus_minus -> MINUS .)
    SYMBOL          reduce using rule 319 (plus_minus -> MINUS .)
    REG             reduce using rule 319 (plus_minus -> MINUS .)
    HALF_REG        reduce using rule 319 (plus_minus -> MINUS .)


state 267

    (332) post_op -> empty .

    RBRACK          reduce using rule 332 (post_op -> empty .)


state 268

    (256) opt_mode -> LPAREN MMOD . COMMA M RPAREN
    (257) opt_mode -> LPAREN MMOD . RPAREN

    COMMA           shift and go to state 416
    RPAREN          shift and go to state 417


state 269

    (255) opt_mode -> LPAREN M . COMMA MMOD RPAREN
    (258) opt_mode -> LPAREN M . RPAREN

    COMMA           shift and go to state 418
    RPAREN          shift and go to state 419


state 270

    (230) loophardware -> LOOP REG ASSIGN . NUMBER

    NUMBER          shift and go to state 420


state 271

    (223) loophardware -> LOOP expr REG .
    (224) loophardware -> LOOP expr REG . ASSIGN REG
    (225) loophardware -> LOOP expr REG . ASSIGN REG GREATER_GREATER expr

    SEMICOLON       reduce using rule 223 (loophardware -> LOOP expr REG .)
    DOUBLE_BAR      reduce using rule 223 (loophardware -> LOOP expr REG .)
    ASSIGN          shift and go to state 421


state 272

    (77) dspalu -> SAA LPAREN REG . COLON expr COMMA REG COLON expr RPAREN aligndir

    COLON           shift and go to state 422


state 273

    (362) ccstat -> STATUS_REG cc_op CCREG .

    SEMICOLON       reduce using rule 362 (ccstat -> STATUS_REG cc_op CCREG .)
    DOUBLE_BAR      reduce using rule 362 (ccstat -> STATUS_REG cc_op CCREG .)


state 274

    (183) alu2 -> REG _LESS_LESS_ASSIGN expr .

    SEMICOLON       reduce using rule 183 (alu2 -> REG _LESS_LESS_ASSIGN expr .)
    DOUBLE_BAR      reduce using rule 183 (alu2 -> REG _LESS_LESS_ASSIGN expr .)


state 275

    (182) alu2 -> REG _LESS_LESS_ASSIGN REG .

    SEMICOLON       reduce using rule 182 (alu2 -> REG _LESS_LESS_ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 182 (alu2 -> REG _LESS_LESS_ASSIGN REG .)


state 276

    (71) dspalu -> REG _PLUS_ASSIGN REG . LPAREN BREV RPAREN
    (74) dspalu -> REG _PLUS_ASSIGN REG .

    LPAREN          shift and go to state 423
    SEMICOLON       reduce using rule 74 (dspalu -> REG _PLUS_ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 74 (dspalu -> REG _PLUS_ASSIGN REG .)


state 277

    (75) dspalu -> REG _PLUS_ASSIGN expr .

    SEMICOLON       reduce using rule 75 (dspalu -> REG _PLUS_ASSIGN expr .)
    DOUBLE_BAR      reduce using rule 75 (dspalu -> REG _PLUS_ASSIGN expr .)


state 278

    (180) alu2 -> REG _GREATER_GREATER_ASSIGN expr .

    SEMICOLON       reduce using rule 180 (alu2 -> REG _GREATER_GREATER_ASSIGN expr .)
    DOUBLE_BAR      reduce using rule 180 (alu2 -> REG _GREATER_GREATER_ASSIGN expr .)


state 279

    (179) alu2 -> REG _GREATER_GREATER_ASSIGN REG .

    SEMICOLON       reduce using rule 179 (alu2 -> REG _GREATER_GREATER_ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 179 (alu2 -> REG _GREATER_GREATER_ASSIGN REG .)


state 280

    (132) deposit -> REG ASSIGN ROT . REG BY HALF_REG
    (134) deposit -> REG ASSIGN ROT . REG BY expr

    REG             shift and go to state 424


state 281

    (200) loadstore -> REG ASSIGN W . LBRACK REG plus_minus expr RBRACK xpmod
    (202) loadstore -> REG ASSIGN W . LBRACK REG post_op RBRACK xpmod
    (203) loadstore -> REG ASSIGN W . LBRACK REG _PLUS_PLUS REG RBRACK xpmod

    LBRACK          shift and go to state 425


state 282

    (312) min_max -> MIN .

    LPAREN          reduce using rule 312 (min_max -> MIN .)


state 283

    (120) deposit -> REG ASSIGN SHIFT . REG BY HALF_REG

    REG             shift and go to state 426


state 284

    (305) c_align -> ALIGN24 .

    LPAREN          reduce using rule 305 (c_align -> ALIGN24 .)


state 285

    (119) deposit -> REG ASSIGN LSHIFT . REG BY HALF_REG vmod

    REG             shift and go to state 427


state 286

    (177) alu2 -> REG ASSIGN MINUS . REG vsmod
    (376) eterm -> MINUS . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 428
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 217

state 287

    (60) dspalu -> REG ASSIGN HALF_REG . xpmod
    (355) multiply_halfregs -> HALF_REG . STAR HALF_REG
    (277) xpmod -> . empty
    (278) xpmod -> . LPAREN Z RPAREN
    (279) xpmod -> . LPAREN X RPAREN
    (389) empty -> .

    STAR            shift and go to state 211
    LPAREN          shift and go to state 430
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    xpmod                          shift and go to state 429
    empty                          shift and go to state 431

state 288

    (45) dspalu -> REG ASSIGN BYTEOP2P . LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op

    LPAREN          shift and go to state 432


state 289

    (34) dspalu -> REG ASSIGN A_ONE_DOT_L . PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H

    PLUS            shift and go to state 433


state 290

    (139) deposit -> REG ASSIGN VIT_MAX . LPAREN REG COMMA REG RPAREN asr_asl

    LPAREN          shift and go to state 434


state 291

    (36) dspalu -> REG ASSIGN REG . plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1
    (37) dspalu -> REG ASSIGN REG . op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2
    (49) dspalu -> REG ASSIGN REG . plus_minus REG amod1
    (65) dspalu -> REG ASSIGN REG . op_bar_op REG amod0
    (108) dspshift -> REG ASSIGN REG . LESS_LESS expr vsmod
    (80) comp -> REG ASSIGN REG . BAR REG
    (81) comp -> REG ASSIGN REG . CARET REG
    (82) comp -> REG ASSIGN REG . PLUS LPAREN REG LESS_LESS expr RPAREN
    (92) comp -> REG ASSIGN REG . AMPERSAND REG
    (94) comp -> REG ASSIGN REG .
    (122) deposit -> REG ASSIGN REG . GREATER_GREATER expr vmod
    (125) deposit -> REG ASSIGN REG . _GREATER_GREATER_GREATER expr vsmod
    (354) multiply_regs -> REG . STAR REG
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS
    (314) op_bar_op -> . _PLUS_BAR_PLUS
    (315) op_bar_op -> . _PLUS_BAR_MINUS
    (316) op_bar_op -> . _MINUS_BAR_PLUS
    (317) op_bar_op -> . _MINUS_BAR_MINUS

    LESS_LESS       shift and go to state 439
    BAR             shift and go to state 436
    CARET           shift and go to state 435
    PLUS            shift and go to state 443
    AMPERSAND       shift and go to state 441
    SEMICOLON       reduce using rule 94 (comp -> REG ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 94 (comp -> REG ASSIGN REG .)
    GREATER_GREATER shift and go to state 448
    _GREATER_GREATER_GREATER shift and go to state 442
    STAR            shift and go to state 437
    MINUS           shift and go to state 266
    _PLUS_BAR_PLUS  shift and go to state 438
    _PLUS_BAR_MINUS shift and go to state 440
    _MINUS_BAR_PLUS shift and go to state 444
    _MINUS_BAR_MINUS shift and go to state 446

    op_bar_op                      shift and go to state 445
    plus_minus                     shift and go to state 447

state 292

    (99) dspmult -> REG ASSIGN multiply_regs . opt_mode
    (254) opt_mode -> . empty
    (255) opt_mode -> . LPAREN M COMMA MMOD RPAREN
    (256) opt_mode -> . LPAREN MMOD COMMA M RPAREN
    (257) opt_mode -> . LPAREN MMOD RPAREN
    (258) opt_mode -> . LPAREN M RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 150
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    opt_mode                       shift and go to state 449
    empty                          shift and go to state 151

state 293

    (35) dspalu -> REG ASSIGN REG_A . PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1
    (338) assign_macfunc -> REG ASSIGN REG_A .

    PLUS            shift and go to state 450
    LPAREN          reduce using rule 338 (assign_macfunc -> REG ASSIGN REG_A .)
    COMMA           reduce using rule 338 (assign_macfunc -> REG ASSIGN REG_A .)
    SEMICOLON       reduce using rule 338 (assign_macfunc -> REG ASSIGN REG_A .)
    DOUBLE_BAR      reduce using rule 338 (assign_macfunc -> REG ASSIGN REG_A .)


state 294

    (96) comp -> REG ASSIGN CCREG .

    SEMICOLON       reduce using rule 96 (comp -> REG ASSIGN CCREG .)
    DOUBLE_BAR      reduce using rule 96 (comp -> REG ASSIGN CCREG .)


state 295

    (50) dspalu -> REG ASSIGN min_max . LPAREN REG COMMA REG RPAREN vmod

    LPAREN          shift and go to state 451


state 296

    (46) dspalu -> REG ASSIGN BYTEOP3P . LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op

    LPAREN          shift and go to state 452


state 297

    (38) dspalu -> REG ASSIGN ABS . REG vmod

    REG             shift and go to state 453


state 298

    (113) deposit -> REG ASSIGN DEPOSIT . LPAREN REG COMMA REG RPAREN
    (114) deposit -> REG ASSIGN DEPOSIT . LPAREN REG COMMA REG RPAREN LPAREN X RPAREN

    LPAREN          shift and go to state 454


state 299

    (26) dspalu -> REG ASSIGN LPAREN . a_plusassign REG_A RPAREN
    (79) dspalu -> REG ASSIGN LPAREN . REG PLUS REG RPAREN LESS_LESS expr
    (343) assign_full_macfunc -> REG ASSIGN LPAREN . A_ONE_COLON_ZERO RPAREN
    (346) assign_full_macfunc -> REG ASSIGN LPAREN . a_full_macfunc RPAREN
    (340) assign_macfunc -> REG ASSIGN LPAREN . a_macfunc RPAREN
    (374) eterm -> LPAREN . expr_1 RPAREN
    (337) a_plusassign -> . REG_A _PLUS_ASSIGN
    (351) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs
    (348) a_macfunc -> . a_assign multiply_halfregs
    (349) a_macfunc -> . a_plusassign multiply_halfregs
    (350) a_macfunc -> . a_minusassign multiply_halfregs
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (335) a_assign -> . REG_A ASSIGN
    (336) a_minusassign -> . REG_A _MINUS_ASSIGN
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 457
    A_ONE_COLON_ZERO shift and go to state 456
    LPAREN          shift and go to state 455
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    NUMBER          shift and go to state 115
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    REG_A                          shift and go to state 391
    a_assign                       shift and go to state 392
    a_minusassign                  shift and go to state 394
    a_full_macfunc                 shift and go to state 459
    a_plusassign                   shift and go to state 458
    a_macfunc                      shift and go to state 460
    expr_1                         shift and go to state 215

state 300

    (47) dspalu -> REG ASSIGN BYTEPACK . LPAREN REG COMMA REG RPAREN

    LPAREN          shift and go to state 461


state 301

    (66) dspalu -> REG ASSIGN BYTE_DREG . xpmod
    (277) xpmod -> . empty
    (278) xpmod -> . LPAREN Z RPAREN
    (279) xpmod -> . LPAREN X RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 430
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    xpmod                          shift and go to state 462
    empty                          shift and go to state 431

state 302

    (100) dspmult -> REG ASSIGN multiply_halfregs . opt_mode
    (102) dspmult -> REG ASSIGN multiply_halfregs . opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode
    (254) opt_mode -> . empty
    (255) opt_mode -> . LPAREN M COMMA MMOD RPAREN
    (256) opt_mode -> . LPAREN MMOD COMMA M RPAREN
    (257) opt_mode -> . LPAREN MMOD RPAREN
    (258) opt_mode -> . LPAREN M RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 150
    COMMA           reduce using rule 389 (empty -> .)
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    opt_mode                       shift and go to state 463
    empty                          shift and go to state 151

state 303

    (304) c_align -> ALIGN16 .

    LPAREN          reduce using rule 304 (c_align -> ALIGN16 .)


state 304

    (63) dspalu -> REG ASSIGN expr . xpmod1
    (280) xpmod1 -> . empty
    (281) xpmod1 -> . LPAREN X RPAREN
    (282) xpmod1 -> . LPAREN Z RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 464
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    xpmod1                         shift and go to state 465
    empty                          shift and go to state 466

state 305

    (115) deposit -> REG ASSIGN EXTRACT . LPAREN REG COMMA HALF_REG RPAREN xpmod

    LPAREN          shift and go to state 467


state 306

    (43) dspalu -> REG ASSIGN BYTEOP1P . LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P . LPAREN REG COLON expr COMMA REG COLON expr RPAREN

    LPAREN          shift and go to state 468


state 307

    (210) loadstore -> REG ASSIGN LBRACK . REG _PLUS_PLUS REG RBRACK
    (211) loadstore -> REG ASSIGN LBRACK . REG plus_minus got_or_expr RBRACK
    (212) loadstore -> REG ASSIGN LBRACK . REG post_op RBRACK

    REG             shift and go to state 469


state 308

    (178) alu2 -> REG ASSIGN TILDA . REG
    (375) eterm -> TILDA . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 470
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 216

state 309

    (42) dspalu -> REG ASSIGN c_align . LPAREN REG COMMA REG RPAREN

    LPAREN          shift and go to state 471


state 310

    (313) min_max -> MAX .

    LPAREN          reduce using rule 313 (min_max -> MAX .)


state 311

    (208) loadstore -> REG ASSIGN B . LBRACK REG plus_minus expr RBRACK xpmod
    (209) loadstore -> REG ASSIGN B . LBRACK REG post_op RBRACK xpmod

    LBRACK          shift and go to state 472


state 312

    (303) c_align -> ALIGN8 .

    LPAREN          reduce using rule 303 (c_align -> ALIGN8 .)


state 313

    (110) dspshift -> REG ASSIGN ASHIFT . REG BY HALF_REG vsmod

    REG             shift and go to state 473


state 314

    (127) deposit -> REG ASSIGN PACK . LPAREN HALF_REG COMMA HALF_REG RPAREN

    LPAREN          shift and go to state 474


state 315

    (70) dspalu -> REG _MINUS_ASSIGN expr .

    SEMICOLON       reduce using rule 70 (dspalu -> REG _MINUS_ASSIGN expr .)
    DOUBLE_BAR      reduce using rule 70 (dspalu -> REG _MINUS_ASSIGN expr .)


state 316

    (72) dspalu -> REG _MINUS_ASSIGN REG .

    SEMICOLON       reduce using rule 72 (dspalu -> REG _MINUS_ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 72 (dspalu -> REG _MINUS_ASSIGN REG .)


state 317

    (184) alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr .

    SEMICOLON       reduce using rule 184 (alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr .)
    DOUBLE_BAR      reduce using rule 184 (alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr .)


state 318

    (181) alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG .

    SEMICOLON       reduce using rule 181 (alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 181 (alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG .)


state 319

    (76) dspalu -> REG _STAR_ASSIGN REG .

    SEMICOLON       reduce using rule 76 (dspalu -> REG _STAR_ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 76 (dspalu -> REG _STAR_ASSIGN REG .)


state 320

    (149) jump -> IF CCREG REG . ASSIGN REG

    ASSIGN          shift and go to state 475


state 321

    (152) jump -> IF CCREG JUMP . expr
    (153) jump -> IF CCREG JUMP . expr LPAREN BP RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 476
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 322

    (148) jump -> IF BANG CCREG . REG ASSIGN REG
    (150) jump -> IF BANG CCREG . JUMP expr
    (151) jump -> IF BANG CCREG . JUMP expr LPAREN BP RPAREN

    REG             shift and go to state 478
    JUMP            shift and go to state 477


state 323

    (191) cache -> PREFETCH LBRACK REG . RBRACK
    (311) reg_with_postinc -> LBRACK REG . _PLUS_PLUS RBRACK

    RBRACK          shift and go to state 479
    _PLUS_PLUS      shift and go to state 371


state 324

    (194) loadstore -> B LBRACK REG . post_op RBRACK ASSIGN REG
    (195) loadstore -> B LBRACK REG . plus_minus expr RBRACK ASSIGN REG
    (332) post_op -> . empty
    (333) post_op -> . _PLUS_PLUS
    (334) post_op -> . _MINUS_MINUS
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS
    (389) empty -> .

    _PLUS_PLUS      shift and go to state 481
    _MINUS_MINUS    shift and go to state 262
    PLUS            shift and go to state 265
    MINUS           shift and go to state 266
    RBRACK          reduce using rule 389 (empty -> .)

    plus_minus                     shift and go to state 480
    empty                          shift and go to state 267
    post_op                        shift and go to state 482

state 325

    (220) loophardware -> LSETUP LPAREN expr . COMMA expr RPAREN REG
    (221) loophardware -> LSETUP LPAREN expr . COMMA expr RPAREN REG ASSIGN REG
    (222) loophardware -> LSETUP LPAREN expr . COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr

    COMMA           shift and go to state 483


state 326

    (157) jump -> JUMP LPAREN PC . PLUS REG RPAREN

    PLUS            shift and go to state 484


state 327

    (154) jump -> JUMP LPAREN REG . RPAREN

    RPAREN          shift and go to state 485


state 328

    (189) cache -> IFLUSH LBRACK REG . RBRACK
    (311) reg_with_postinc -> LBRACK REG . _PLUS_PLUS RBRACK

    RBRACK          shift and go to state 486
    _PLUS_PLUS      shift and go to state 371


state 329

    (143) bitlogic -> BITSET LPAREN REG . COMMA expr RPAREN

    COMMA           shift and go to state 487


state 330

    (176) alu2 -> DIVS LPAREN REG . COMMA REG RPAREN

    COMMA           shift and go to state 488


state 331

    (175) alu2 -> DIVQ LPAREN REG . COMMA REG RPAREN

    COMMA           shift and go to state 489


state 332

    (160) jump -> TESTSET LPAREN REG . RPAREN

    RPAREN          shift and go to state 490


state 333

    (17) vector_mac -> assign_macfunc opt_mode COMMA . assign_macfunc opt_mode
    (338) assign_macfunc -> . REG ASSIGN REG_A
    (339) assign_macfunc -> . a_macfunc
    (340) assign_macfunc -> . REG ASSIGN LPAREN a_macfunc RPAREN
    (341) assign_macfunc -> . HALF_REG ASSIGN LPAREN a_macfunc RPAREN
    (342) assign_macfunc -> . HALF_REG ASSIGN REG_A
    (348) a_macfunc -> . a_assign multiply_halfregs
    (349) a_macfunc -> . a_plusassign multiply_halfregs
    (350) a_macfunc -> . a_minusassign multiply_halfregs
    (335) a_assign -> . REG_A ASSIGN
    (337) a_plusassign -> . REG_A _PLUS_ASSIGN
    (336) a_minusassign -> . REG_A _MINUS_ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG             shift and go to state 494
    HALF_REG        shift and go to state 491
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 493
    assign_macfunc                 shift and go to state 492
    a_assign                       shift and go to state 392
    a_minusassign                  shift and go to state 394
    a_plusassign                   shift and go to state 8
    a_macfunc                      shift and go to state 75

state 334

    (249) other -> DBGAL LPAREN REG . COMMA expr RPAREN

    COMMA           shift and go to state 495


state 335

    (217) pushpopmultiple -> reg_with_predec ASSIGN REG .

    SEMICOLON       reduce using rule 217 (pushpopmultiple -> reg_with_predec ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 217 (pushpopmultiple -> reg_with_predec ASSIGN REG .)


state 336

    (213) pushpopmultiple -> reg_with_predec ASSIGN LPAREN . REG COLON expr COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> reg_with_predec ASSIGN LPAREN . REG COLON expr RPAREN

    REG             shift and go to state 496


state 337

    (140) deposit -> BITMUX LPAREN REG . COMMA REG COMMA REG_A RPAREN asr_asl

    COMMA           shift and go to state 497


state 338

    (248) other -> DBGAH LPAREN REG . COMMA expr RPAREN

    COMMA           shift and go to state 498


state 339

    (107) dspshift -> a_assign REG_A LESS_LESS . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr                           shift and go to state 499
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 340

    (121) deposit -> a_assign REG_A GREATER_GREATER . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr                           shift and go to state 500
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 341

    (54) dspalu -> a_assign REG_A LPAREN . S RPAREN
    (78) dspalu -> a_assign REG_A LPAREN . S RPAREN COMMA a_assign REG_A LPAREN S RPAREN

    S               shift and go to state 501


state 342

    (116) deposit -> a_assign REG_A _GREATER_GREATER_GREATER . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr                           shift and go to state 502
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 343

    (117) deposit -> a_assign LSHIFT REG_A . BY HALF_REG

    BY              shift and go to state 503


state 344

    (51) dspalu -> a_assign MINUS REG_A .
    (68) dspalu -> a_assign MINUS REG_A . COMMA a_assign MINUS REG_A

    SEMICOLON       reduce using rule 51 (dspalu -> a_assign MINUS REG_A .)
    DOUBLE_BAR      reduce using rule 51 (dspalu -> a_assign MINUS REG_A .)
    COMMA           shift and go to state 504


state 345

    (141) deposit -> a_assign BXORSHIFT LPAREN . REG_A COMMA REG_A COMMA CCREG RPAREN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 505

state 346

    (131) deposit -> a_assign ROT REG_A . BY HALF_REG
    (133) deposit -> a_assign ROT REG_A . BY expr

    BY              shift and go to state 506


state 347

    (53) dspalu -> a_assign a_assign expr .

    SEMICOLON       reduce using rule 53 (dspalu -> a_assign a_assign expr .)
    DOUBLE_BAR      reduce using rule 53 (dspalu -> a_assign a_assign expr .)


state 348

    (39) dspalu -> a_assign ABS REG_A .
    (67) dspalu -> a_assign ABS REG_A . COMMA a_assign ABS REG_A

    SEMICOLON       reduce using rule 39 (dspalu -> a_assign ABS REG_A .)
    DOUBLE_BAR      reduce using rule 39 (dspalu -> a_assign ABS REG_A .)
    COMMA           shift and go to state 507


state 349

    (105) dspshift -> a_assign ASHIFT REG_A . BY HALF_REG

    BY              shift and go to state 508


state 350

    (351) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN . ASSIGN multiply_regs
    (352) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN . _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN . _MINUS_ASSIGN multiply_regs

    ASSIGN          shift and go to state 511
    _PLUS_ASSIGN    shift and go to state 510
    _MINUS_ASSIGN   shift and go to state 509


state 351

    (30) dspalu -> LPAREN REG COMMA . REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> LPAREN REG COMMA . REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> LPAREN REG COMMA . REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> LPAREN REG COMMA . REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN

    REG             shift and go to state 512


state 352

    (344) assign_full_macfunc -> LPAREN REG COLON . REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> LPAREN REG COLON . REG RPAREN ASSIGN multiply_regs
    (347) assign_full_macfunc -> LPAREN REG COLON . REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN
    (215) pushpopmultiple -> LPAREN REG COLON . expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc
    (216) pushpopmultiple -> LPAREN REG COLON . expr RPAREN ASSIGN reg_with_postinc
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 513
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr                           shift and go to state 514
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 353

    (142) bitlogic -> BITCLR LPAREN REG . COMMA expr RPAREN

    COMMA           shift and go to state 515


state 354

    (156) jump -> CALL LPAREN PC . PLUS REG RPAREN

    PLUS            shift and go to state 516


state 355

    (155) jump -> CALL LPAREN REG . RPAREN

    RPAREN          shift and go to state 517


state 356

    (371) pltpc -> symbol AT . PLTPC

    PLTPC           shift and go to state 518


state 357

    (355) multiply_halfregs -> HALF_REG STAR HALF_REG .

    LPAREN          reduce using rule 355 (multiply_halfregs -> HALF_REG STAR HALF_REG .)
    SEMICOLON       reduce using rule 355 (multiply_halfregs -> HALF_REG STAR HALF_REG .)
    DOUBLE_BAR      reduce using rule 355 (multiply_halfregs -> HALF_REG STAR HALF_REG .)
    RPAREN          reduce using rule 355 (multiply_halfregs -> HALF_REG STAR HALF_REG .)
    COMMA           reduce using rule 355 (multiply_halfregs -> HALF_REG STAR HALF_REG .)


state 358

    (374) eterm -> LPAREN expr_1 RPAREN .

    STAR            reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    SLASH           reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    PERCENT         reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    PLUS            reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    MINUS           reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    LESS_LESS       reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    GREATER_GREATER reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    AMPERSAND       reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    CARET           reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    BAR             reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    LPAREN          reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    SEMICOLON       reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    DOUBLE_BAR      reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    RPAREN          reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    RBRACK          reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    COMMA           reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)
    REG             reduce using rule 374 (eterm -> LPAREN expr_1 RPAREN .)


state 359

    (383) expr_1 -> expr_1 LESS_LESS expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    LESS_LESS       reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    GREATER_GREATER reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    AMPERSAND       reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    CARET           reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    BAR             reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    SEMICOLON       reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    DOUBLE_BAR      reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    REG             reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    RPAREN          reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    COMMA           reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    LPAREN          reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    RBRACK          reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .)
    STAR            shift and go to state 220
    SLASH           shift and go to state 225
    PERCENT         shift and go to state 222
    PLUS            shift and go to state 223
    MINUS           shift and go to state 227

  ! STAR            [ reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .) ]
  ! SLASH           [ reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .) ]
  ! PERCENT         [ reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .) ]
  ! PLUS            [ reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .) ]
  ! MINUS           [ reduce using rule 383 (expr_1 -> expr_1 LESS_LESS expr_1 .) ]
  ! LESS_LESS       [ shift and go to state 218 ]
  ! GREATER_GREATER [ shift and go to state 221 ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 360

    (386) expr_1 -> expr_1 CARET expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    CARET           reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .)
    BAR             reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .)
    SEMICOLON       reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .)
    DOUBLE_BAR      reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .)
    REG             reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .)
    RPAREN          reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .)
    COMMA           reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .)
    LPAREN          reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .)
    RBRACK          reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .)
    STAR            shift and go to state 220
    SLASH           shift and go to state 225
    PERCENT         shift and go to state 222
    PLUS            shift and go to state 223
    MINUS           shift and go to state 227
    LESS_LESS       shift and go to state 218
    GREATER_GREATER shift and go to state 221
    AMPERSAND       shift and go to state 226

  ! STAR            [ reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .) ]
  ! SLASH           [ reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .) ]
  ! PERCENT         [ reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .) ]
  ! PLUS            [ reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .) ]
  ! MINUS           [ reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .) ]
  ! LESS_LESS       [ reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .) ]
  ! GREATER_GREATER [ reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .) ]
  ! AMPERSAND       [ reduce using rule 386 (expr_1 -> expr_1 CARET expr_1 .) ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 361

    (378) expr_1 -> expr_1 STAR expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    STAR            reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    SLASH           reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    PERCENT         reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    PLUS            reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    MINUS           reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    LESS_LESS       reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    GREATER_GREATER reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    AMPERSAND       reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    CARET           reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    BAR             reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    SEMICOLON       reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    DOUBLE_BAR      reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    REG             reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    RPAREN          reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    COMMA           reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    LPAREN          reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)
    RBRACK          reduce using rule 378 (expr_1 -> expr_1 STAR expr_1 .)

  ! STAR            [ shift and go to state 220 ]
  ! SLASH           [ shift and go to state 225 ]
  ! PERCENT         [ shift and go to state 222 ]
  ! PLUS            [ shift and go to state 223 ]
  ! MINUS           [ shift and go to state 227 ]
  ! LESS_LESS       [ shift and go to state 218 ]
  ! GREATER_GREATER [ shift and go to state 221 ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 362

    (384) expr_1 -> expr_1 GREATER_GREATER expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    LESS_LESS       reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    GREATER_GREATER reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    AMPERSAND       reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    CARET           reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    BAR             reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    SEMICOLON       reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    DOUBLE_BAR      reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    REG             reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    RPAREN          reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    COMMA           reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    LPAREN          reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    RBRACK          reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .)
    STAR            shift and go to state 220
    SLASH           shift and go to state 225
    PERCENT         shift and go to state 222
    PLUS            shift and go to state 223
    MINUS           shift and go to state 227

  ! STAR            [ reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .) ]
  ! SLASH           [ reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .) ]
  ! PERCENT         [ reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .) ]
  ! PLUS            [ reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .) ]
  ! MINUS           [ reduce using rule 384 (expr_1 -> expr_1 GREATER_GREATER expr_1 .) ]
  ! LESS_LESS       [ shift and go to state 218 ]
  ! GREATER_GREATER [ shift and go to state 221 ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 363

    (380) expr_1 -> expr_1 PERCENT expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    STAR            reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    SLASH           reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    PERCENT         reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    PLUS            reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    MINUS           reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    LESS_LESS       reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    GREATER_GREATER reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    AMPERSAND       reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    CARET           reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    BAR             reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    SEMICOLON       reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    DOUBLE_BAR      reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    REG             reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    RPAREN          reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    COMMA           reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    LPAREN          reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)
    RBRACK          reduce using rule 380 (expr_1 -> expr_1 PERCENT expr_1 .)

  ! STAR            [ shift and go to state 220 ]
  ! SLASH           [ shift and go to state 225 ]
  ! PERCENT         [ shift and go to state 222 ]
  ! PLUS            [ shift and go to state 223 ]
  ! MINUS           [ shift and go to state 227 ]
  ! LESS_LESS       [ shift and go to state 218 ]
  ! GREATER_GREATER [ shift and go to state 221 ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 364

    (381) expr_1 -> expr_1 PLUS expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    PLUS            reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    MINUS           reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    LESS_LESS       reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    GREATER_GREATER reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    AMPERSAND       reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    CARET           reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    BAR             reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    SEMICOLON       reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    DOUBLE_BAR      reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    REG             reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    RPAREN          reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    COMMA           reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    LPAREN          reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    RBRACK          reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .)
    STAR            shift and go to state 220
    SLASH           shift and go to state 225
    PERCENT         shift and go to state 222

  ! STAR            [ reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .) ]
  ! SLASH           [ reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .) ]
  ! PERCENT         [ reduce using rule 381 (expr_1 -> expr_1 PLUS expr_1 .) ]
  ! PLUS            [ shift and go to state 223 ]
  ! MINUS           [ shift and go to state 227 ]
  ! LESS_LESS       [ shift and go to state 218 ]
  ! GREATER_GREATER [ shift and go to state 221 ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 365

    (387) expr_1 -> expr_1 BAR expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    BAR             reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .)
    SEMICOLON       reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .)
    DOUBLE_BAR      reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .)
    REG             reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .)
    RPAREN          reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .)
    COMMA           reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .)
    LPAREN          reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .)
    RBRACK          reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .)
    STAR            shift and go to state 220
    SLASH           shift and go to state 225
    PERCENT         shift and go to state 222
    PLUS            shift and go to state 223
    MINUS           shift and go to state 227
    LESS_LESS       shift and go to state 218
    GREATER_GREATER shift and go to state 221
    AMPERSAND       shift and go to state 226
    CARET           shift and go to state 219

  ! STAR            [ reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .) ]
  ! SLASH           [ reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .) ]
  ! PERCENT         [ reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .) ]
  ! PLUS            [ reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .) ]
  ! MINUS           [ reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .) ]
  ! LESS_LESS       [ reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .) ]
  ! GREATER_GREATER [ reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .) ]
  ! AMPERSAND       [ reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .) ]
  ! CARET           [ reduce using rule 387 (expr_1 -> expr_1 BAR expr_1 .) ]
  ! BAR             [ shift and go to state 224 ]


state 366

    (379) expr_1 -> expr_1 SLASH expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    STAR            reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    SLASH           reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    PERCENT         reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    PLUS            reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    MINUS           reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    LESS_LESS       reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    GREATER_GREATER reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    AMPERSAND       reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    CARET           reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    BAR             reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    SEMICOLON       reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    DOUBLE_BAR      reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    REG             reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    RPAREN          reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    COMMA           reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    LPAREN          reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)
    RBRACK          reduce using rule 379 (expr_1 -> expr_1 SLASH expr_1 .)

  ! STAR            [ shift and go to state 220 ]
  ! SLASH           [ shift and go to state 225 ]
  ! PERCENT         [ shift and go to state 222 ]
  ! PLUS            [ shift and go to state 223 ]
  ! MINUS           [ shift and go to state 227 ]
  ! LESS_LESS       [ shift and go to state 218 ]
  ! GREATER_GREATER [ shift and go to state 221 ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 367

    (385) expr_1 -> expr_1 AMPERSAND expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    AMPERSAND       reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    CARET           reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    BAR             reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    SEMICOLON       reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    DOUBLE_BAR      reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    REG             reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    RPAREN          reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    COMMA           reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    LPAREN          reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    RBRACK          reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .)
    STAR            shift and go to state 220
    SLASH           shift and go to state 225
    PERCENT         shift and go to state 222
    PLUS            shift and go to state 223
    MINUS           shift and go to state 227
    LESS_LESS       shift and go to state 218
    GREATER_GREATER shift and go to state 221

  ! STAR            [ reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .) ]
  ! SLASH           [ reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .) ]
  ! PERCENT         [ reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .) ]
  ! PLUS            [ reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .) ]
  ! MINUS           [ reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .) ]
  ! LESS_LESS       [ reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .) ]
  ! GREATER_GREATER [ reduce using rule 385 (expr_1 -> expr_1 AMPERSAND expr_1 .) ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 368

    (382) expr_1 -> expr_1 MINUS expr_1 .
    (378) expr_1 -> expr_1 . STAR expr_1
    (379) expr_1 -> expr_1 . SLASH expr_1
    (380) expr_1 -> expr_1 . PERCENT expr_1
    (381) expr_1 -> expr_1 . PLUS expr_1
    (382) expr_1 -> expr_1 . MINUS expr_1
    (383) expr_1 -> expr_1 . LESS_LESS expr_1
    (384) expr_1 -> expr_1 . GREATER_GREATER expr_1
    (385) expr_1 -> expr_1 . AMPERSAND expr_1
    (386) expr_1 -> expr_1 . CARET expr_1
    (387) expr_1 -> expr_1 . BAR expr_1

    PLUS            reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    MINUS           reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    LESS_LESS       reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    GREATER_GREATER reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    AMPERSAND       reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    CARET           reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    BAR             reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    SEMICOLON       reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    DOUBLE_BAR      reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    REG             reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    RPAREN          reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    COMMA           reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    LPAREN          reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    RBRACK          reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .)
    STAR            shift and go to state 220
    SLASH           shift and go to state 225
    PERCENT         shift and go to state 222

  ! STAR            [ reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .) ]
  ! SLASH           [ reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .) ]
  ! PERCENT         [ reduce using rule 382 (expr_1 -> expr_1 MINUS expr_1 .) ]
  ! PLUS            [ shift and go to state 223 ]
  ! MINUS           [ shift and go to state 227 ]
  ! LESS_LESS       [ shift and go to state 218 ]
  ! GREATER_GREATER [ shift and go to state 221 ]
  ! AMPERSAND       [ shift and go to state 226 ]
  ! CARET           [ shift and go to state 219 ]
  ! BAR             [ shift and go to state 224 ]


state 369

    (244) other -> DBGCMPLX LPAREN REG RPAREN .

    SEMICOLON       reduce using rule 244 (other -> DBGCMPLX LPAREN REG RPAREN .)
    DOUBLE_BAR      reduce using rule 244 (other -> DBGCMPLX LPAREN REG RPAREN .)


state 370

    (144) bitlogic -> BITTGL LPAREN REG COMMA . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 519
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 371

    (311) reg_with_postinc -> LBRACK REG _PLUS_PLUS . RBRACK

    RBRACK          shift and go to state 520


state 372

    (187) cache -> FLUSHINV LBRACK REG RBRACK .

    SEMICOLON       reduce using rule 187 (cache -> FLUSHINV LBRACK REG RBRACK .)
    DOUBLE_BAR      reduce using rule 187 (cache -> FLUSHINV LBRACK REG RBRACK .)


state 373

    (73) dspalu -> REG_A _PLUS_ASSIGN REG_A w32_or_nothing .

    SEMICOLON       reduce using rule 73 (dspalu -> REG_A _PLUS_ASSIGN REG_A w32_or_nothing .)
    DOUBLE_BAR      reduce using rule 73 (dspalu -> REG_A _PLUS_ASSIGN REG_A w32_or_nothing .)


state 374

    (247) other -> DBGA LPAREN HALF_REG COMMA . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 521
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 375

    (201) loadstore -> HALF_REG ASSIGN W LBRACK . REG post_op RBRACK
    (204) loadstore -> HALF_REG ASSIGN W LBRACK . REG _PLUS_PLUS REG RBRACK

    REG             shift and go to state 522


state 376

    (118) deposit -> HALF_REG ASSIGN LSHIFT HALF_REG . BY HALF_REG

    BY              shift and go to state 523


state 377

    (109) dspshift -> HALF_REG ASSIGN HALF_REG LESS_LESS . expr smod
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 524
    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120
    symbol                         shift and go to state 117

state 378

    (52) dspalu -> HALF_REG ASSIGN HALF_REG plus_minus . HALF_REG amod1

    HALF_REG        shift and go to state 525


state 379

    (123) deposit -> HALF_REG ASSIGN HALF_REG GREATER_GREATER . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 526
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 380

    (124) deposit -> HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER . expr smod
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 527
    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120
    symbol                         shift and go to state 117

state 381

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN . SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG

    SIGN            shift and go to state 528


state 382

    (128) deposit -> HALF_REG ASSIGN CCREG ASSIGN . BXORSHIFT LPAREN REG_A COMMA REG RPAREN
    (129) deposit -> HALF_REG ASSIGN CCREG ASSIGN . BXOR LPAREN REG_A COMMA REG RPAREN
    (130) deposit -> HALF_REG ASSIGN CCREG ASSIGN . BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN

    BXORSHIFT       shift and go to state 529
    BXOR            shift and go to state 530


state 383

    (138) deposit -> HALF_REG ASSIGN VIT_MAX LPAREN . REG RPAREN asr_asl

    REG             shift and go to state 531


state 384

    (56) dspalu -> HALF_REG ASSIGN REG plus_minus . REG LPAREN RND12 RPAREN
    (57) dspalu -> HALF_REG ASSIGN REG plus_minus . REG LPAREN RND20 RPAREN

    REG             shift and go to state 532


state 385

    (55) dspalu -> HALF_REG ASSIGN REG LPAREN . RND RPAREN

    RND             shift and go to state 533


state 386

    (111) expadj -> HALF_REG ASSIGN EXPADJ LPAREN . REG COMMA HALF_REG RPAREN vmod
    (112) expadj -> HALF_REG ASSIGN EXPADJ LPAREN . HALF_REG COMMA HALF_REG RPAREN

    REG             shift and go to state 535
    HALF_REG        shift and go to state 534


state 387

    (137) deposit -> HALF_REG ASSIGN SIGNBITS HALF_REG .

    SEMICOLON       reduce using rule 137 (deposit -> HALF_REG ASSIGN SIGNBITS HALF_REG .)
    DOUBLE_BAR      reduce using rule 137 (deposit -> HALF_REG ASSIGN SIGNBITS HALF_REG .)


state 388

    (135) deposit -> HALF_REG ASSIGN SIGNBITS REG_A .

    SEMICOLON       reduce using rule 135 (deposit -> HALF_REG ASSIGN SIGNBITS REG_A .)
    DOUBLE_BAR      reduce using rule 135 (deposit -> HALF_REG ASSIGN SIGNBITS REG_A .)


state 389

    (136) deposit -> HALF_REG ASSIGN SIGNBITS REG .

    SEMICOLON       reduce using rule 136 (deposit -> HALF_REG ASSIGN SIGNBITS REG .)
    DOUBLE_BAR      reduce using rule 136 (deposit -> HALF_REG ASSIGN SIGNBITS REG .)


state 390

    (126) deposit -> HALF_REG ASSIGN ONES REG .

    SEMICOLON       reduce using rule 126 (deposit -> HALF_REG ASSIGN ONES REG .)
    DOUBLE_BAR      reduce using rule 126 (deposit -> HALF_REG ASSIGN ONES REG .)


state 391

    (337) a_plusassign -> REG_A . _PLUS_ASSIGN
    (335) a_assign -> REG_A . ASSIGN
    (336) a_minusassign -> REG_A . _MINUS_ASSIGN

    _PLUS_ASSIGN    shift and go to state 536
    ASSIGN          shift and go to state 128
    _MINUS_ASSIGN   shift and go to state 129


state 392

    (348) a_macfunc -> a_assign . multiply_halfregs
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG

    HALF_REG        shift and go to state 101

    multiply_halfregs              shift and go to state 195

state 393

    (27) dspalu -> HALF_REG ASSIGN LPAREN a_plusassign . REG_A RPAREN
    (349) a_macfunc -> a_plusassign . multiply_halfregs
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    HALF_REG        shift and go to state 101

    multiply_halfregs              shift and go to state 102
    REG_A                          shift and go to state 537

state 394

    (350) a_macfunc -> a_minusassign . multiply_halfregs
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG

    HALF_REG        shift and go to state 101

    multiply_halfregs              shift and go to state 136

state 395

    (341) assign_macfunc -> HALF_REG ASSIGN LPAREN a_macfunc . RPAREN

    RPAREN          shift and go to state 538


state 396

    (98) dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode .
    (101) dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode . COMMA HALF_REG ASSIGN multiply_halfregs opt_mode

    DOUBLE_BAR      reduce using rule 98 (dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode .)
    SEMICOLON       reduce using rule 98 (dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode .)
    COMMA           shift and go to state 539


state 397

    (106) dspshift -> HALF_REG ASSIGN ASHIFT HALF_REG . BY HALF_REG smod

    BY              shift and go to state 540


state 398

    (15) parallel_instructions -> asm_1 DOUBLE_BAR asm_1 DOUBLE_BAR . asm_1
    (7) asm_1 -> . dspalu
    (8) asm_1 -> . dspmult
    (9) asm_1 -> . dspshift
    (10) asm_1 -> . jump
    (11) asm_1 -> . nop
    (12) asm_1 -> . idle
    (13) asm_1 -> . loadstore
    (14) asm_1 -> . other
    (19) dspalu -> . comp
    (20) dspalu -> . loophardware
    (21) dspalu -> . vector_mac
    (22) dspalu -> . expadj
    (23) dspalu -> . deposit
    (24) dspalu -> . bitlogic
    (25) dspalu -> . alu2
    (26) dspalu -> . REG ASSIGN LPAREN a_plusassign REG_A RPAREN
    (27) dspalu -> . HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN
    (28) dspalu -> . A_ZERO_DOT_H ASSIGN HALF_REG
    (29) dspalu -> . A_ONE_DOT_H ASSIGN HALF_REG
    (30) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> . LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN
    (34) dspalu -> . REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H
    (35) dspalu -> . REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1
    (36) dspalu -> . REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1
    (37) dspalu -> . REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2
    (38) dspalu -> . REG ASSIGN ABS REG vmod
    (39) dspalu -> . a_assign ABS REG_A
    (40) dspalu -> . A_ZERO_DOT_L ASSIGN HALF_REG
    (41) dspalu -> . A_ONE_DOT_L ASSIGN HALF_REG
    (42) dspalu -> . REG ASSIGN c_align LPAREN REG COMMA REG RPAREN
    (43) dspalu -> . REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> . REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (45) dspalu -> . REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op
    (46) dspalu -> . REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op
    (47) dspalu -> . REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN
    (48) dspalu -> . HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG
    (49) dspalu -> . REG ASSIGN REG plus_minus REG amod1
    (50) dspalu -> . REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod
    (51) dspalu -> . a_assign MINUS REG_A
    (52) dspalu -> . HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1
    (53) dspalu -> . a_assign a_assign expr
    (54) dspalu -> . a_assign REG_A LPAREN S RPAREN
    (55) dspalu -> . HALF_REG ASSIGN REG LPAREN RND RPAREN
    (56) dspalu -> . HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN
    (57) dspalu -> . HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN
    (58) dspalu -> . a_assign REG_A
    (59) dspalu -> . a_assign REG
    (60) dspalu -> . REG ASSIGN HALF_REG xpmod
    (61) dspalu -> . HALF_REG ASSIGN expr
    (62) dspalu -> . a_assign expr
    (63) dspalu -> . REG ASSIGN expr xpmod1
    (64) dspalu -> . HALF_REG ASSIGN REG
    (65) dspalu -> . REG ASSIGN REG op_bar_op REG amod0
    (66) dspalu -> . REG ASSIGN BYTE_DREG xpmod
    (67) dspalu -> . a_assign ABS REG_A COMMA a_assign ABS REG_A
    (68) dspalu -> . a_assign MINUS REG_A COMMA a_assign MINUS REG_A
    (69) dspalu -> . a_minusassign REG_A w32_or_nothing
    (70) dspalu -> . REG _MINUS_ASSIGN expr
    (71) dspalu -> . REG _PLUS_ASSIGN REG LPAREN BREV RPAREN
    (72) dspalu -> . REG _MINUS_ASSIGN REG
    (73) dspalu -> . REG_A _PLUS_ASSIGN REG_A w32_or_nothing
    (74) dspalu -> . REG _PLUS_ASSIGN REG
    (75) dspalu -> . REG _PLUS_ASSIGN expr
    (76) dspalu -> . REG _STAR_ASSIGN REG
    (77) dspalu -> . SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (78) dspalu -> . a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN
    (79) dspalu -> . REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr
    (98) dspmult -> . HALF_REG ASSIGN multiply_halfregs opt_mode
    (99) dspmult -> . REG ASSIGN multiply_regs opt_mode
    (100) dspmult -> . REG ASSIGN multiply_halfregs opt_mode
    (101) dspmult -> . HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode
    (102) dspmult -> . REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode
    (103) dspmult -> . a_full_macfunc opt_mode
    (104) dspmult -> . assign_full_macfunc opt_mode
    (105) dspshift -> . a_assign ASHIFT REG_A BY HALF_REG
    (106) dspshift -> . HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod
    (107) dspshift -> . a_assign REG_A LESS_LESS expr
    (108) dspshift -> . REG ASSIGN REG LESS_LESS expr vsmod
    (109) dspshift -> . HALF_REG ASSIGN HALF_REG LESS_LESS expr smod
    (110) dspshift -> . REG ASSIGN ASHIFT REG BY HALF_REG vsmod
    (145) jump -> . CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN
    (146) jump -> . return
    (147) jump -> . CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN
    (148) jump -> . IF BANG CCREG REG ASSIGN REG
    (149) jump -> . IF CCREG REG ASSIGN REG
    (150) jump -> . IF BANG CCREG JUMP expr
    (151) jump -> . IF BANG CCREG JUMP expr LPAREN BP RPAREN
    (152) jump -> . IF CCREG JUMP expr
    (153) jump -> . IF CCREG JUMP expr LPAREN BP RPAREN
    (154) jump -> . JUMP LPAREN REG RPAREN
    (155) jump -> . CALL LPAREN REG RPAREN
    (156) jump -> . CALL LPAREN PC PLUS REG RPAREN
    (157) jump -> . JUMP LPAREN PC PLUS REG RPAREN
    (158) jump -> . RAISE expr
    (159) jump -> . EXCPT expr
    (160) jump -> . TESTSET LPAREN REG RPAREN
    (161) jump -> . JUMP expr
    (162) jump -> . JUMP_DOT_S expr
    (163) jump -> . JUMP_DOT_L expr
    (164) jump -> . JUMP_DOT_L pltpc
    (165) jump -> . CALL expr
    (166) jump -> . CALL pltpc
    (172) nop -> . NOP
    (173) nop -> . MNOP
    (174) idle -> . IDLE
    (193) loadstore -> . pushpopmultiple
    (194) loadstore -> . B LBRACK REG post_op RBRACK ASSIGN REG
    (195) loadstore -> . B LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (196) loadstore -> . W LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (197) loadstore -> . W LBRACK REG post_op RBRACK ASSIGN REG
    (198) loadstore -> . W LBRACK REG post_op RBRACK ASSIGN HALF_REG
    (199) loadstore -> . LBRACK REG plus_minus expr RBRACK ASSIGN REG
    (200) loadstore -> . REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod
    (201) loadstore -> . HALF_REG ASSIGN W LBRACK REG post_op RBRACK
    (202) loadstore -> . REG ASSIGN W LBRACK REG post_op RBRACK xpmod
    (203) loadstore -> . REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod
    (204) loadstore -> . HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK
    (205) loadstore -> . LBRACK REG post_op RBRACK ASSIGN REG
    (206) loadstore -> . LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG
    (207) loadstore -> . W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG
    (208) loadstore -> . REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod
    (209) loadstore -> . REG ASSIGN B LBRACK REG post_op RBRACK xpmod
    (210) loadstore -> . REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK
    (211) loadstore -> . REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK
    (212) loadstore -> . REG ASSIGN LBRACK REG post_op RBRACK
    (232) other -> . ABORT
    (233) other -> . linkage
    (234) other -> . cache
    (235) other -> . CSYNC
    (236) other -> . SSYNC
    (237) other -> . EMUEXCPT
    (238) other -> . CLI REG
    (239) other -> . STI REG
    (240) other -> . DISALGNEXCPT
    (241) other -> . DBG
    (242) other -> . DBG REG_A
    (243) other -> . DBG REG
    (244) other -> . DBGCMPLX LPAREN REG RPAREN
    (245) other -> . DBGHALT
    (246) other -> . HLT
    (247) other -> . DBGA LPAREN HALF_REG COMMA expr RPAREN
    (248) other -> . DBGAH LPAREN REG COMMA expr RPAREN
    (249) other -> . DBGAL LPAREN REG COMMA expr RPAREN
    (250) other -> . OUTC expr
    (251) other -> . OUTC REG
    (80) comp -> . REG ASSIGN REG BAR REG
    (81) comp -> . REG ASSIGN REG CARET REG
    (82) comp -> . REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN
    (83) comp -> . CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A
    (84) comp -> . CCREG ASSIGN REG_A LESS_THAN REG_A
    (85) comp -> . CCREG ASSIGN REG LESS_THAN REG iu_or_nothing
    (86) comp -> . CCREG ASSIGN REG LESS_THAN expr iu_or_nothing
    (87) comp -> . CCREG ASSIGN REG _ASSIGN_ASSIGN REG
    (88) comp -> . CCREG ASSIGN REG _ASSIGN_ASSIGN expr
    (89) comp -> . CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A
    (90) comp -> . CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing
    (91) comp -> . CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing
    (92) comp -> . REG ASSIGN REG AMPERSAND REG
    (93) comp -> . ccstat
    (94) comp -> . REG ASSIGN REG
    (95) comp -> . CCREG ASSIGN REG
    (96) comp -> . REG ASSIGN CCREG
    (97) comp -> . CCREG _ASSIGN_BANG CCREG
    (220) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG
    (221) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG
    (222) loophardware -> . LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr
    (223) loophardware -> . LOOP expr REG
    (224) loophardware -> . LOOP expr REG ASSIGN REG
    (225) loophardware -> . LOOP expr REG ASSIGN REG GREATER_GREATER expr
    (226) loophardware -> . LOOP_BEGIN NUMBER
    (227) loophardware -> . LOOP_BEGIN expr
    (228) loophardware -> . LOOP_END NUMBER
    (229) loophardware -> . LOOP_END expr
    (230) loophardware -> . LOOP REG ASSIGN NUMBER
    (231) loophardware -> . LOOP_END
    (17) vector_mac -> . assign_macfunc opt_mode COMMA assign_macfunc opt_mode
    (18) vector_mac -> . assign_macfunc opt_mode
    (111) expadj -> . HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod
    (112) expadj -> . HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN
    (113) deposit -> . REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN
    (114) deposit -> . REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN
    (115) deposit -> . REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod
    (116) deposit -> . a_assign REG_A _GREATER_GREATER_GREATER expr
    (117) deposit -> . a_assign LSHIFT REG_A BY HALF_REG
    (118) deposit -> . HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG
    (119) deposit -> . REG ASSIGN LSHIFT REG BY HALF_REG vmod
    (120) deposit -> . REG ASSIGN SHIFT REG BY HALF_REG
    (121) deposit -> . a_assign REG_A GREATER_GREATER expr
    (122) deposit -> . REG ASSIGN REG GREATER_GREATER expr vmod
    (123) deposit -> . HALF_REG ASSIGN HALF_REG GREATER_GREATER expr
    (124) deposit -> . HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod
    (125) deposit -> . REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod
    (126) deposit -> . HALF_REG ASSIGN ONES REG
    (127) deposit -> . REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN
    (128) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN
    (129) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN
    (130) deposit -> . HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (131) deposit -> . a_assign ROT REG_A BY HALF_REG
    (132) deposit -> . REG ASSIGN ROT REG BY HALF_REG
    (133) deposit -> . a_assign ROT REG_A BY expr
    (134) deposit -> . REG ASSIGN ROT REG BY expr
    (135) deposit -> . HALF_REG ASSIGN SIGNBITS REG_A
    (136) deposit -> . HALF_REG ASSIGN SIGNBITS REG
    (137) deposit -> . HALF_REG ASSIGN SIGNBITS HALF_REG
    (138) deposit -> . HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl
    (139) deposit -> . REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl
    (140) deposit -> . BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl
    (141) deposit -> . a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN
    (142) bitlogic -> . BITCLR LPAREN REG COMMA expr RPAREN
    (143) bitlogic -> . BITSET LPAREN REG COMMA expr RPAREN
    (144) bitlogic -> . BITTGL LPAREN REG COMMA expr RPAREN
    (175) alu2 -> . DIVQ LPAREN REG COMMA REG RPAREN
    (176) alu2 -> . DIVS LPAREN REG COMMA REG RPAREN
    (177) alu2 -> . REG ASSIGN MINUS REG vsmod
    (178) alu2 -> . REG ASSIGN TILDA REG
    (179) alu2 -> . REG _GREATER_GREATER_ASSIGN REG
    (180) alu2 -> . REG _GREATER_GREATER_ASSIGN expr
    (181) alu2 -> . REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG
    (182) alu2 -> . REG _LESS_LESS_ASSIGN REG
    (183) alu2 -> . REG _LESS_LESS_ASSIGN expr
    (184) alu2 -> . REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr
    (335) a_assign -> . REG_A ASSIGN
    (336) a_minusassign -> . REG_A _MINUS_ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (351) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs
    (343) assign_full_macfunc -> . REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (344) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN multiply_regs
    (346) assign_full_macfunc -> . REG ASSIGN LPAREN a_full_macfunc RPAREN
    (347) assign_full_macfunc -> . LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN
    (167) return -> . RTS
    (168) return -> . RTI
    (169) return -> . RTX
    (170) return -> . RTN
    (171) return -> . RTE
    (213) pushpopmultiple -> . reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> . reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN
    (215) pushpopmultiple -> . LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc
    (216) pushpopmultiple -> . LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc
    (217) pushpopmultiple -> . reg_with_predec ASSIGN REG
    (218) linkage -> . LINK expr
    (219) linkage -> . UNLINK
    (185) cache -> . FLUSH LBRACK REG RBRACK
    (186) cache -> . FLUSH reg_with_postinc
    (187) cache -> . FLUSHINV LBRACK REG RBRACK
    (188) cache -> . FLUSHINV reg_with_postinc
    (189) cache -> . IFLUSH LBRACK REG RBRACK
    (190) cache -> . IFLUSH reg_with_postinc
    (191) cache -> . PREFETCH LBRACK REG RBRACK
    (192) cache -> . PREFETCH reg_with_postinc
    (360) ccstat -> . CCREG cc_op STATUS_REG
    (361) ccstat -> . CCREG cc_op V
    (362) ccstat -> . STATUS_REG cc_op CCREG
    (363) ccstat -> . V cc_op CCREG
    (338) assign_macfunc -> . REG ASSIGN REG_A
    (339) assign_macfunc -> . a_macfunc
    (340) assign_macfunc -> . REG ASSIGN LPAREN a_macfunc RPAREN
    (341) assign_macfunc -> . HALF_REG ASSIGN LPAREN a_macfunc RPAREN
    (342) assign_macfunc -> . HALF_REG ASSIGN REG_A
    (310) reg_with_predec -> . LBRACK _MINUS_MINUS REG RBRACK
    (348) a_macfunc -> . a_assign multiply_halfregs
    (349) a_macfunc -> . a_plusassign multiply_halfregs
    (350) a_macfunc -> . a_minusassign multiply_halfregs
    (337) a_plusassign -> . REG_A _PLUS_ASSIGN

    REG             shift and go to state 57
    HALF_REG        shift and go to state 32
    A_ZERO_DOT_H    shift and go to state 3
    A_ONE_DOT_H     shift and go to state 11
    LPAREN          shift and go to state 89
    A_ZERO_DOT_L    shift and go to state 2
    A_ONE_DOT_L     shift and go to state 9
    SAA             shift and go to state 53
    CCREG           shift and go to state 41
    IF              shift and go to state 62
    JUMP            shift and go to state 68
    CALL            shift and go to state 96
    RAISE           shift and go to state 54
    EXCPT           shift and go to state 78
    TESTSET         shift and go to state 76
    JUMP_DOT_S      shift and go to state 91
    JUMP_DOT_L      shift and go to state 98
    NOP             shift and go to state 52
    MNOP            shift and go to state 66
    IDLE            shift and go to state 59
    B               shift and go to state 64
    W               shift and go to state 44
    LBRACK          shift and go to state 48
    ABORT           shift and go to state 26
    CSYNC           shift and go to state 92
    SSYNC           shift and go to state 61
    EMUEXCPT        shift and go to state 4
    CLI             shift and go to state 80
    STI             shift and go to state 87
    DISALGNEXCPT    shift and go to state 40
    DBG             shift and go to state 25
    DBGCMPLX        shift and go to state 18
    DBGHALT         shift and go to state 86
    HLT             shift and go to state 47
    DBGA            shift and go to state 29
    DBGAH           shift and go to state 84
    DBGAL           shift and go to state 79
    OUTC            shift and go to state 17
    LSETUP          shift and go to state 67
    LOOP            shift and go to state 51
    LOOP_BEGIN      shift and go to state 38
    LOOP_END        shift and go to state 46
    BITMUX          shift and go to state 82
    BITCLR          shift and go to state 93
    BITSET          shift and go to state 70
    BITTGL          shift and go to state 22
    DIVQ            shift and go to state 72
    DIVS            shift and go to state 71
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    RTS             shift and go to state 21
    RTI             shift and go to state 1
    RTX             shift and go to state 39
    RTN             shift and go to state 35
    RTE             shift and go to state 85
    LINK            shift and go to state 94
    UNLINK          shift and go to state 33
    FLUSH           shift and go to state 43
    FLUSHINV        shift and go to state 24
    IFLUSH          shift and go to state 69
    PREFETCH        shift and go to state 63
    STATUS_REG      shift and go to state 56
    V               shift and go to state 14

    cache                          shift and go to state 10
    REG_A                          shift and go to state 28
    jump                           shift and go to state 30
    reg_with_predec                shift and go to state 81
    pushpopmultiple                shift and go to state 55
    dspmult                        shift and go to state 5
    dspshift                       shift and go to state 31
    ccstat                         shift and go to state 6
    vector_mac                     shift and go to state 7
    dspalu                         shift and go to state 58
    asm_1                          shift and go to state 541
    idle                           shift and go to state 73
    other                          shift and go to state 83
    expadj                         shift and go to state 12
    assign_macfunc                 shift and go to state 77
    return                         shift and go to state 15
    comp                           shift and go to state 42
    a_assign                       shift and go to state 88
    a_plusassign                   shift and go to state 8
    nop                            shift and go to state 19
    bitlogic                       shift and go to state 20
    linkage                        shift and go to state 60
    loadstore                      shift and go to state 23
    a_minusassign                  shift and go to state 37
    loophardware                   shift and go to state 95
    a_full_macfunc                 shift and go to state 49
    assign_full_macfunc            shift and go to state 50
    deposit                        shift and go to state 97
    a_macfunc                      shift and go to state 75
    alu2                           shift and go to state 27

state 399

    (307) w32_or_nothing -> LPAREN MMOD . RPAREN

    RPAREN          shift and go to state 542


state 400

    (83) comp -> CCREG ASSIGN REG_A _ASSIGN_ASSIGN . REG_A
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 543

state 401

    (84) comp -> CCREG ASSIGN REG_A LESS_THAN . REG_A
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 544

state 402

    (89) comp -> CCREG ASSIGN REG_A _LESS_THAN_ASSIGN . REG_A
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 545

state 403

    (87) comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN . REG
    (88) comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 546
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 547
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 404

    (85) comp -> CCREG ASSIGN REG LESS_THAN . REG iu_or_nothing
    (86) comp -> CCREG ASSIGN REG LESS_THAN . expr iu_or_nothing
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 548
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120
    symbol                         shift and go to state 117
    expr                           shift and go to state 549

state 405

    (90) comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN . REG iu_or_nothing
    (91) comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN . expr iu_or_nothing
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    REG             shift and go to state 550
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120
    symbol                         shift and go to state 117
    expr                           shift and go to state 551

state 406

    (147) jump -> CCREG ASSIGN BITTST LPAREN . REG COMMA expr RPAREN

    REG             shift and go to state 552


state 407

    (145) jump -> CCREG _ASSIGN_BANG BITTST LPAREN . REG COMMA expr RPAREN

    REG             shift and go to state 553


state 408

    (185) cache -> FLUSH LBRACK REG RBRACK .

    SEMICOLON       reduce using rule 185 (cache -> FLUSH LBRACK REG RBRACK .)
    DOUBLE_BAR      reduce using rule 185 (cache -> FLUSH LBRACK REG RBRACK .)


state 409

    (196) loadstore -> W LBRACK REG plus_minus . expr RBRACK ASSIGN REG
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 554
    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120
    symbol                         shift and go to state 117

state 410

    (207) loadstore -> W LBRACK REG _PLUS_PLUS . REG RBRACK ASSIGN HALF_REG
    (333) post_op -> _PLUS_PLUS .

    REG             shift and go to state 555
    RBRACK          reduce using rule 333 (post_op -> _PLUS_PLUS .)


state 411

    (197) loadstore -> W LBRACK REG post_op . RBRACK ASSIGN REG
    (198) loadstore -> W LBRACK REG post_op . RBRACK ASSIGN HALF_REG

    RBRACK          shift and go to state 556


state 412

    (310) reg_with_predec -> LBRACK _MINUS_MINUS REG RBRACK .

    ASSIGN          reduce using rule 310 (reg_with_predec -> LBRACK _MINUS_MINUS REG RBRACK .)


state 413

    (199) loadstore -> LBRACK REG plus_minus expr . RBRACK ASSIGN REG

    RBRACK          shift and go to state 557


state 414

    (206) loadstore -> LBRACK REG _PLUS_PLUS REG . RBRACK ASSIGN REG

    RBRACK          shift and go to state 558


state 415

    (205) loadstore -> LBRACK REG post_op RBRACK . ASSIGN REG

    ASSIGN          shift and go to state 559


state 416

    (256) opt_mode -> LPAREN MMOD COMMA . M RPAREN

    M               shift and go to state 560


state 417

    (257) opt_mode -> LPAREN MMOD RPAREN .

    COMMA           reduce using rule 257 (opt_mode -> LPAREN MMOD RPAREN .)
    SEMICOLON       reduce using rule 257 (opt_mode -> LPAREN MMOD RPAREN .)
    DOUBLE_BAR      reduce using rule 257 (opt_mode -> LPAREN MMOD RPAREN .)


state 418

    (255) opt_mode -> LPAREN M COMMA . MMOD RPAREN

    MMOD            shift and go to state 561


state 419

    (258) opt_mode -> LPAREN M RPAREN .

    COMMA           reduce using rule 258 (opt_mode -> LPAREN M RPAREN .)
    SEMICOLON       reduce using rule 258 (opt_mode -> LPAREN M RPAREN .)
    DOUBLE_BAR      reduce using rule 258 (opt_mode -> LPAREN M RPAREN .)


state 420

    (230) loophardware -> LOOP REG ASSIGN NUMBER .

    SEMICOLON       reduce using rule 230 (loophardware -> LOOP REG ASSIGN NUMBER .)
    DOUBLE_BAR      reduce using rule 230 (loophardware -> LOOP REG ASSIGN NUMBER .)


state 421

    (224) loophardware -> LOOP expr REG ASSIGN . REG
    (225) loophardware -> LOOP expr REG ASSIGN . REG GREATER_GREATER expr

    REG             shift and go to state 562


state 422

    (77) dspalu -> SAA LPAREN REG COLON . expr COMMA REG COLON expr RPAREN aligndir
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 563
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 423

    (71) dspalu -> REG _PLUS_ASSIGN REG LPAREN . BREV RPAREN

    BREV            shift and go to state 564


state 424

    (132) deposit -> REG ASSIGN ROT REG . BY HALF_REG
    (134) deposit -> REG ASSIGN ROT REG . BY expr

    BY              shift and go to state 565


state 425

    (200) loadstore -> REG ASSIGN W LBRACK . REG plus_minus expr RBRACK xpmod
    (202) loadstore -> REG ASSIGN W LBRACK . REG post_op RBRACK xpmod
    (203) loadstore -> REG ASSIGN W LBRACK . REG _PLUS_PLUS REG RBRACK xpmod

    REG             shift and go to state 566


state 426

    (120) deposit -> REG ASSIGN SHIFT REG . BY HALF_REG

    BY              shift and go to state 567


state 427

    (119) deposit -> REG ASSIGN LSHIFT REG . BY HALF_REG vmod

    BY              shift and go to state 568


state 428

    (177) alu2 -> REG ASSIGN MINUS REG . vsmod
    (283) vsmod -> . empty
    (284) vsmod -> . LPAREN NS RPAREN
    (285) vsmod -> . LPAREN S RPAREN
    (286) vsmod -> . LPAREN V RPAREN
    (287) vsmod -> . LPAREN V COMMA S RPAREN
    (288) vsmod -> . LPAREN S COMMA V RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 570
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 571
    vsmod                          shift and go to state 569

state 429

    (60) dspalu -> REG ASSIGN HALF_REG xpmod .

    SEMICOLON       reduce using rule 60 (dspalu -> REG ASSIGN HALF_REG xpmod .)
    DOUBLE_BAR      reduce using rule 60 (dspalu -> REG ASSIGN HALF_REG xpmod .)


state 430

    (278) xpmod -> LPAREN . Z RPAREN
    (279) xpmod -> LPAREN . X RPAREN

    Z               shift and go to state 573
    X               shift and go to state 572


state 431

    (277) xpmod -> empty .

    SEMICOLON       reduce using rule 277 (xpmod -> empty .)
    DOUBLE_BAR      reduce using rule 277 (xpmod -> empty .)


state 432

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN . REG COLON expr COMMA REG COLON expr RPAREN rnd_op

    REG             shift and go to state 574


state 433

    (34) dspalu -> REG ASSIGN A_ONE_DOT_L PLUS . A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H

    A_ONE_DOT_H     shift and go to state 575


state 434

    (139) deposit -> REG ASSIGN VIT_MAX LPAREN . REG COMMA REG RPAREN asr_asl

    REG             shift and go to state 576


state 435

    (81) comp -> REG ASSIGN REG CARET . REG

    REG             shift and go to state 577


state 436

    (80) comp -> REG ASSIGN REG BAR . REG

    REG             shift and go to state 578


state 437

    (354) multiply_regs -> REG STAR . REG

    REG             shift and go to state 579


state 438

    (314) op_bar_op -> _PLUS_BAR_PLUS .

    REG             reduce using rule 314 (op_bar_op -> _PLUS_BAR_PLUS .)


state 439

    (108) dspshift -> REG ASSIGN REG LESS_LESS . expr vsmod
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 580
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 440

    (315) op_bar_op -> _PLUS_BAR_MINUS .

    REG             reduce using rule 315 (op_bar_op -> _PLUS_BAR_MINUS .)


state 441

    (92) comp -> REG ASSIGN REG AMPERSAND . REG

    REG             shift and go to state 581


state 442

    (125) deposit -> REG ASSIGN REG _GREATER_GREATER_GREATER . expr vsmod
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 582
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 443

    (82) comp -> REG ASSIGN REG PLUS . LPAREN REG LESS_LESS expr RPAREN
    (318) plus_minus -> PLUS .

    LPAREN          shift and go to state 583
    REG             reduce using rule 318 (plus_minus -> PLUS .)


state 444

    (316) op_bar_op -> _MINUS_BAR_PLUS .

    REG             reduce using rule 316 (op_bar_op -> _MINUS_BAR_PLUS .)


state 445

    (37) dspalu -> REG ASSIGN REG op_bar_op . REG COMMA REG ASSIGN REG op_bar_op REG amod2
    (65) dspalu -> REG ASSIGN REG op_bar_op . REG amod0

    REG             shift and go to state 584


state 446

    (317) op_bar_op -> _MINUS_BAR_MINUS .

    REG             reduce using rule 317 (op_bar_op -> _MINUS_BAR_MINUS .)


state 447

    (36) dspalu -> REG ASSIGN REG plus_minus . REG COMMA REG ASSIGN REG plus_minus REG amod1
    (49) dspalu -> REG ASSIGN REG plus_minus . REG amod1

    REG             shift and go to state 585


state 448

    (122) deposit -> REG ASSIGN REG GREATER_GREATER . expr vmod
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 586
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 449

    (99) dspmult -> REG ASSIGN multiply_regs opt_mode .

    DOUBLE_BAR      reduce using rule 99 (dspmult -> REG ASSIGN multiply_regs opt_mode .)
    SEMICOLON       reduce using rule 99 (dspmult -> REG ASSIGN multiply_regs opt_mode .)


state 450

    (35) dspalu -> REG ASSIGN REG_A PLUS . REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 587

state 451

    (50) dspalu -> REG ASSIGN min_max LPAREN . REG COMMA REG RPAREN vmod

    REG             shift and go to state 588


state 452

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN . REG COLON expr COMMA REG COLON expr RPAREN b3_op

    REG             shift and go to state 589


state 453

    (38) dspalu -> REG ASSIGN ABS REG . vmod
    (289) vmod -> . empty
    (290) vmod -> . LPAREN V RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 591
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 592
    vmod                           shift and go to state 590

state 454

    (113) deposit -> REG ASSIGN DEPOSIT LPAREN . REG COMMA REG RPAREN
    (114) deposit -> REG ASSIGN DEPOSIT LPAREN . REG COMMA REG RPAREN LPAREN X RPAREN

    REG             shift and go to state 593


state 455

    (351) a_full_macfunc -> LPAREN . A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> LPAREN . A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> LPAREN . A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs
    (374) eterm -> LPAREN . expr_1 RPAREN
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    A_ONE_COLON_ZERO shift and go to state 198
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 215

state 456

    (343) assign_full_macfunc -> REG ASSIGN LPAREN A_ONE_COLON_ZERO . RPAREN

    RPAREN          shift and go to state 594


state 457

    (79) dspalu -> REG ASSIGN LPAREN REG . PLUS REG RPAREN LESS_LESS expr

    PLUS            shift and go to state 595


state 458

    (26) dspalu -> REG ASSIGN LPAREN a_plusassign . REG_A RPAREN
    (349) a_macfunc -> a_plusassign . multiply_halfregs
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13
    HALF_REG        shift and go to state 101

    multiply_halfregs              shift and go to state 102
    REG_A                          shift and go to state 596

state 459

    (346) assign_full_macfunc -> REG ASSIGN LPAREN a_full_macfunc . RPAREN

    RPAREN          shift and go to state 597


state 460

    (340) assign_macfunc -> REG ASSIGN LPAREN a_macfunc . RPAREN

    RPAREN          shift and go to state 598


state 461

    (47) dspalu -> REG ASSIGN BYTEPACK LPAREN . REG COMMA REG RPAREN

    REG             shift and go to state 599


state 462

    (66) dspalu -> REG ASSIGN BYTE_DREG xpmod .

    SEMICOLON       reduce using rule 66 (dspalu -> REG ASSIGN BYTE_DREG xpmod .)
    DOUBLE_BAR      reduce using rule 66 (dspalu -> REG ASSIGN BYTE_DREG xpmod .)


state 463

    (100) dspmult -> REG ASSIGN multiply_halfregs opt_mode .
    (102) dspmult -> REG ASSIGN multiply_halfregs opt_mode . COMMA REG ASSIGN multiply_halfregs opt_mode

    DOUBLE_BAR      reduce using rule 100 (dspmult -> REG ASSIGN multiply_halfregs opt_mode .)
    SEMICOLON       reduce using rule 100 (dspmult -> REG ASSIGN multiply_halfregs opt_mode .)
    COMMA           shift and go to state 600


state 464

    (281) xpmod1 -> LPAREN . X RPAREN
    (282) xpmod1 -> LPAREN . Z RPAREN

    X               shift and go to state 601
    Z               shift and go to state 602


state 465

    (63) dspalu -> REG ASSIGN expr xpmod1 .

    SEMICOLON       reduce using rule 63 (dspalu -> REG ASSIGN expr xpmod1 .)
    DOUBLE_BAR      reduce using rule 63 (dspalu -> REG ASSIGN expr xpmod1 .)


state 466

    (280) xpmod1 -> empty .

    SEMICOLON       reduce using rule 280 (xpmod1 -> empty .)
    DOUBLE_BAR      reduce using rule 280 (xpmod1 -> empty .)


state 467

    (115) deposit -> REG ASSIGN EXTRACT LPAREN . REG COMMA HALF_REG RPAREN xpmod

    REG             shift and go to state 603


state 468

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN . REG COLON expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P LPAREN . REG COLON expr COMMA REG COLON expr RPAREN

    REG             shift and go to state 604


state 469

    (210) loadstore -> REG ASSIGN LBRACK REG . _PLUS_PLUS REG RBRACK
    (211) loadstore -> REG ASSIGN LBRACK REG . plus_minus got_or_expr RBRACK
    (212) loadstore -> REG ASSIGN LBRACK REG . post_op RBRACK
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS
    (332) post_op -> . empty
    (333) post_op -> . _PLUS_PLUS
    (334) post_op -> . _MINUS_MINUS
    (389) empty -> .

    _PLUS_PLUS      shift and go to state 606
    PLUS            shift and go to state 265
    MINUS           shift and go to state 266
    _MINUS_MINUS    shift and go to state 262
    RBRACK          reduce using rule 389 (empty -> .)

    post_op                        shift and go to state 607
    empty                          shift and go to state 267
    plus_minus                     shift and go to state 605

state 470

    (178) alu2 -> REG ASSIGN TILDA REG .

    SEMICOLON       reduce using rule 178 (alu2 -> REG ASSIGN TILDA REG .)
    DOUBLE_BAR      reduce using rule 178 (alu2 -> REG ASSIGN TILDA REG .)


state 471

    (42) dspalu -> REG ASSIGN c_align LPAREN . REG COMMA REG RPAREN

    REG             shift and go to state 608


state 472

    (208) loadstore -> REG ASSIGN B LBRACK . REG plus_minus expr RBRACK xpmod
    (209) loadstore -> REG ASSIGN B LBRACK . REG post_op RBRACK xpmod

    REG             shift and go to state 609


state 473

    (110) dspshift -> REG ASSIGN ASHIFT REG . BY HALF_REG vsmod

    BY              shift and go to state 610


state 474

    (127) deposit -> REG ASSIGN PACK LPAREN . HALF_REG COMMA HALF_REG RPAREN

    HALF_REG        shift and go to state 611


state 475

    (149) jump -> IF CCREG REG ASSIGN . REG

    REG             shift and go to state 612


state 476

    (152) jump -> IF CCREG JUMP expr .
    (153) jump -> IF CCREG JUMP expr . LPAREN BP RPAREN

    SEMICOLON       reduce using rule 152 (jump -> IF CCREG JUMP expr .)
    DOUBLE_BAR      reduce using rule 152 (jump -> IF CCREG JUMP expr .)
    LPAREN          shift and go to state 613


state 477

    (150) jump -> IF BANG CCREG JUMP . expr
    (151) jump -> IF BANG CCREG JUMP . expr LPAREN BP RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 614
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 478

    (148) jump -> IF BANG CCREG REG . ASSIGN REG

    ASSIGN          shift and go to state 615


state 479

    (191) cache -> PREFETCH LBRACK REG RBRACK .

    SEMICOLON       reduce using rule 191 (cache -> PREFETCH LBRACK REG RBRACK .)
    DOUBLE_BAR      reduce using rule 191 (cache -> PREFETCH LBRACK REG RBRACK .)


state 480

    (195) loadstore -> B LBRACK REG plus_minus . expr RBRACK ASSIGN REG
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 616
    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120
    symbol                         shift and go to state 117

state 481

    (333) post_op -> _PLUS_PLUS .

    RBRACK          reduce using rule 333 (post_op -> _PLUS_PLUS .)


state 482

    (194) loadstore -> B LBRACK REG post_op . RBRACK ASSIGN REG

    RBRACK          shift and go to state 617


state 483

    (220) loophardware -> LSETUP LPAREN expr COMMA . expr RPAREN REG
    (221) loophardware -> LSETUP LPAREN expr COMMA . expr RPAREN REG ASSIGN REG
    (222) loophardware -> LSETUP LPAREN expr COMMA . expr RPAREN REG ASSIGN REG GREATER_GREATER expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 618
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 484

    (157) jump -> JUMP LPAREN PC PLUS . REG RPAREN

    REG             shift and go to state 619


state 485

    (154) jump -> JUMP LPAREN REG RPAREN .

    SEMICOLON       reduce using rule 154 (jump -> JUMP LPAREN REG RPAREN .)
    DOUBLE_BAR      reduce using rule 154 (jump -> JUMP LPAREN REG RPAREN .)


state 486

    (189) cache -> IFLUSH LBRACK REG RBRACK .

    SEMICOLON       reduce using rule 189 (cache -> IFLUSH LBRACK REG RBRACK .)
    DOUBLE_BAR      reduce using rule 189 (cache -> IFLUSH LBRACK REG RBRACK .)


state 487

    (143) bitlogic -> BITSET LPAREN REG COMMA . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 620
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 488

    (176) alu2 -> DIVS LPAREN REG COMMA . REG RPAREN

    REG             shift and go to state 621


state 489

    (175) alu2 -> DIVQ LPAREN REG COMMA . REG RPAREN

    REG             shift and go to state 622


state 490

    (160) jump -> TESTSET LPAREN REG RPAREN .

    SEMICOLON       reduce using rule 160 (jump -> TESTSET LPAREN REG RPAREN .)
    DOUBLE_BAR      reduce using rule 160 (jump -> TESTSET LPAREN REG RPAREN .)


state 491

    (341) assign_macfunc -> HALF_REG . ASSIGN LPAREN a_macfunc RPAREN
    (342) assign_macfunc -> HALF_REG . ASSIGN REG_A

    ASSIGN          shift and go to state 623


state 492

    (17) vector_mac -> assign_macfunc opt_mode COMMA assign_macfunc . opt_mode
    (254) opt_mode -> . empty
    (255) opt_mode -> . LPAREN M COMMA MMOD RPAREN
    (256) opt_mode -> . LPAREN MMOD COMMA M RPAREN
    (257) opt_mode -> . LPAREN MMOD RPAREN
    (258) opt_mode -> . LPAREN M RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 150
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    opt_mode                       shift and go to state 624
    empty                          shift and go to state 151

state 493

    (335) a_assign -> REG_A . ASSIGN
    (337) a_plusassign -> REG_A . _PLUS_ASSIGN
    (336) a_minusassign -> REG_A . _MINUS_ASSIGN

    ASSIGN          shift and go to state 128
    _PLUS_ASSIGN    shift and go to state 536
    _MINUS_ASSIGN   shift and go to state 129


state 494

    (338) assign_macfunc -> REG . ASSIGN REG_A
    (340) assign_macfunc -> REG . ASSIGN LPAREN a_macfunc RPAREN

    ASSIGN          shift and go to state 625


state 495

    (249) other -> DBGAL LPAREN REG COMMA . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 626
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 496

    (213) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG . COLON expr COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG . COLON expr RPAREN

    COLON           shift and go to state 627


state 497

    (140) deposit -> BITMUX LPAREN REG COMMA . REG COMMA REG_A RPAREN asr_asl

    REG             shift and go to state 628


state 498

    (248) other -> DBGAH LPAREN REG COMMA . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 629
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 499

    (107) dspshift -> a_assign REG_A LESS_LESS expr .

    DOUBLE_BAR      reduce using rule 107 (dspshift -> a_assign REG_A LESS_LESS expr .)
    SEMICOLON       reduce using rule 107 (dspshift -> a_assign REG_A LESS_LESS expr .)


state 500

    (121) deposit -> a_assign REG_A GREATER_GREATER expr .

    SEMICOLON       reduce using rule 121 (deposit -> a_assign REG_A GREATER_GREATER expr .)
    DOUBLE_BAR      reduce using rule 121 (deposit -> a_assign REG_A GREATER_GREATER expr .)


state 501

    (54) dspalu -> a_assign REG_A LPAREN S . RPAREN
    (78) dspalu -> a_assign REG_A LPAREN S . RPAREN COMMA a_assign REG_A LPAREN S RPAREN

    RPAREN          shift and go to state 630


state 502

    (116) deposit -> a_assign REG_A _GREATER_GREATER_GREATER expr .

    SEMICOLON       reduce using rule 116 (deposit -> a_assign REG_A _GREATER_GREATER_GREATER expr .)
    DOUBLE_BAR      reduce using rule 116 (deposit -> a_assign REG_A _GREATER_GREATER_GREATER expr .)


state 503

    (117) deposit -> a_assign LSHIFT REG_A BY . HALF_REG

    HALF_REG        shift and go to state 631


state 504

    (68) dspalu -> a_assign MINUS REG_A COMMA . a_assign MINUS REG_A
    (335) a_assign -> . REG_A ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 632
    a_assign                       shift and go to state 633

state 505

    (141) deposit -> a_assign BXORSHIFT LPAREN REG_A . COMMA REG_A COMMA CCREG RPAREN

    COMMA           shift and go to state 634


state 506

    (131) deposit -> a_assign ROT REG_A BY . HALF_REG
    (133) deposit -> a_assign ROT REG_A BY . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    HALF_REG        shift and go to state 635
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr                           shift and go to state 636
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 507

    (67) dspalu -> a_assign ABS REG_A COMMA . a_assign ABS REG_A
    (335) a_assign -> . REG_A ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 632
    a_assign                       shift and go to state 637

state 508

    (105) dspshift -> a_assign ASHIFT REG_A BY . HALF_REG

    HALF_REG        shift and go to state 638


state 509

    (353) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN . multiply_regs
    (354) multiply_regs -> . REG STAR REG

    REG             shift and go to state 640

    multiply_regs                  shift and go to state 639

state 510

    (352) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN . multiply_regs
    (354) multiply_regs -> . REG STAR REG

    REG             shift and go to state 640

    multiply_regs                  shift and go to state 641

state 511

    (351) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN . multiply_regs
    (354) multiply_regs -> . REG STAR REG

    REG             shift and go to state 640

    multiply_regs                  shift and go to state 642

state 512

    (30) dspalu -> LPAREN REG COMMA REG . RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> LPAREN REG COMMA REG . RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> LPAREN REG COMMA REG . RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> LPAREN REG COMMA REG . RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN

    RPAREN          shift and go to state 643


state 513

    (344) assign_full_macfunc -> LPAREN REG COLON REG . RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> LPAREN REG COLON REG . RPAREN ASSIGN multiply_regs
    (347) assign_full_macfunc -> LPAREN REG COLON REG . RPAREN ASSIGN LPAREN a_full_macfunc RPAREN

    RPAREN          shift and go to state 644


state 514

    (215) pushpopmultiple -> LPAREN REG COLON expr . COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc
    (216) pushpopmultiple -> LPAREN REG COLON expr . RPAREN ASSIGN reg_with_postinc

    COMMA           shift and go to state 646
    RPAREN          shift and go to state 645


state 515

    (142) bitlogic -> BITCLR LPAREN REG COMMA . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 647
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 516

    (156) jump -> CALL LPAREN PC PLUS . REG RPAREN

    REG             shift and go to state 648


state 517

    (155) jump -> CALL LPAREN REG RPAREN .

    SEMICOLON       reduce using rule 155 (jump -> CALL LPAREN REG RPAREN .)
    DOUBLE_BAR      reduce using rule 155 (jump -> CALL LPAREN REG RPAREN .)


state 518

    (371) pltpc -> symbol AT PLTPC .

    SEMICOLON       reduce using rule 371 (pltpc -> symbol AT PLTPC .)
    DOUBLE_BAR      reduce using rule 371 (pltpc -> symbol AT PLTPC .)


state 519

    (144) bitlogic -> BITTGL LPAREN REG COMMA expr . RPAREN

    RPAREN          shift and go to state 649


state 520

    (311) reg_with_postinc -> LBRACK REG _PLUS_PLUS RBRACK .

    SEMICOLON       reduce using rule 311 (reg_with_postinc -> LBRACK REG _PLUS_PLUS RBRACK .)
    DOUBLE_BAR      reduce using rule 311 (reg_with_postinc -> LBRACK REG _PLUS_PLUS RBRACK .)


state 521

    (247) other -> DBGA LPAREN HALF_REG COMMA expr . RPAREN

    RPAREN          shift and go to state 650


state 522

    (201) loadstore -> HALF_REG ASSIGN W LBRACK REG . post_op RBRACK
    (204) loadstore -> HALF_REG ASSIGN W LBRACK REG . _PLUS_PLUS REG RBRACK
    (332) post_op -> . empty
    (333) post_op -> . _PLUS_PLUS
    (334) post_op -> . _MINUS_MINUS
    (389) empty -> .

    _PLUS_PLUS      shift and go to state 651
    _MINUS_MINUS    shift and go to state 262
    RBRACK          reduce using rule 389 (empty -> .)

    empty                          shift and go to state 267
    post_op                        shift and go to state 652

state 523

    (118) deposit -> HALF_REG ASSIGN LSHIFT HALF_REG BY . HALF_REG

    HALF_REG        shift and go to state 653


state 524

    (109) dspshift -> HALF_REG ASSIGN HALF_REG LESS_LESS expr . smod
    (291) smod -> . empty
    (292) smod -> . LPAREN S RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 654
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 656
    smod                           shift and go to state 655

state 525

    (52) dspalu -> HALF_REG ASSIGN HALF_REG plus_minus HALF_REG . amod1
    (269) amod1 -> . empty
    (270) amod1 -> . LPAREN NS RPAREN
    (271) amod1 -> . LPAREN S RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 658
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    amod1                          shift and go to state 657
    empty                          shift and go to state 659

state 526

    (123) deposit -> HALF_REG ASSIGN HALF_REG GREATER_GREATER expr .

    SEMICOLON       reduce using rule 123 (deposit -> HALF_REG ASSIGN HALF_REG GREATER_GREATER expr .)
    DOUBLE_BAR      reduce using rule 123 (deposit -> HALF_REG ASSIGN HALF_REG GREATER_GREATER expr .)


state 527

    (124) deposit -> HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr . smod
    (291) smod -> . empty
    (292) smod -> . LPAREN S RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 654
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 656
    smod                           shift and go to state 660

state 528

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN . LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG

    LPAREN          shift and go to state 661


state 529

    (128) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT . LPAREN REG_A COMMA REG RPAREN

    LPAREN          shift and go to state 662


state 530

    (129) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR . LPAREN REG_A COMMA REG RPAREN
    (130) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR . LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN

    LPAREN          shift and go to state 663


state 531

    (138) deposit -> HALF_REG ASSIGN VIT_MAX LPAREN REG . RPAREN asr_asl

    RPAREN          shift and go to state 664


state 532

    (56) dspalu -> HALF_REG ASSIGN REG plus_minus REG . LPAREN RND12 RPAREN
    (57) dspalu -> HALF_REG ASSIGN REG plus_minus REG . LPAREN RND20 RPAREN

    LPAREN          shift and go to state 665


state 533

    (55) dspalu -> HALF_REG ASSIGN REG LPAREN RND . RPAREN

    RPAREN          shift and go to state 666


state 534

    (112) expadj -> HALF_REG ASSIGN EXPADJ LPAREN HALF_REG . COMMA HALF_REG RPAREN

    COMMA           shift and go to state 667


state 535

    (111) expadj -> HALF_REG ASSIGN EXPADJ LPAREN REG . COMMA HALF_REG RPAREN vmod

    COMMA           shift and go to state 668


state 536

    (337) a_plusassign -> REG_A _PLUS_ASSIGN .

    REG_A_DOUBLE_ZERO reduce using rule 337 (a_plusassign -> REG_A _PLUS_ASSIGN .)
    REG_A_DOUBLE_ONE reduce using rule 337 (a_plusassign -> REG_A _PLUS_ASSIGN .)
    HALF_REG        reduce using rule 337 (a_plusassign -> REG_A _PLUS_ASSIGN .)


state 537

    (27) dspalu -> HALF_REG ASSIGN LPAREN a_plusassign REG_A . RPAREN

    RPAREN          shift and go to state 669


state 538

    (341) assign_macfunc -> HALF_REG ASSIGN LPAREN a_macfunc RPAREN .

    LPAREN          reduce using rule 341 (assign_macfunc -> HALF_REG ASSIGN LPAREN a_macfunc RPAREN .)
    COMMA           reduce using rule 341 (assign_macfunc -> HALF_REG ASSIGN LPAREN a_macfunc RPAREN .)
    SEMICOLON       reduce using rule 341 (assign_macfunc -> HALF_REG ASSIGN LPAREN a_macfunc RPAREN .)
    DOUBLE_BAR      reduce using rule 341 (assign_macfunc -> HALF_REG ASSIGN LPAREN a_macfunc RPAREN .)


state 539

    (101) dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode COMMA . HALF_REG ASSIGN multiply_halfregs opt_mode

    HALF_REG        shift and go to state 670


state 540

    (106) dspshift -> HALF_REG ASSIGN ASHIFT HALF_REG BY . HALF_REG smod

    HALF_REG        shift and go to state 671


state 541

    (15) parallel_instructions -> asm_1 DOUBLE_BAR asm_1 DOUBLE_BAR asm_1 .

    SEMICOLON       reduce using rule 15 (parallel_instructions -> asm_1 DOUBLE_BAR asm_1 DOUBLE_BAR asm_1 .)


state 542

    (307) w32_or_nothing -> LPAREN MMOD RPAREN .

    SEMICOLON       reduce using rule 307 (w32_or_nothing -> LPAREN MMOD RPAREN .)
    DOUBLE_BAR      reduce using rule 307 (w32_or_nothing -> LPAREN MMOD RPAREN .)


state 543

    (83) comp -> CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A .

    SEMICOLON       reduce using rule 83 (comp -> CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A .)
    DOUBLE_BAR      reduce using rule 83 (comp -> CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A .)


state 544

    (84) comp -> CCREG ASSIGN REG_A LESS_THAN REG_A .

    SEMICOLON       reduce using rule 84 (comp -> CCREG ASSIGN REG_A LESS_THAN REG_A .)
    DOUBLE_BAR      reduce using rule 84 (comp -> CCREG ASSIGN REG_A LESS_THAN REG_A .)


state 545

    (89) comp -> CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A .

    SEMICOLON       reduce using rule 89 (comp -> CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A .)
    DOUBLE_BAR      reduce using rule 89 (comp -> CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A .)


state 546

    (87) comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN REG .

    SEMICOLON       reduce using rule 87 (comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 87 (comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN REG .)


state 547

    (88) comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN expr .

    SEMICOLON       reduce using rule 88 (comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN expr .)
    DOUBLE_BAR      reduce using rule 88 (comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN expr .)


state 548

    (85) comp -> CCREG ASSIGN REG LESS_THAN REG . iu_or_nothing
    (308) iu_or_nothing -> . empty
    (309) iu_or_nothing -> . LPAREN MMOD RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 672
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    iu_or_nothing                  shift and go to state 673
    empty                          shift and go to state 674

state 549

    (86) comp -> CCREG ASSIGN REG LESS_THAN expr . iu_or_nothing
    (308) iu_or_nothing -> . empty
    (309) iu_or_nothing -> . LPAREN MMOD RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 672
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 674
    iu_or_nothing                  shift and go to state 675

state 550

    (90) comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN REG . iu_or_nothing
    (308) iu_or_nothing -> . empty
    (309) iu_or_nothing -> . LPAREN MMOD RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 672
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    iu_or_nothing                  shift and go to state 676
    empty                          shift and go to state 674

state 551

    (91) comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN expr . iu_or_nothing
    (308) iu_or_nothing -> . empty
    (309) iu_or_nothing -> . LPAREN MMOD RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 672
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 674
    iu_or_nothing                  shift and go to state 677

state 552

    (147) jump -> CCREG ASSIGN BITTST LPAREN REG . COMMA expr RPAREN

    COMMA           shift and go to state 678


state 553

    (145) jump -> CCREG _ASSIGN_BANG BITTST LPAREN REG . COMMA expr RPAREN

    COMMA           shift and go to state 679


state 554

    (196) loadstore -> W LBRACK REG plus_minus expr . RBRACK ASSIGN REG

    RBRACK          shift and go to state 680


state 555

    (207) loadstore -> W LBRACK REG _PLUS_PLUS REG . RBRACK ASSIGN HALF_REG

    RBRACK          shift and go to state 681


state 556

    (197) loadstore -> W LBRACK REG post_op RBRACK . ASSIGN REG
    (198) loadstore -> W LBRACK REG post_op RBRACK . ASSIGN HALF_REG

    ASSIGN          shift and go to state 682


state 557

    (199) loadstore -> LBRACK REG plus_minus expr RBRACK . ASSIGN REG

    ASSIGN          shift and go to state 683


state 558

    (206) loadstore -> LBRACK REG _PLUS_PLUS REG RBRACK . ASSIGN REG

    ASSIGN          shift and go to state 684


state 559

    (205) loadstore -> LBRACK REG post_op RBRACK ASSIGN . REG

    REG             shift and go to state 685


state 560

    (256) opt_mode -> LPAREN MMOD COMMA M . RPAREN

    RPAREN          shift and go to state 686


state 561

    (255) opt_mode -> LPAREN M COMMA MMOD . RPAREN

    RPAREN          shift and go to state 687


state 562

    (224) loophardware -> LOOP expr REG ASSIGN REG .
    (225) loophardware -> LOOP expr REG ASSIGN REG . GREATER_GREATER expr

    SEMICOLON       reduce using rule 224 (loophardware -> LOOP expr REG ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 224 (loophardware -> LOOP expr REG ASSIGN REG .)
    GREATER_GREATER shift and go to state 688


state 563

    (77) dspalu -> SAA LPAREN REG COLON expr . COMMA REG COLON expr RPAREN aligndir

    COMMA           shift and go to state 689


state 564

    (71) dspalu -> REG _PLUS_ASSIGN REG LPAREN BREV . RPAREN

    RPAREN          shift and go to state 690


state 565

    (132) deposit -> REG ASSIGN ROT REG BY . HALF_REG
    (134) deposit -> REG ASSIGN ROT REG BY . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    HALF_REG        shift and go to state 691
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 692
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 566

    (200) loadstore -> REG ASSIGN W LBRACK REG . plus_minus expr RBRACK xpmod
    (202) loadstore -> REG ASSIGN W LBRACK REG . post_op RBRACK xpmod
    (203) loadstore -> REG ASSIGN W LBRACK REG . _PLUS_PLUS REG RBRACK xpmod
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS
    (332) post_op -> . empty
    (333) post_op -> . _PLUS_PLUS
    (334) post_op -> . _MINUS_MINUS
    (389) empty -> .

    _PLUS_PLUS      shift and go to state 694
    PLUS            shift and go to state 265
    MINUS           shift and go to state 266
    _MINUS_MINUS    shift and go to state 262
    RBRACK          reduce using rule 389 (empty -> .)

    post_op                        shift and go to state 695
    empty                          shift and go to state 267
    plus_minus                     shift and go to state 693

state 567

    (120) deposit -> REG ASSIGN SHIFT REG BY . HALF_REG

    HALF_REG        shift and go to state 696


state 568

    (119) deposit -> REG ASSIGN LSHIFT REG BY . HALF_REG vmod

    HALF_REG        shift and go to state 697


state 569

    (177) alu2 -> REG ASSIGN MINUS REG vsmod .

    SEMICOLON       reduce using rule 177 (alu2 -> REG ASSIGN MINUS REG vsmod .)
    DOUBLE_BAR      reduce using rule 177 (alu2 -> REG ASSIGN MINUS REG vsmod .)


state 570

    (284) vsmod -> LPAREN . NS RPAREN
    (285) vsmod -> LPAREN . S RPAREN
    (286) vsmod -> LPAREN . V RPAREN
    (287) vsmod -> LPAREN . V COMMA S RPAREN
    (288) vsmod -> LPAREN . S COMMA V RPAREN

    NS              shift and go to state 700
    S               shift and go to state 698
    V               shift and go to state 699


state 571

    (283) vsmod -> empty .

    SEMICOLON       reduce using rule 283 (vsmod -> empty .)
    DOUBLE_BAR      reduce using rule 283 (vsmod -> empty .)


state 572

    (279) xpmod -> LPAREN X . RPAREN

    RPAREN          shift and go to state 701


state 573

    (278) xpmod -> LPAREN Z . RPAREN

    RPAREN          shift and go to state 702


state 574

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN REG . COLON expr COMMA REG COLON expr RPAREN rnd_op

    COLON           shift and go to state 703


state 575

    (34) dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H . COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H

    COMMA           shift and go to state 704


state 576

    (139) deposit -> REG ASSIGN VIT_MAX LPAREN REG . COMMA REG RPAREN asr_asl

    COMMA           shift and go to state 705


state 577

    (81) comp -> REG ASSIGN REG CARET REG .

    SEMICOLON       reduce using rule 81 (comp -> REG ASSIGN REG CARET REG .)
    DOUBLE_BAR      reduce using rule 81 (comp -> REG ASSIGN REG CARET REG .)


state 578

    (80) comp -> REG ASSIGN REG BAR REG .

    SEMICOLON       reduce using rule 80 (comp -> REG ASSIGN REG BAR REG .)
    DOUBLE_BAR      reduce using rule 80 (comp -> REG ASSIGN REG BAR REG .)


state 579

    (354) multiply_regs -> REG STAR REG .

    LPAREN          reduce using rule 354 (multiply_regs -> REG STAR REG .)
    SEMICOLON       reduce using rule 354 (multiply_regs -> REG STAR REG .)
    DOUBLE_BAR      reduce using rule 354 (multiply_regs -> REG STAR REG .)
    RPAREN          reduce using rule 354 (multiply_regs -> REG STAR REG .)


state 580

    (108) dspshift -> REG ASSIGN REG LESS_LESS expr . vsmod
    (283) vsmod -> . empty
    (284) vsmod -> . LPAREN NS RPAREN
    (285) vsmod -> . LPAREN S RPAREN
    (286) vsmod -> . LPAREN V RPAREN
    (287) vsmod -> . LPAREN V COMMA S RPAREN
    (288) vsmod -> . LPAREN S COMMA V RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 570
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 571
    vsmod                          shift and go to state 706

state 581

    (92) comp -> REG ASSIGN REG AMPERSAND REG .

    SEMICOLON       reduce using rule 92 (comp -> REG ASSIGN REG AMPERSAND REG .)
    DOUBLE_BAR      reduce using rule 92 (comp -> REG ASSIGN REG AMPERSAND REG .)


state 582

    (125) deposit -> REG ASSIGN REG _GREATER_GREATER_GREATER expr . vsmod
    (283) vsmod -> . empty
    (284) vsmod -> . LPAREN NS RPAREN
    (285) vsmod -> . LPAREN S RPAREN
    (286) vsmod -> . LPAREN V RPAREN
    (287) vsmod -> . LPAREN V COMMA S RPAREN
    (288) vsmod -> . LPAREN S COMMA V RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 570
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 571
    vsmod                          shift and go to state 707

state 583

    (82) comp -> REG ASSIGN REG PLUS LPAREN . REG LESS_LESS expr RPAREN

    REG             shift and go to state 708


state 584

    (37) dspalu -> REG ASSIGN REG op_bar_op REG . COMMA REG ASSIGN REG op_bar_op REG amod2
    (65) dspalu -> REG ASSIGN REG op_bar_op REG . amod0
    (267) amod0 -> . empty
    (268) amod0 -> . LPAREN sco RPAREN
    (389) empty -> .

    COMMA           shift and go to state 711
    LPAREN          shift and go to state 709
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    amod0                          shift and go to state 710
    empty                          shift and go to state 712

state 585

    (36) dspalu -> REG ASSIGN REG plus_minus REG . COMMA REG ASSIGN REG plus_minus REG amod1
    (49) dspalu -> REG ASSIGN REG plus_minus REG . amod1
    (269) amod1 -> . empty
    (270) amod1 -> . LPAREN NS RPAREN
    (271) amod1 -> . LPAREN S RPAREN
    (389) empty -> .

    COMMA           shift and go to state 713
    LPAREN          shift and go to state 658
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    amod1                          shift and go to state 714
    empty                          shift and go to state 659

state 586

    (122) deposit -> REG ASSIGN REG GREATER_GREATER expr . vmod
    (289) vmod -> . empty
    (290) vmod -> . LPAREN V RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 591
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 592
    vmod                           shift and go to state 715

state 587

    (35) dspalu -> REG ASSIGN REG_A PLUS REG_A . COMMA REG ASSIGN REG_A MINUS REG_A amod1

    COMMA           shift and go to state 716


state 588

    (50) dspalu -> REG ASSIGN min_max LPAREN REG . COMMA REG RPAREN vmod

    COMMA           shift and go to state 717


state 589

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN REG . COLON expr COMMA REG COLON expr RPAREN b3_op

    COLON           shift and go to state 718


state 590

    (38) dspalu -> REG ASSIGN ABS REG vmod .

    SEMICOLON       reduce using rule 38 (dspalu -> REG ASSIGN ABS REG vmod .)
    DOUBLE_BAR      reduce using rule 38 (dspalu -> REG ASSIGN ABS REG vmod .)


state 591

    (290) vmod -> LPAREN . V RPAREN

    V               shift and go to state 719


state 592

    (289) vmod -> empty .

    SEMICOLON       reduce using rule 289 (vmod -> empty .)
    DOUBLE_BAR      reduce using rule 289 (vmod -> empty .)


state 593

    (113) deposit -> REG ASSIGN DEPOSIT LPAREN REG . COMMA REG RPAREN
    (114) deposit -> REG ASSIGN DEPOSIT LPAREN REG . COMMA REG RPAREN LPAREN X RPAREN

    COMMA           shift and go to state 720


state 594

    (343) assign_full_macfunc -> REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN .

    LPAREN          reduce using rule 343 (assign_full_macfunc -> REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN .)
    DOUBLE_BAR      reduce using rule 343 (assign_full_macfunc -> REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN .)
    SEMICOLON       reduce using rule 343 (assign_full_macfunc -> REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN .)


state 595

    (79) dspalu -> REG ASSIGN LPAREN REG PLUS . REG RPAREN LESS_LESS expr

    REG             shift and go to state 721


state 596

    (26) dspalu -> REG ASSIGN LPAREN a_plusassign REG_A . RPAREN

    RPAREN          shift and go to state 722


state 597

    (346) assign_full_macfunc -> REG ASSIGN LPAREN a_full_macfunc RPAREN .

    LPAREN          reduce using rule 346 (assign_full_macfunc -> REG ASSIGN LPAREN a_full_macfunc RPAREN .)
    DOUBLE_BAR      reduce using rule 346 (assign_full_macfunc -> REG ASSIGN LPAREN a_full_macfunc RPAREN .)
    SEMICOLON       reduce using rule 346 (assign_full_macfunc -> REG ASSIGN LPAREN a_full_macfunc RPAREN .)


state 598

    (340) assign_macfunc -> REG ASSIGN LPAREN a_macfunc RPAREN .

    LPAREN          reduce using rule 340 (assign_macfunc -> REG ASSIGN LPAREN a_macfunc RPAREN .)
    COMMA           reduce using rule 340 (assign_macfunc -> REG ASSIGN LPAREN a_macfunc RPAREN .)
    SEMICOLON       reduce using rule 340 (assign_macfunc -> REG ASSIGN LPAREN a_macfunc RPAREN .)
    DOUBLE_BAR      reduce using rule 340 (assign_macfunc -> REG ASSIGN LPAREN a_macfunc RPAREN .)


state 599

    (47) dspalu -> REG ASSIGN BYTEPACK LPAREN REG . COMMA REG RPAREN

    COMMA           shift and go to state 723


state 600

    (102) dspmult -> REG ASSIGN multiply_halfregs opt_mode COMMA . REG ASSIGN multiply_halfregs opt_mode

    REG             shift and go to state 724


state 601

    (281) xpmod1 -> LPAREN X . RPAREN

    RPAREN          shift and go to state 725


state 602

    (282) xpmod1 -> LPAREN Z . RPAREN

    RPAREN          shift and go to state 726


state 603

    (115) deposit -> REG ASSIGN EXTRACT LPAREN REG . COMMA HALF_REG RPAREN xpmod

    COMMA           shift and go to state 727


state 604

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG . COLON expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG . COLON expr COMMA REG COLON expr RPAREN

    COLON           shift and go to state 728


state 605

    (211) loadstore -> REG ASSIGN LBRACK REG plus_minus . got_or_expr RBRACK
    (369) got_or_expr -> . got
    (370) got_or_expr -> . expr
    (368) got -> . symbol AT any_gotrel
    (377) expr -> . expr_1
    (364) symbol -> . SYMBOL
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1

    SYMBOL          shift and go to state 118
    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116

    eterm                          shift and go to state 111
    got_or_expr                    shift and go to state 729
    expr                           shift and go to state 732
    symbol                         shift and go to state 731
    got                            shift and go to state 730
    expr_1                         shift and go to state 120

state 606

    (210) loadstore -> REG ASSIGN LBRACK REG _PLUS_PLUS . REG RBRACK
    (333) post_op -> _PLUS_PLUS .

    REG             shift and go to state 733
    RBRACK          reduce using rule 333 (post_op -> _PLUS_PLUS .)


state 607

    (212) loadstore -> REG ASSIGN LBRACK REG post_op . RBRACK

    RBRACK          shift and go to state 734


state 608

    (42) dspalu -> REG ASSIGN c_align LPAREN REG . COMMA REG RPAREN

    COMMA           shift and go to state 735


state 609

    (208) loadstore -> REG ASSIGN B LBRACK REG . plus_minus expr RBRACK xpmod
    (209) loadstore -> REG ASSIGN B LBRACK REG . post_op RBRACK xpmod
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS
    (332) post_op -> . empty
    (333) post_op -> . _PLUS_PLUS
    (334) post_op -> . _MINUS_MINUS
    (389) empty -> .

    PLUS            shift and go to state 265
    MINUS           shift and go to state 266
    _PLUS_PLUS      shift and go to state 481
    _MINUS_MINUS    shift and go to state 262
    RBRACK          reduce using rule 389 (empty -> .)

    post_op                        shift and go to state 737
    empty                          shift and go to state 267
    plus_minus                     shift and go to state 736

state 610

    (110) dspshift -> REG ASSIGN ASHIFT REG BY . HALF_REG vsmod

    HALF_REG        shift and go to state 738


state 611

    (127) deposit -> REG ASSIGN PACK LPAREN HALF_REG . COMMA HALF_REG RPAREN

    COMMA           shift and go to state 739


state 612

    (149) jump -> IF CCREG REG ASSIGN REG .

    SEMICOLON       reduce using rule 149 (jump -> IF CCREG REG ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 149 (jump -> IF CCREG REG ASSIGN REG .)


state 613

    (153) jump -> IF CCREG JUMP expr LPAREN . BP RPAREN

    BP              shift and go to state 740


state 614

    (150) jump -> IF BANG CCREG JUMP expr .
    (151) jump -> IF BANG CCREG JUMP expr . LPAREN BP RPAREN

    SEMICOLON       reduce using rule 150 (jump -> IF BANG CCREG JUMP expr .)
    DOUBLE_BAR      reduce using rule 150 (jump -> IF BANG CCREG JUMP expr .)
    LPAREN          shift and go to state 741


state 615

    (148) jump -> IF BANG CCREG REG ASSIGN . REG

    REG             shift and go to state 742


state 616

    (195) loadstore -> B LBRACK REG plus_minus expr . RBRACK ASSIGN REG

    RBRACK          shift and go to state 743


state 617

    (194) loadstore -> B LBRACK REG post_op RBRACK . ASSIGN REG

    ASSIGN          shift and go to state 744


state 618

    (220) loophardware -> LSETUP LPAREN expr COMMA expr . RPAREN REG
    (221) loophardware -> LSETUP LPAREN expr COMMA expr . RPAREN REG ASSIGN REG
    (222) loophardware -> LSETUP LPAREN expr COMMA expr . RPAREN REG ASSIGN REG GREATER_GREATER expr

    RPAREN          shift and go to state 745


state 619

    (157) jump -> JUMP LPAREN PC PLUS REG . RPAREN

    RPAREN          shift and go to state 746


state 620

    (143) bitlogic -> BITSET LPAREN REG COMMA expr . RPAREN

    RPAREN          shift and go to state 747


state 621

    (176) alu2 -> DIVS LPAREN REG COMMA REG . RPAREN

    RPAREN          shift and go to state 748


state 622

    (175) alu2 -> DIVQ LPAREN REG COMMA REG . RPAREN

    RPAREN          shift and go to state 749


state 623

    (341) assign_macfunc -> HALF_REG ASSIGN . LPAREN a_macfunc RPAREN
    (342) assign_macfunc -> HALF_REG ASSIGN . REG_A
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    LPAREN          shift and go to state 750
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 234

state 624

    (17) vector_mac -> assign_macfunc opt_mode COMMA assign_macfunc opt_mode .

    SEMICOLON       reduce using rule 17 (vector_mac -> assign_macfunc opt_mode COMMA assign_macfunc opt_mode .)
    DOUBLE_BAR      reduce using rule 17 (vector_mac -> assign_macfunc opt_mode COMMA assign_macfunc opt_mode .)


state 625

    (338) assign_macfunc -> REG ASSIGN . REG_A
    (340) assign_macfunc -> REG ASSIGN . LPAREN a_macfunc RPAREN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    LPAREN          shift and go to state 752
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 751

state 626

    (249) other -> DBGAL LPAREN REG COMMA expr . RPAREN

    RPAREN          shift and go to state 753


state 627

    (213) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON . expr COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    symbol                         shift and go to state 117
    expr                           shift and go to state 754
    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120

state 628

    (140) deposit -> BITMUX LPAREN REG COMMA REG . COMMA REG_A RPAREN asr_asl

    COMMA           shift and go to state 755


state 629

    (248) other -> DBGAH LPAREN REG COMMA expr . RPAREN

    RPAREN          shift and go to state 756


state 630

    (54) dspalu -> a_assign REG_A LPAREN S RPAREN .
    (78) dspalu -> a_assign REG_A LPAREN S RPAREN . COMMA a_assign REG_A LPAREN S RPAREN

    SEMICOLON       reduce using rule 54 (dspalu -> a_assign REG_A LPAREN S RPAREN .)
    DOUBLE_BAR      reduce using rule 54 (dspalu -> a_assign REG_A LPAREN S RPAREN .)
    COMMA           shift and go to state 757


state 631

    (117) deposit -> a_assign LSHIFT REG_A BY HALF_REG .

    SEMICOLON       reduce using rule 117 (deposit -> a_assign LSHIFT REG_A BY HALF_REG .)
    DOUBLE_BAR      reduce using rule 117 (deposit -> a_assign LSHIFT REG_A BY HALF_REG .)


state 632

    (335) a_assign -> REG_A . ASSIGN

    ASSIGN          shift and go to state 128


state 633

    (68) dspalu -> a_assign MINUS REG_A COMMA a_assign . MINUS REG_A

    MINUS           shift and go to state 758


state 634

    (141) deposit -> a_assign BXORSHIFT LPAREN REG_A COMMA . REG_A COMMA CCREG RPAREN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 759

state 635

    (131) deposit -> a_assign ROT REG_A BY HALF_REG .

    SEMICOLON       reduce using rule 131 (deposit -> a_assign ROT REG_A BY HALF_REG .)
    DOUBLE_BAR      reduce using rule 131 (deposit -> a_assign ROT REG_A BY HALF_REG .)


state 636

    (133) deposit -> a_assign ROT REG_A BY expr .

    SEMICOLON       reduce using rule 133 (deposit -> a_assign ROT REG_A BY expr .)
    DOUBLE_BAR      reduce using rule 133 (deposit -> a_assign ROT REG_A BY expr .)


state 637

    (67) dspalu -> a_assign ABS REG_A COMMA a_assign . ABS REG_A

    ABS             shift and go to state 760


state 638

    (105) dspshift -> a_assign ASHIFT REG_A BY HALF_REG .

    DOUBLE_BAR      reduce using rule 105 (dspshift -> a_assign ASHIFT REG_A BY HALF_REG .)
    SEMICOLON       reduce using rule 105 (dspshift -> a_assign ASHIFT REG_A BY HALF_REG .)


state 639

    (353) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs .

    RPAREN          reduce using rule 353 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs .)
    LPAREN          reduce using rule 353 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs .)
    SEMICOLON       reduce using rule 353 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs .)
    DOUBLE_BAR      reduce using rule 353 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs .)


state 640

    (354) multiply_regs -> REG . STAR REG

    STAR            shift and go to state 437


state 641

    (352) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs .

    RPAREN          reduce using rule 352 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs .)
    LPAREN          reduce using rule 352 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs .)
    SEMICOLON       reduce using rule 352 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs .)
    DOUBLE_BAR      reduce using rule 352 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs .)


state 642

    (351) a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs .

    RPAREN          reduce using rule 351 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs .)
    LPAREN          reduce using rule 351 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs .)
    SEMICOLON       reduce using rule 351 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs .)
    DOUBLE_BAR      reduce using rule 351 (a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs .)


state 643

    (30) dspalu -> LPAREN REG COMMA REG RPAREN . ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> LPAREN REG COMMA REG RPAREN . ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> LPAREN REG COMMA REG RPAREN . ASSIGN BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> LPAREN REG COMMA REG RPAREN . ASSIGN SEARCH REG LPAREN searchmod RPAREN

    ASSIGN          shift and go to state 761


state 644

    (344) assign_full_macfunc -> LPAREN REG COLON REG RPAREN . ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> LPAREN REG COLON REG RPAREN . ASSIGN multiply_regs
    (347) assign_full_macfunc -> LPAREN REG COLON REG RPAREN . ASSIGN LPAREN a_full_macfunc RPAREN

    ASSIGN          shift and go to state 762


state 645

    (216) pushpopmultiple -> LPAREN REG COLON expr RPAREN . ASSIGN reg_with_postinc

    ASSIGN          shift and go to state 763


state 646

    (215) pushpopmultiple -> LPAREN REG COLON expr COMMA . REG COLON expr RPAREN ASSIGN reg_with_postinc

    REG             shift and go to state 764


state 647

    (142) bitlogic -> BITCLR LPAREN REG COMMA expr . RPAREN

    RPAREN          shift and go to state 765


state 648

    (156) jump -> CALL LPAREN PC PLUS REG . RPAREN

    RPAREN          shift and go to state 766


state 649

    (144) bitlogic -> BITTGL LPAREN REG COMMA expr RPAREN .

    SEMICOLON       reduce using rule 144 (bitlogic -> BITTGL LPAREN REG COMMA expr RPAREN .)
    DOUBLE_BAR      reduce using rule 144 (bitlogic -> BITTGL LPAREN REG COMMA expr RPAREN .)


state 650

    (247) other -> DBGA LPAREN HALF_REG COMMA expr RPAREN .

    SEMICOLON       reduce using rule 247 (other -> DBGA LPAREN HALF_REG COMMA expr RPAREN .)
    DOUBLE_BAR      reduce using rule 247 (other -> DBGA LPAREN HALF_REG COMMA expr RPAREN .)


state 651

    (204) loadstore -> HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS . REG RBRACK
    (333) post_op -> _PLUS_PLUS .

    REG             shift and go to state 767
    RBRACK          reduce using rule 333 (post_op -> _PLUS_PLUS .)


state 652

    (201) loadstore -> HALF_REG ASSIGN W LBRACK REG post_op . RBRACK

    RBRACK          shift and go to state 768


state 653

    (118) deposit -> HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG .

    SEMICOLON       reduce using rule 118 (deposit -> HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG .)
    DOUBLE_BAR      reduce using rule 118 (deposit -> HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG .)


state 654

    (292) smod -> LPAREN . S RPAREN

    S               shift and go to state 769


state 655

    (109) dspshift -> HALF_REG ASSIGN HALF_REG LESS_LESS expr smod .

    DOUBLE_BAR      reduce using rule 109 (dspshift -> HALF_REG ASSIGN HALF_REG LESS_LESS expr smod .)
    SEMICOLON       reduce using rule 109 (dspshift -> HALF_REG ASSIGN HALF_REG LESS_LESS expr smod .)


state 656

    (291) smod -> empty .

    SEMICOLON       reduce using rule 291 (smod -> empty .)
    DOUBLE_BAR      reduce using rule 291 (smod -> empty .)


state 657

    (52) dspalu -> HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1 .

    SEMICOLON       reduce using rule 52 (dspalu -> HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1 .)
    DOUBLE_BAR      reduce using rule 52 (dspalu -> HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1 .)


state 658

    (270) amod1 -> LPAREN . NS RPAREN
    (271) amod1 -> LPAREN . S RPAREN

    NS              shift and go to state 771
    S               shift and go to state 770


state 659

    (269) amod1 -> empty .

    SEMICOLON       reduce using rule 269 (amod1 -> empty .)
    DOUBLE_BAR      reduce using rule 269 (amod1 -> empty .)


state 660

    (124) deposit -> HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod .

    SEMICOLON       reduce using rule 124 (deposit -> HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod .)
    DOUBLE_BAR      reduce using rule 124 (deposit -> HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod .)


state 661

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN . HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG

    HALF_REG        shift and go to state 772


state 662

    (128) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN . REG_A COMMA REG RPAREN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 773

state 663

    (129) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN . REG_A COMMA REG RPAREN
    (130) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN . REG_A COMMA REG_A COMMA CCREG RPAREN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 774

state 664

    (138) deposit -> HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN . asr_asl
    (259) asr_asl -> . LPAREN ASL RPAREN
    (260) asr_asl -> . LPAREN ASR RPAREN

    LPAREN          shift and go to state 776

    asr_asl                        shift and go to state 775

state 665

    (56) dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN . RND12 RPAREN
    (57) dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN . RND20 RPAREN

    RND12           shift and go to state 777
    RND20           shift and go to state 778


state 666

    (55) dspalu -> HALF_REG ASSIGN REG LPAREN RND RPAREN .

    SEMICOLON       reduce using rule 55 (dspalu -> HALF_REG ASSIGN REG LPAREN RND RPAREN .)
    DOUBLE_BAR      reduce using rule 55 (dspalu -> HALF_REG ASSIGN REG LPAREN RND RPAREN .)


state 667

    (112) expadj -> HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA . HALF_REG RPAREN

    HALF_REG        shift and go to state 779


state 668

    (111) expadj -> HALF_REG ASSIGN EXPADJ LPAREN REG COMMA . HALF_REG RPAREN vmod

    HALF_REG        shift and go to state 780


state 669

    (27) dspalu -> HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN .

    SEMICOLON       reduce using rule 27 (dspalu -> HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN .)
    DOUBLE_BAR      reduce using rule 27 (dspalu -> HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN .)


state 670

    (101) dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG . ASSIGN multiply_halfregs opt_mode

    ASSIGN          shift and go to state 781


state 671

    (106) dspshift -> HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG . smod
    (291) smod -> . empty
    (292) smod -> . LPAREN S RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 654
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    smod                           shift and go to state 782
    empty                          shift and go to state 656

state 672

    (309) iu_or_nothing -> LPAREN . MMOD RPAREN

    MMOD            shift and go to state 783


state 673

    (85) comp -> CCREG ASSIGN REG LESS_THAN REG iu_or_nothing .

    SEMICOLON       reduce using rule 85 (comp -> CCREG ASSIGN REG LESS_THAN REG iu_or_nothing .)
    DOUBLE_BAR      reduce using rule 85 (comp -> CCREG ASSIGN REG LESS_THAN REG iu_or_nothing .)


state 674

    (308) iu_or_nothing -> empty .

    SEMICOLON       reduce using rule 308 (iu_or_nothing -> empty .)
    DOUBLE_BAR      reduce using rule 308 (iu_or_nothing -> empty .)


state 675

    (86) comp -> CCREG ASSIGN REG LESS_THAN expr iu_or_nothing .

    SEMICOLON       reduce using rule 86 (comp -> CCREG ASSIGN REG LESS_THAN expr iu_or_nothing .)
    DOUBLE_BAR      reduce using rule 86 (comp -> CCREG ASSIGN REG LESS_THAN expr iu_or_nothing .)


state 676

    (90) comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing .

    SEMICOLON       reduce using rule 90 (comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing .)
    DOUBLE_BAR      reduce using rule 90 (comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing .)


state 677

    (91) comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing .

    SEMICOLON       reduce using rule 91 (comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing .)
    DOUBLE_BAR      reduce using rule 91 (comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing .)


state 678

    (147) jump -> CCREG ASSIGN BITTST LPAREN REG COMMA . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 784
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 679

    (145) jump -> CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 785
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 680

    (196) loadstore -> W LBRACK REG plus_minus expr RBRACK . ASSIGN REG

    ASSIGN          shift and go to state 786


state 681

    (207) loadstore -> W LBRACK REG _PLUS_PLUS REG RBRACK . ASSIGN HALF_REG

    ASSIGN          shift and go to state 787


state 682

    (197) loadstore -> W LBRACK REG post_op RBRACK ASSIGN . REG
    (198) loadstore -> W LBRACK REG post_op RBRACK ASSIGN . HALF_REG

    REG             shift and go to state 789
    HALF_REG        shift and go to state 788


state 683

    (199) loadstore -> LBRACK REG plus_minus expr RBRACK ASSIGN . REG

    REG             shift and go to state 790


state 684

    (206) loadstore -> LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN . REG

    REG             shift and go to state 791


state 685

    (205) loadstore -> LBRACK REG post_op RBRACK ASSIGN REG .

    SEMICOLON       reduce using rule 205 (loadstore -> LBRACK REG post_op RBRACK ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 205 (loadstore -> LBRACK REG post_op RBRACK ASSIGN REG .)


state 686

    (256) opt_mode -> LPAREN MMOD COMMA M RPAREN .

    COMMA           reduce using rule 256 (opt_mode -> LPAREN MMOD COMMA M RPAREN .)
    SEMICOLON       reduce using rule 256 (opt_mode -> LPAREN MMOD COMMA M RPAREN .)
    DOUBLE_BAR      reduce using rule 256 (opt_mode -> LPAREN MMOD COMMA M RPAREN .)


state 687

    (255) opt_mode -> LPAREN M COMMA MMOD RPAREN .

    COMMA           reduce using rule 255 (opt_mode -> LPAREN M COMMA MMOD RPAREN .)
    SEMICOLON       reduce using rule 255 (opt_mode -> LPAREN M COMMA MMOD RPAREN .)
    DOUBLE_BAR      reduce using rule 255 (opt_mode -> LPAREN M COMMA MMOD RPAREN .)


state 688

    (225) loophardware -> LOOP expr REG ASSIGN REG GREATER_GREATER . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 792
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 689

    (77) dspalu -> SAA LPAREN REG COLON expr COMMA . REG COLON expr RPAREN aligndir

    REG             shift and go to state 793


state 690

    (71) dspalu -> REG _PLUS_ASSIGN REG LPAREN BREV RPAREN .

    SEMICOLON       reduce using rule 71 (dspalu -> REG _PLUS_ASSIGN REG LPAREN BREV RPAREN .)
    DOUBLE_BAR      reduce using rule 71 (dspalu -> REG _PLUS_ASSIGN REG LPAREN BREV RPAREN .)


state 691

    (132) deposit -> REG ASSIGN ROT REG BY HALF_REG .

    SEMICOLON       reduce using rule 132 (deposit -> REG ASSIGN ROT REG BY HALF_REG .)
    DOUBLE_BAR      reduce using rule 132 (deposit -> REG ASSIGN ROT REG BY HALF_REG .)


state 692

    (134) deposit -> REG ASSIGN ROT REG BY expr .

    SEMICOLON       reduce using rule 134 (deposit -> REG ASSIGN ROT REG BY expr .)
    DOUBLE_BAR      reduce using rule 134 (deposit -> REG ASSIGN ROT REG BY expr .)


state 693

    (200) loadstore -> REG ASSIGN W LBRACK REG plus_minus . expr RBRACK xpmod
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr                           shift and go to state 794
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 694

    (203) loadstore -> REG ASSIGN W LBRACK REG _PLUS_PLUS . REG RBRACK xpmod
    (333) post_op -> _PLUS_PLUS .

    REG             shift and go to state 795
    RBRACK          reduce using rule 333 (post_op -> _PLUS_PLUS .)


state 695

    (202) loadstore -> REG ASSIGN W LBRACK REG post_op . RBRACK xpmod

    RBRACK          shift and go to state 796


state 696

    (120) deposit -> REG ASSIGN SHIFT REG BY HALF_REG .

    SEMICOLON       reduce using rule 120 (deposit -> REG ASSIGN SHIFT REG BY HALF_REG .)
    DOUBLE_BAR      reduce using rule 120 (deposit -> REG ASSIGN SHIFT REG BY HALF_REG .)


state 697

    (119) deposit -> REG ASSIGN LSHIFT REG BY HALF_REG . vmod
    (289) vmod -> . empty
    (290) vmod -> . LPAREN V RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 591
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 592
    vmod                           shift and go to state 797

state 698

    (285) vsmod -> LPAREN S . RPAREN
    (288) vsmod -> LPAREN S . COMMA V RPAREN

    RPAREN          shift and go to state 799
    COMMA           shift and go to state 798


state 699

    (286) vsmod -> LPAREN V . RPAREN
    (287) vsmod -> LPAREN V . COMMA S RPAREN

    RPAREN          shift and go to state 801
    COMMA           shift and go to state 800


state 700

    (284) vsmod -> LPAREN NS . RPAREN

    RPAREN          shift and go to state 802


state 701

    (279) xpmod -> LPAREN X RPAREN .

    SEMICOLON       reduce using rule 279 (xpmod -> LPAREN X RPAREN .)
    DOUBLE_BAR      reduce using rule 279 (xpmod -> LPAREN X RPAREN .)


state 702

    (278) xpmod -> LPAREN Z RPAREN .

    SEMICOLON       reduce using rule 278 (xpmod -> LPAREN Z RPAREN .)
    DOUBLE_BAR      reduce using rule 278 (xpmod -> LPAREN Z RPAREN .)


state 703

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON . expr COMMA REG COLON expr RPAREN rnd_op
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 803
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 704

    (34) dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA . REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H

    REG             shift and go to state 804


state 705

    (139) deposit -> REG ASSIGN VIT_MAX LPAREN REG COMMA . REG RPAREN asr_asl

    REG             shift and go to state 805


state 706

    (108) dspshift -> REG ASSIGN REG LESS_LESS expr vsmod .

    DOUBLE_BAR      reduce using rule 108 (dspshift -> REG ASSIGN REG LESS_LESS expr vsmod .)
    SEMICOLON       reduce using rule 108 (dspshift -> REG ASSIGN REG LESS_LESS expr vsmod .)


state 707

    (125) deposit -> REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod .

    SEMICOLON       reduce using rule 125 (deposit -> REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod .)
    DOUBLE_BAR      reduce using rule 125 (deposit -> REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod .)


state 708

    (82) comp -> REG ASSIGN REG PLUS LPAREN REG . LESS_LESS expr RPAREN

    LESS_LESS       shift and go to state 806


state 709

    (268) amod0 -> LPAREN . sco RPAREN
    (261) sco -> . empty
    (262) sco -> . S
    (263) sco -> . CO
    (264) sco -> . SCO
    (389) empty -> .

    S               shift and go to state 810
    CO              shift and go to state 808
    SCO             shift and go to state 809
    RPAREN          reduce using rule 389 (empty -> .)

    sco                            shift and go to state 807
    empty                          shift and go to state 811

state 710

    (65) dspalu -> REG ASSIGN REG op_bar_op REG amod0 .

    SEMICOLON       reduce using rule 65 (dspalu -> REG ASSIGN REG op_bar_op REG amod0 .)
    DOUBLE_BAR      reduce using rule 65 (dspalu -> REG ASSIGN REG op_bar_op REG amod0 .)


state 711

    (37) dspalu -> REG ASSIGN REG op_bar_op REG COMMA . REG ASSIGN REG op_bar_op REG amod2

    REG             shift and go to state 812


state 712

    (267) amod0 -> empty .

    SEMICOLON       reduce using rule 267 (amod0 -> empty .)
    DOUBLE_BAR      reduce using rule 267 (amod0 -> empty .)


state 713

    (36) dspalu -> REG ASSIGN REG plus_minus REG COMMA . REG ASSIGN REG plus_minus REG amod1

    REG             shift and go to state 813


state 714

    (49) dspalu -> REG ASSIGN REG plus_minus REG amod1 .

    SEMICOLON       reduce using rule 49 (dspalu -> REG ASSIGN REG plus_minus REG amod1 .)
    DOUBLE_BAR      reduce using rule 49 (dspalu -> REG ASSIGN REG plus_minus REG amod1 .)


state 715

    (122) deposit -> REG ASSIGN REG GREATER_GREATER expr vmod .

    SEMICOLON       reduce using rule 122 (deposit -> REG ASSIGN REG GREATER_GREATER expr vmod .)
    DOUBLE_BAR      reduce using rule 122 (deposit -> REG ASSIGN REG GREATER_GREATER expr vmod .)


state 716

    (35) dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA . REG ASSIGN REG_A MINUS REG_A amod1

    REG             shift and go to state 814


state 717

    (50) dspalu -> REG ASSIGN min_max LPAREN REG COMMA . REG RPAREN vmod

    REG             shift and go to state 815


state 718

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON . expr COMMA REG COLON expr RPAREN b3_op
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 816
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 719

    (290) vmod -> LPAREN V . RPAREN

    RPAREN          shift and go to state 817


state 720

    (113) deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA . REG RPAREN
    (114) deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA . REG RPAREN LPAREN X RPAREN

    REG             shift and go to state 818


state 721

    (79) dspalu -> REG ASSIGN LPAREN REG PLUS REG . RPAREN LESS_LESS expr

    RPAREN          shift and go to state 819


state 722

    (26) dspalu -> REG ASSIGN LPAREN a_plusassign REG_A RPAREN .

    SEMICOLON       reduce using rule 26 (dspalu -> REG ASSIGN LPAREN a_plusassign REG_A RPAREN .)
    DOUBLE_BAR      reduce using rule 26 (dspalu -> REG ASSIGN LPAREN a_plusassign REG_A RPAREN .)


state 723

    (47) dspalu -> REG ASSIGN BYTEPACK LPAREN REG COMMA . REG RPAREN

    REG             shift and go to state 820


state 724

    (102) dspmult -> REG ASSIGN multiply_halfregs opt_mode COMMA REG . ASSIGN multiply_halfregs opt_mode

    ASSIGN          shift and go to state 821


state 725

    (281) xpmod1 -> LPAREN X RPAREN .

    SEMICOLON       reduce using rule 281 (xpmod1 -> LPAREN X RPAREN .)
    DOUBLE_BAR      reduce using rule 281 (xpmod1 -> LPAREN X RPAREN .)


state 726

    (282) xpmod1 -> LPAREN Z RPAREN .

    SEMICOLON       reduce using rule 282 (xpmod1 -> LPAREN Z RPAREN .)
    DOUBLE_BAR      reduce using rule 282 (xpmod1 -> LPAREN Z RPAREN .)


state 727

    (115) deposit -> REG ASSIGN EXTRACT LPAREN REG COMMA . HALF_REG RPAREN xpmod

    HALF_REG        shift and go to state 822


state 728

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON . expr COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON . expr COMMA REG COLON expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 823
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 729

    (211) loadstore -> REG ASSIGN LBRACK REG plus_minus got_or_expr . RBRACK

    RBRACK          shift and go to state 824


state 730

    (369) got_or_expr -> got .

    RBRACK          reduce using rule 369 (got_or_expr -> got .)


state 731

    (368) got -> symbol . AT any_gotrel
    (373) eterm -> symbol .

    AT              shift and go to state 825
    STAR            reduce using rule 373 (eterm -> symbol .)
    SLASH           reduce using rule 373 (eterm -> symbol .)
    PERCENT         reduce using rule 373 (eterm -> symbol .)
    PLUS            reduce using rule 373 (eterm -> symbol .)
    MINUS           reduce using rule 373 (eterm -> symbol .)
    LESS_LESS       reduce using rule 373 (eterm -> symbol .)
    GREATER_GREATER reduce using rule 373 (eterm -> symbol .)
    AMPERSAND       reduce using rule 373 (eterm -> symbol .)
    CARET           reduce using rule 373 (eterm -> symbol .)
    BAR             reduce using rule 373 (eterm -> symbol .)
    RBRACK          reduce using rule 373 (eterm -> symbol .)


state 732

    (370) got_or_expr -> expr .

    RBRACK          reduce using rule 370 (got_or_expr -> expr .)


state 733

    (210) loadstore -> REG ASSIGN LBRACK REG _PLUS_PLUS REG . RBRACK

    RBRACK          shift and go to state 826


state 734

    (212) loadstore -> REG ASSIGN LBRACK REG post_op RBRACK .

    SEMICOLON       reduce using rule 212 (loadstore -> REG ASSIGN LBRACK REG post_op RBRACK .)
    DOUBLE_BAR      reduce using rule 212 (loadstore -> REG ASSIGN LBRACK REG post_op RBRACK .)


state 735

    (42) dspalu -> REG ASSIGN c_align LPAREN REG COMMA . REG RPAREN

    REG             shift and go to state 827


state 736

    (208) loadstore -> REG ASSIGN B LBRACK REG plus_minus . expr RBRACK xpmod
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    eterm                          shift and go to state 111
    expr                           shift and go to state 828
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 737

    (209) loadstore -> REG ASSIGN B LBRACK REG post_op . RBRACK xpmod

    RBRACK          shift and go to state 829


state 738

    (110) dspshift -> REG ASSIGN ASHIFT REG BY HALF_REG . vsmod
    (283) vsmod -> . empty
    (284) vsmod -> . LPAREN NS RPAREN
    (285) vsmod -> . LPAREN S RPAREN
    (286) vsmod -> . LPAREN V RPAREN
    (287) vsmod -> . LPAREN V COMMA S RPAREN
    (288) vsmod -> . LPAREN S COMMA V RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 570
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 571
    vsmod                          shift and go to state 830

state 739

    (127) deposit -> REG ASSIGN PACK LPAREN HALF_REG COMMA . HALF_REG RPAREN

    HALF_REG        shift and go to state 831


state 740

    (153) jump -> IF CCREG JUMP expr LPAREN BP . RPAREN

    RPAREN          shift and go to state 832


state 741

    (151) jump -> IF BANG CCREG JUMP expr LPAREN . BP RPAREN

    BP              shift and go to state 833


state 742

    (148) jump -> IF BANG CCREG REG ASSIGN REG .

    SEMICOLON       reduce using rule 148 (jump -> IF BANG CCREG REG ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 148 (jump -> IF BANG CCREG REG ASSIGN REG .)


state 743

    (195) loadstore -> B LBRACK REG plus_minus expr RBRACK . ASSIGN REG

    ASSIGN          shift and go to state 834


state 744

    (194) loadstore -> B LBRACK REG post_op RBRACK ASSIGN . REG

    REG             shift and go to state 835


state 745

    (220) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN . REG
    (221) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN . REG ASSIGN REG
    (222) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN . REG ASSIGN REG GREATER_GREATER expr

    REG             shift and go to state 836


state 746

    (157) jump -> JUMP LPAREN PC PLUS REG RPAREN .

    SEMICOLON       reduce using rule 157 (jump -> JUMP LPAREN PC PLUS REG RPAREN .)
    DOUBLE_BAR      reduce using rule 157 (jump -> JUMP LPAREN PC PLUS REG RPAREN .)


state 747

    (143) bitlogic -> BITSET LPAREN REG COMMA expr RPAREN .

    SEMICOLON       reduce using rule 143 (bitlogic -> BITSET LPAREN REG COMMA expr RPAREN .)
    DOUBLE_BAR      reduce using rule 143 (bitlogic -> BITSET LPAREN REG COMMA expr RPAREN .)


state 748

    (176) alu2 -> DIVS LPAREN REG COMMA REG RPAREN .

    SEMICOLON       reduce using rule 176 (alu2 -> DIVS LPAREN REG COMMA REG RPAREN .)
    DOUBLE_BAR      reduce using rule 176 (alu2 -> DIVS LPAREN REG COMMA REG RPAREN .)


state 749

    (175) alu2 -> DIVQ LPAREN REG COMMA REG RPAREN .

    SEMICOLON       reduce using rule 175 (alu2 -> DIVQ LPAREN REG COMMA REG RPAREN .)
    DOUBLE_BAR      reduce using rule 175 (alu2 -> DIVQ LPAREN REG COMMA REG RPAREN .)


state 750

    (341) assign_macfunc -> HALF_REG ASSIGN LPAREN . a_macfunc RPAREN
    (348) a_macfunc -> . a_assign multiply_halfregs
    (349) a_macfunc -> . a_plusassign multiply_halfregs
    (350) a_macfunc -> . a_minusassign multiply_halfregs
    (335) a_assign -> . REG_A ASSIGN
    (337) a_plusassign -> . REG_A _PLUS_ASSIGN
    (336) a_minusassign -> . REG_A _MINUS_ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 493
    a_assign                       shift and go to state 392
    a_minusassign                  shift and go to state 394
    a_plusassign                   shift and go to state 8
    a_macfunc                      shift and go to state 395

state 751

    (338) assign_macfunc -> REG ASSIGN REG_A .

    LPAREN          reduce using rule 338 (assign_macfunc -> REG ASSIGN REG_A .)
    SEMICOLON       reduce using rule 338 (assign_macfunc -> REG ASSIGN REG_A .)
    DOUBLE_BAR      reduce using rule 338 (assign_macfunc -> REG ASSIGN REG_A .)


state 752

    (340) assign_macfunc -> REG ASSIGN LPAREN . a_macfunc RPAREN
    (348) a_macfunc -> . a_assign multiply_halfregs
    (349) a_macfunc -> . a_plusassign multiply_halfregs
    (350) a_macfunc -> . a_minusassign multiply_halfregs
    (335) a_assign -> . REG_A ASSIGN
    (337) a_plusassign -> . REG_A _PLUS_ASSIGN
    (336) a_minusassign -> . REG_A _MINUS_ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 493
    a_assign                       shift and go to state 392
    a_minusassign                  shift and go to state 394
    a_plusassign                   shift and go to state 8
    a_macfunc                      shift and go to state 460

state 753

    (249) other -> DBGAL LPAREN REG COMMA expr RPAREN .

    SEMICOLON       reduce using rule 249 (other -> DBGAL LPAREN REG COMMA expr RPAREN .)
    DOUBLE_BAR      reduce using rule 249 (other -> DBGAL LPAREN REG COMMA expr RPAREN .)


state 754

    (213) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr . COMMA REG COLON expr RPAREN
    (214) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr . RPAREN

    COMMA           shift and go to state 838
    RPAREN          shift and go to state 837


state 755

    (140) deposit -> BITMUX LPAREN REG COMMA REG COMMA . REG_A RPAREN asr_asl
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 839

state 756

    (248) other -> DBGAH LPAREN REG COMMA expr RPAREN .

    SEMICOLON       reduce using rule 248 (other -> DBGAH LPAREN REG COMMA expr RPAREN .)
    DOUBLE_BAR      reduce using rule 248 (other -> DBGAH LPAREN REG COMMA expr RPAREN .)


state 757

    (78) dspalu -> a_assign REG_A LPAREN S RPAREN COMMA . a_assign REG_A LPAREN S RPAREN
    (335) a_assign -> . REG_A ASSIGN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 632
    a_assign                       shift and go to state 840

state 758

    (68) dspalu -> a_assign MINUS REG_A COMMA a_assign MINUS . REG_A
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 841

state 759

    (141) deposit -> a_assign BXORSHIFT LPAREN REG_A COMMA REG_A . COMMA CCREG RPAREN

    COMMA           shift and go to state 842


state 760

    (67) dspalu -> a_assign ABS REG_A COMMA a_assign ABS . REG_A
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 843

state 761

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN . BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN . BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir
    (32) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN . BYTEUNPACK REG COLON expr aligndir
    (33) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN . SEARCH REG LPAREN searchmod RPAREN

    BYTEOP16P       shift and go to state 847
    BYTEOP16M       shift and go to state 844
    BYTEUNPACK      shift and go to state 845
    SEARCH          shift and go to state 846


state 762

    (344) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN . LPAREN A_ONE_COLON_ZERO RPAREN
    (345) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN . multiply_regs
    (347) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN . LPAREN a_full_macfunc RPAREN
    (354) multiply_regs -> . REG STAR REG

    LPAREN          shift and go to state 849
    REG             shift and go to state 640

    multiply_regs                  shift and go to state 848

state 763

    (216) pushpopmultiple -> LPAREN REG COLON expr RPAREN ASSIGN . reg_with_postinc
    (311) reg_with_postinc -> . LBRACK REG _PLUS_PLUS RBRACK

    LBRACK          shift and go to state 850

    reg_with_postinc               shift and go to state 851

state 764

    (215) pushpopmultiple -> LPAREN REG COLON expr COMMA REG . COLON expr RPAREN ASSIGN reg_with_postinc

    COLON           shift and go to state 852


state 765

    (142) bitlogic -> BITCLR LPAREN REG COMMA expr RPAREN .

    SEMICOLON       reduce using rule 142 (bitlogic -> BITCLR LPAREN REG COMMA expr RPAREN .)
    DOUBLE_BAR      reduce using rule 142 (bitlogic -> BITCLR LPAREN REG COMMA expr RPAREN .)


state 766

    (156) jump -> CALL LPAREN PC PLUS REG RPAREN .

    SEMICOLON       reduce using rule 156 (jump -> CALL LPAREN PC PLUS REG RPAREN .)
    DOUBLE_BAR      reduce using rule 156 (jump -> CALL LPAREN PC PLUS REG RPAREN .)


state 767

    (204) loadstore -> HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG . RBRACK

    RBRACK          shift and go to state 853


state 768

    (201) loadstore -> HALF_REG ASSIGN W LBRACK REG post_op RBRACK .

    SEMICOLON       reduce using rule 201 (loadstore -> HALF_REG ASSIGN W LBRACK REG post_op RBRACK .)
    DOUBLE_BAR      reduce using rule 201 (loadstore -> HALF_REG ASSIGN W LBRACK REG post_op RBRACK .)


state 769

    (292) smod -> LPAREN S . RPAREN

    RPAREN          shift and go to state 854


state 770

    (271) amod1 -> LPAREN S . RPAREN

    RPAREN          shift and go to state 855


state 771

    (270) amod1 -> LPAREN NS . RPAREN

    RPAREN          shift and go to state 856


state 772

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG . RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG

    RPAREN          shift and go to state 857


state 773

    (128) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A . COMMA REG RPAREN

    COMMA           shift and go to state 858


state 774

    (129) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A . COMMA REG RPAREN
    (130) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A . COMMA REG_A COMMA CCREG RPAREN

    COMMA           shift and go to state 859


state 775

    (138) deposit -> HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl .

    SEMICOLON       reduce using rule 138 (deposit -> HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl .)
    DOUBLE_BAR      reduce using rule 138 (deposit -> HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl .)


state 776

    (259) asr_asl -> LPAREN . ASL RPAREN
    (260) asr_asl -> LPAREN . ASR RPAREN

    ASL             shift and go to state 861
    ASR             shift and go to state 860


state 777

    (56) dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 . RPAREN

    RPAREN          shift and go to state 862


state 778

    (57) dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 . RPAREN

    RPAREN          shift and go to state 863


state 779

    (112) expadj -> HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG . RPAREN

    RPAREN          shift and go to state 864


state 780

    (111) expadj -> HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG . RPAREN vmod

    RPAREN          shift and go to state 865


state 781

    (101) dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN . multiply_halfregs opt_mode
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG

    HALF_REG        shift and go to state 101

    multiply_halfregs              shift and go to state 866

state 782

    (106) dspshift -> HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod .

    DOUBLE_BAR      reduce using rule 106 (dspshift -> HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod .)
    SEMICOLON       reduce using rule 106 (dspshift -> HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod .)


state 783

    (309) iu_or_nothing -> LPAREN MMOD . RPAREN

    RPAREN          shift and go to state 867


state 784

    (147) jump -> CCREG ASSIGN BITTST LPAREN REG COMMA expr . RPAREN

    RPAREN          shift and go to state 868


state 785

    (145) jump -> CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr . RPAREN

    RPAREN          shift and go to state 869


state 786

    (196) loadstore -> W LBRACK REG plus_minus expr RBRACK ASSIGN . REG

    REG             shift and go to state 870


state 787

    (207) loadstore -> W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN . HALF_REG

    HALF_REG        shift and go to state 871


state 788

    (198) loadstore -> W LBRACK REG post_op RBRACK ASSIGN HALF_REG .

    SEMICOLON       reduce using rule 198 (loadstore -> W LBRACK REG post_op RBRACK ASSIGN HALF_REG .)
    DOUBLE_BAR      reduce using rule 198 (loadstore -> W LBRACK REG post_op RBRACK ASSIGN HALF_REG .)


state 789

    (197) loadstore -> W LBRACK REG post_op RBRACK ASSIGN REG .

    SEMICOLON       reduce using rule 197 (loadstore -> W LBRACK REG post_op RBRACK ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 197 (loadstore -> W LBRACK REG post_op RBRACK ASSIGN REG .)


state 790

    (199) loadstore -> LBRACK REG plus_minus expr RBRACK ASSIGN REG .

    SEMICOLON       reduce using rule 199 (loadstore -> LBRACK REG plus_minus expr RBRACK ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 199 (loadstore -> LBRACK REG plus_minus expr RBRACK ASSIGN REG .)


state 791

    (206) loadstore -> LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG .

    SEMICOLON       reduce using rule 206 (loadstore -> LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 206 (loadstore -> LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG .)


state 792

    (225) loophardware -> LOOP expr REG ASSIGN REG GREATER_GREATER expr .

    SEMICOLON       reduce using rule 225 (loophardware -> LOOP expr REG ASSIGN REG GREATER_GREATER expr .)
    DOUBLE_BAR      reduce using rule 225 (loophardware -> LOOP expr REG ASSIGN REG GREATER_GREATER expr .)


state 793

    (77) dspalu -> SAA LPAREN REG COLON expr COMMA REG . COLON expr RPAREN aligndir

    COLON           shift and go to state 872


state 794

    (200) loadstore -> REG ASSIGN W LBRACK REG plus_minus expr . RBRACK xpmod

    RBRACK          shift and go to state 873


state 795

    (203) loadstore -> REG ASSIGN W LBRACK REG _PLUS_PLUS REG . RBRACK xpmod

    RBRACK          shift and go to state 874


state 796

    (202) loadstore -> REG ASSIGN W LBRACK REG post_op RBRACK . xpmod
    (277) xpmod -> . empty
    (278) xpmod -> . LPAREN Z RPAREN
    (279) xpmod -> . LPAREN X RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 430
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    xpmod                          shift and go to state 875
    empty                          shift and go to state 431

state 797

    (119) deposit -> REG ASSIGN LSHIFT REG BY HALF_REG vmod .

    SEMICOLON       reduce using rule 119 (deposit -> REG ASSIGN LSHIFT REG BY HALF_REG vmod .)
    DOUBLE_BAR      reduce using rule 119 (deposit -> REG ASSIGN LSHIFT REG BY HALF_REG vmod .)


state 798

    (288) vsmod -> LPAREN S COMMA . V RPAREN

    V               shift and go to state 876


state 799

    (285) vsmod -> LPAREN S RPAREN .

    SEMICOLON       reduce using rule 285 (vsmod -> LPAREN S RPAREN .)
    DOUBLE_BAR      reduce using rule 285 (vsmod -> LPAREN S RPAREN .)


state 800

    (287) vsmod -> LPAREN V COMMA . S RPAREN

    S               shift and go to state 877


state 801

    (286) vsmod -> LPAREN V RPAREN .

    SEMICOLON       reduce using rule 286 (vsmod -> LPAREN V RPAREN .)
    DOUBLE_BAR      reduce using rule 286 (vsmod -> LPAREN V RPAREN .)


state 802

    (284) vsmod -> LPAREN NS RPAREN .

    SEMICOLON       reduce using rule 284 (vsmod -> LPAREN NS RPAREN .)
    DOUBLE_BAR      reduce using rule 284 (vsmod -> LPAREN NS RPAREN .)


state 803

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr . COMMA REG COLON expr RPAREN rnd_op

    COMMA           shift and go to state 878


state 804

    (34) dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG . ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H

    ASSIGN          shift and go to state 879


state 805

    (139) deposit -> REG ASSIGN VIT_MAX LPAREN REG COMMA REG . RPAREN asr_asl

    RPAREN          shift and go to state 880


state 806

    (82) comp -> REG ASSIGN REG PLUS LPAREN REG LESS_LESS . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 881
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 807

    (268) amod0 -> LPAREN sco . RPAREN

    RPAREN          shift and go to state 882


state 808

    (263) sco -> CO .

    RPAREN          reduce using rule 263 (sco -> CO .)
    COMMA           reduce using rule 263 (sco -> CO .)


state 809

    (264) sco -> SCO .

    RPAREN          reduce using rule 264 (sco -> SCO .)
    COMMA           reduce using rule 264 (sco -> SCO .)


state 810

    (262) sco -> S .

    RPAREN          reduce using rule 262 (sco -> S .)
    COMMA           reduce using rule 262 (sco -> S .)


state 811

    (261) sco -> empty .

    RPAREN          reduce using rule 261 (sco -> empty .)
    COMMA           reduce using rule 261 (sco -> empty .)


state 812

    (37) dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG . ASSIGN REG op_bar_op REG amod2

    ASSIGN          shift and go to state 883


state 813

    (36) dspalu -> REG ASSIGN REG plus_minus REG COMMA REG . ASSIGN REG plus_minus REG amod1

    ASSIGN          shift and go to state 884


state 814

    (35) dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG . ASSIGN REG_A MINUS REG_A amod1

    ASSIGN          shift and go to state 885


state 815

    (50) dspalu -> REG ASSIGN min_max LPAREN REG COMMA REG . RPAREN vmod

    RPAREN          shift and go to state 886


state 816

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr . COMMA REG COLON expr RPAREN b3_op

    COMMA           shift and go to state 887


state 817

    (290) vmod -> LPAREN V RPAREN .

    SEMICOLON       reduce using rule 290 (vmod -> LPAREN V RPAREN .)
    DOUBLE_BAR      reduce using rule 290 (vmod -> LPAREN V RPAREN .)


state 818

    (113) deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG . RPAREN
    (114) deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG . RPAREN LPAREN X RPAREN

    RPAREN          shift and go to state 888


state 819

    (79) dspalu -> REG ASSIGN LPAREN REG PLUS REG RPAREN . LESS_LESS expr

    LESS_LESS       shift and go to state 889


state 820

    (47) dspalu -> REG ASSIGN BYTEPACK LPAREN REG COMMA REG . RPAREN

    RPAREN          shift and go to state 890


state 821

    (102) dspmult -> REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN . multiply_halfregs opt_mode
    (355) multiply_halfregs -> . HALF_REG STAR HALF_REG

    HALF_REG        shift and go to state 101

    multiply_halfregs              shift and go to state 891

state 822

    (115) deposit -> REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG . RPAREN xpmod

    RPAREN          shift and go to state 892


state 823

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr . COMMA REG COLON expr RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr . COMMA REG COLON expr RPAREN

    COMMA           shift and go to state 893


state 824

    (211) loadstore -> REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK .

    SEMICOLON       reduce using rule 211 (loadstore -> REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK .)
    DOUBLE_BAR      reduce using rule 211 (loadstore -> REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK .)


state 825

    (368) got -> symbol AT . any_gotrel
    (365) any_gotrel -> . GOT
    (366) any_gotrel -> . GOT17M4
    (367) any_gotrel -> . FUNCDESC_GOT17M4

    GOT             shift and go to state 896
    GOT17M4         shift and go to state 894
    FUNCDESC_GOT17M4 shift and go to state 897

    any_gotrel                     shift and go to state 895

state 826

    (210) loadstore -> REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK .

    SEMICOLON       reduce using rule 210 (loadstore -> REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK .)
    DOUBLE_BAR      reduce using rule 210 (loadstore -> REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK .)


state 827

    (42) dspalu -> REG ASSIGN c_align LPAREN REG COMMA REG . RPAREN

    RPAREN          shift and go to state 898


state 828

    (208) loadstore -> REG ASSIGN B LBRACK REG plus_minus expr . RBRACK xpmod

    RBRACK          shift and go to state 899


state 829

    (209) loadstore -> REG ASSIGN B LBRACK REG post_op RBRACK . xpmod
    (277) xpmod -> . empty
    (278) xpmod -> . LPAREN Z RPAREN
    (279) xpmod -> . LPAREN X RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 430
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    xpmod                          shift and go to state 900
    empty                          shift and go to state 431

state 830

    (110) dspshift -> REG ASSIGN ASHIFT REG BY HALF_REG vsmod .

    DOUBLE_BAR      reduce using rule 110 (dspshift -> REG ASSIGN ASHIFT REG BY HALF_REG vsmod .)
    SEMICOLON       reduce using rule 110 (dspshift -> REG ASSIGN ASHIFT REG BY HALF_REG vsmod .)


state 831

    (127) deposit -> REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG . RPAREN

    RPAREN          shift and go to state 901


state 832

    (153) jump -> IF CCREG JUMP expr LPAREN BP RPAREN .

    SEMICOLON       reduce using rule 153 (jump -> IF CCREG JUMP expr LPAREN BP RPAREN .)
    DOUBLE_BAR      reduce using rule 153 (jump -> IF CCREG JUMP expr LPAREN BP RPAREN .)


state 833

    (151) jump -> IF BANG CCREG JUMP expr LPAREN BP . RPAREN

    RPAREN          shift and go to state 902


state 834

    (195) loadstore -> B LBRACK REG plus_minus expr RBRACK ASSIGN . REG

    REG             shift and go to state 903


state 835

    (194) loadstore -> B LBRACK REG post_op RBRACK ASSIGN REG .

    SEMICOLON       reduce using rule 194 (loadstore -> B LBRACK REG post_op RBRACK ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 194 (loadstore -> B LBRACK REG post_op RBRACK ASSIGN REG .)


state 836

    (220) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG .
    (221) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG . ASSIGN REG
    (222) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG . ASSIGN REG GREATER_GREATER expr

    SEMICOLON       reduce using rule 220 (loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG .)
    DOUBLE_BAR      reduce using rule 220 (loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG .)
    ASSIGN          shift and go to state 904


state 837

    (214) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN .

    SEMICOLON       reduce using rule 214 (pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN .)
    DOUBLE_BAR      reduce using rule 214 (pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN .)


state 838

    (213) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr COMMA . REG COLON expr RPAREN

    REG             shift and go to state 905


state 839

    (140) deposit -> BITMUX LPAREN REG COMMA REG COMMA REG_A . RPAREN asr_asl

    RPAREN          shift and go to state 906


state 840

    (78) dspalu -> a_assign REG_A LPAREN S RPAREN COMMA a_assign . REG_A LPAREN S RPAREN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 907

state 841

    (68) dspalu -> a_assign MINUS REG_A COMMA a_assign MINUS REG_A .

    SEMICOLON       reduce using rule 68 (dspalu -> a_assign MINUS REG_A COMMA a_assign MINUS REG_A .)
    DOUBLE_BAR      reduce using rule 68 (dspalu -> a_assign MINUS REG_A COMMA a_assign MINUS REG_A .)


state 842

    (141) deposit -> a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA . CCREG RPAREN

    CCREG           shift and go to state 908


state 843

    (67) dspalu -> a_assign ABS REG_A COMMA a_assign ABS REG_A .

    SEMICOLON       reduce using rule 67 (dspalu -> a_assign ABS REG_A COMMA a_assign ABS REG_A .)
    DOUBLE_BAR      reduce using rule 67 (dspalu -> a_assign ABS REG_A COMMA a_assign ABS REG_A .)


state 844

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M . LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir

    LPAREN          shift and go to state 909


state 845

    (32) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK . REG COLON expr aligndir

    REG             shift and go to state 910


state 846

    (33) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN SEARCH . REG LPAREN searchmod RPAREN

    REG             shift and go to state 911


state 847

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P . LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir

    LPAREN          shift and go to state 912


state 848

    (345) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN multiply_regs .

    LPAREN          reduce using rule 345 (assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN multiply_regs .)
    DOUBLE_BAR      reduce using rule 345 (assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN multiply_regs .)
    SEMICOLON       reduce using rule 345 (assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN multiply_regs .)


state 849

    (344) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN . A_ONE_COLON_ZERO RPAREN
    (347) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN . a_full_macfunc RPAREN
    (351) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> . LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs

    A_ONE_COLON_ZERO shift and go to state 913
    LPAREN          shift and go to state 915

    a_full_macfunc                 shift and go to state 914

state 850

    (311) reg_with_postinc -> LBRACK . REG _PLUS_PLUS RBRACK

    REG             shift and go to state 916


state 851

    (216) pushpopmultiple -> LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc .

    SEMICOLON       reduce using rule 216 (pushpopmultiple -> LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc .)
    DOUBLE_BAR      reduce using rule 216 (pushpopmultiple -> LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc .)


state 852

    (215) pushpopmultiple -> LPAREN REG COLON expr COMMA REG COLON . expr RPAREN ASSIGN reg_with_postinc
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 917
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 853

    (204) loadstore -> HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK .

    SEMICOLON       reduce using rule 204 (loadstore -> HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK .)
    DOUBLE_BAR      reduce using rule 204 (loadstore -> HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK .)


state 854

    (292) smod -> LPAREN S RPAREN .

    SEMICOLON       reduce using rule 292 (smod -> LPAREN S RPAREN .)
    DOUBLE_BAR      reduce using rule 292 (smod -> LPAREN S RPAREN .)


state 855

    (271) amod1 -> LPAREN S RPAREN .

    SEMICOLON       reduce using rule 271 (amod1 -> LPAREN S RPAREN .)
    DOUBLE_BAR      reduce using rule 271 (amod1 -> LPAREN S RPAREN .)


state 856

    (270) amod1 -> LPAREN NS RPAREN .

    SEMICOLON       reduce using rule 270 (amod1 -> LPAREN NS RPAREN .)
    DOUBLE_BAR      reduce using rule 270 (amod1 -> LPAREN NS RPAREN .)


state 857

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN . STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG

    STAR            shift and go to state 918


state 858

    (128) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA . REG RPAREN

    REG             shift and go to state 919


state 859

    (129) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA . REG RPAREN
    (130) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA . REG_A COMMA CCREG RPAREN
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG             shift and go to state 921
    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 920

state 860

    (260) asr_asl -> LPAREN ASR . RPAREN

    RPAREN          shift and go to state 922


state 861

    (259) asr_asl -> LPAREN ASL . RPAREN

    RPAREN          shift and go to state 923


state 862

    (56) dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN .

    SEMICOLON       reduce using rule 56 (dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN .)
    DOUBLE_BAR      reduce using rule 56 (dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN .)


state 863

    (57) dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN .

    SEMICOLON       reduce using rule 57 (dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN .)
    DOUBLE_BAR      reduce using rule 57 (dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN .)


state 864

    (112) expadj -> HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN .

    SEMICOLON       reduce using rule 112 (expadj -> HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN .)
    DOUBLE_BAR      reduce using rule 112 (expadj -> HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN .)


state 865

    (111) expadj -> HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN . vmod
    (289) vmod -> . empty
    (290) vmod -> . LPAREN V RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 591
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 592
    vmod                           shift and go to state 924

state 866

    (101) dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs . opt_mode
    (254) opt_mode -> . empty
    (255) opt_mode -> . LPAREN M COMMA MMOD RPAREN
    (256) opt_mode -> . LPAREN MMOD COMMA M RPAREN
    (257) opt_mode -> . LPAREN MMOD RPAREN
    (258) opt_mode -> . LPAREN M RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 150
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    opt_mode                       shift and go to state 925
    empty                          shift and go to state 151

state 867

    (309) iu_or_nothing -> LPAREN MMOD RPAREN .

    SEMICOLON       reduce using rule 309 (iu_or_nothing -> LPAREN MMOD RPAREN .)
    DOUBLE_BAR      reduce using rule 309 (iu_or_nothing -> LPAREN MMOD RPAREN .)


state 868

    (147) jump -> CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN .

    SEMICOLON       reduce using rule 147 (jump -> CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN .)
    DOUBLE_BAR      reduce using rule 147 (jump -> CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN .)


state 869

    (145) jump -> CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN .

    SEMICOLON       reduce using rule 145 (jump -> CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN .)
    DOUBLE_BAR      reduce using rule 145 (jump -> CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN .)


state 870

    (196) loadstore -> W LBRACK REG plus_minus expr RBRACK ASSIGN REG .

    SEMICOLON       reduce using rule 196 (loadstore -> W LBRACK REG plus_minus expr RBRACK ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 196 (loadstore -> W LBRACK REG plus_minus expr RBRACK ASSIGN REG .)


state 871

    (207) loadstore -> W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG .

    SEMICOLON       reduce using rule 207 (loadstore -> W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG .)
    DOUBLE_BAR      reduce using rule 207 (loadstore -> W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG .)


state 872

    (77) dspalu -> SAA LPAREN REG COLON expr COMMA REG COLON . expr RPAREN aligndir
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 926
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 873

    (200) loadstore -> REG ASSIGN W LBRACK REG plus_minus expr RBRACK . xpmod
    (277) xpmod -> . empty
    (278) xpmod -> . LPAREN Z RPAREN
    (279) xpmod -> . LPAREN X RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 430
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    xpmod                          shift and go to state 927
    empty                          shift and go to state 431

state 874

    (203) loadstore -> REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK . xpmod
    (277) xpmod -> . empty
    (278) xpmod -> . LPAREN Z RPAREN
    (279) xpmod -> . LPAREN X RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 430
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    xpmod                          shift and go to state 928
    empty                          shift and go to state 431

state 875

    (202) loadstore -> REG ASSIGN W LBRACK REG post_op RBRACK xpmod .

    SEMICOLON       reduce using rule 202 (loadstore -> REG ASSIGN W LBRACK REG post_op RBRACK xpmod .)
    DOUBLE_BAR      reduce using rule 202 (loadstore -> REG ASSIGN W LBRACK REG post_op RBRACK xpmod .)


state 876

    (288) vsmod -> LPAREN S COMMA V . RPAREN

    RPAREN          shift and go to state 929


state 877

    (287) vsmod -> LPAREN V COMMA S . RPAREN

    RPAREN          shift and go to state 930


state 878

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA . REG COLON expr RPAREN rnd_op

    REG             shift and go to state 931


state 879

    (34) dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN . A_ZERO_DOT_L PLUS A_ZERO_DOT_H

    A_ZERO_DOT_L    shift and go to state 932


state 880

    (139) deposit -> REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN . asr_asl
    (259) asr_asl -> . LPAREN ASL RPAREN
    (260) asr_asl -> . LPAREN ASR RPAREN

    LPAREN          shift and go to state 776

    asr_asl                        shift and go to state 933

state 881

    (82) comp -> REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr . RPAREN

    RPAREN          shift and go to state 934


state 882

    (268) amod0 -> LPAREN sco RPAREN .

    SEMICOLON       reduce using rule 268 (amod0 -> LPAREN sco RPAREN .)
    DOUBLE_BAR      reduce using rule 268 (amod0 -> LPAREN sco RPAREN .)


state 883

    (37) dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN . REG op_bar_op REG amod2

    REG             shift and go to state 935


state 884

    (36) dspalu -> REG ASSIGN REG plus_minus REG COMMA REG ASSIGN . REG plus_minus REG amod1

    REG             shift and go to state 936


state 885

    (35) dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN . REG_A MINUS REG_A amod1
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 937

state 886

    (50) dspalu -> REG ASSIGN min_max LPAREN REG COMMA REG RPAREN . vmod
    (289) vmod -> . empty
    (290) vmod -> . LPAREN V RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 591
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 592
    vmod                           shift and go to state 938

state 887

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA . REG COLON expr RPAREN b3_op

    REG             shift and go to state 939


state 888

    (113) deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN .
    (114) deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN . LPAREN X RPAREN

    SEMICOLON       reduce using rule 113 (deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN .)
    DOUBLE_BAR      reduce using rule 113 (deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN .)
    LPAREN          shift and go to state 940


state 889

    (79) dspalu -> REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 941
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 890

    (47) dspalu -> REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN .

    SEMICOLON       reduce using rule 47 (dspalu -> REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN .)
    DOUBLE_BAR      reduce using rule 47 (dspalu -> REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN .)


state 891

    (102) dspmult -> REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs . opt_mode
    (254) opt_mode -> . empty
    (255) opt_mode -> . LPAREN M COMMA MMOD RPAREN
    (256) opt_mode -> . LPAREN MMOD COMMA M RPAREN
    (257) opt_mode -> . LPAREN MMOD RPAREN
    (258) opt_mode -> . LPAREN M RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 150
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    opt_mode                       shift and go to state 942
    empty                          shift and go to state 151

state 892

    (115) deposit -> REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN . xpmod
    (277) xpmod -> . empty
    (278) xpmod -> . LPAREN Z RPAREN
    (279) xpmod -> . LPAREN X RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 430
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    xpmod                          shift and go to state 943
    empty                          shift and go to state 431

state 893

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA . REG COLON expr RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA . REG COLON expr RPAREN

    REG             shift and go to state 944


state 894

    (366) any_gotrel -> GOT17M4 .

    RBRACK          reduce using rule 366 (any_gotrel -> GOT17M4 .)


state 895

    (368) got -> symbol AT any_gotrel .

    RBRACK          reduce using rule 368 (got -> symbol AT any_gotrel .)


state 896

    (365) any_gotrel -> GOT .

    RBRACK          reduce using rule 365 (any_gotrel -> GOT .)


state 897

    (367) any_gotrel -> FUNCDESC_GOT17M4 .

    RBRACK          reduce using rule 367 (any_gotrel -> FUNCDESC_GOT17M4 .)


state 898

    (42) dspalu -> REG ASSIGN c_align LPAREN REG COMMA REG RPAREN .

    SEMICOLON       reduce using rule 42 (dspalu -> REG ASSIGN c_align LPAREN REG COMMA REG RPAREN .)
    DOUBLE_BAR      reduce using rule 42 (dspalu -> REG ASSIGN c_align LPAREN REG COMMA REG RPAREN .)


state 899

    (208) loadstore -> REG ASSIGN B LBRACK REG plus_minus expr RBRACK . xpmod
    (277) xpmod -> . empty
    (278) xpmod -> . LPAREN Z RPAREN
    (279) xpmod -> . LPAREN X RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 430
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    xpmod                          shift and go to state 945
    empty                          shift and go to state 431

state 900

    (209) loadstore -> REG ASSIGN B LBRACK REG post_op RBRACK xpmod .

    SEMICOLON       reduce using rule 209 (loadstore -> REG ASSIGN B LBRACK REG post_op RBRACK xpmod .)
    DOUBLE_BAR      reduce using rule 209 (loadstore -> REG ASSIGN B LBRACK REG post_op RBRACK xpmod .)


state 901

    (127) deposit -> REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN .

    SEMICOLON       reduce using rule 127 (deposit -> REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN .)
    DOUBLE_BAR      reduce using rule 127 (deposit -> REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN .)


state 902

    (151) jump -> IF BANG CCREG JUMP expr LPAREN BP RPAREN .

    SEMICOLON       reduce using rule 151 (jump -> IF BANG CCREG JUMP expr LPAREN BP RPAREN .)
    DOUBLE_BAR      reduce using rule 151 (jump -> IF BANG CCREG JUMP expr LPAREN BP RPAREN .)


state 903

    (195) loadstore -> B LBRACK REG plus_minus expr RBRACK ASSIGN REG .

    SEMICOLON       reduce using rule 195 (loadstore -> B LBRACK REG plus_minus expr RBRACK ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 195 (loadstore -> B LBRACK REG plus_minus expr RBRACK ASSIGN REG .)


state 904

    (221) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN . REG
    (222) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN . REG GREATER_GREATER expr

    REG             shift and go to state 946


state 905

    (213) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG . COLON expr RPAREN

    COLON           shift and go to state 947


state 906

    (140) deposit -> BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN . asr_asl
    (259) asr_asl -> . LPAREN ASL RPAREN
    (260) asr_asl -> . LPAREN ASR RPAREN

    LPAREN          shift and go to state 776

    asr_asl                        shift and go to state 948

state 907

    (78) dspalu -> a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A . LPAREN S RPAREN

    LPAREN          shift and go to state 949


state 908

    (141) deposit -> a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG . RPAREN

    RPAREN          shift and go to state 950


state 909

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN . REG COLON expr COMMA REG COLON expr RPAREN aligndir

    REG             shift and go to state 951


state 910

    (32) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG . COLON expr aligndir

    COLON           shift and go to state 952


state 911

    (33) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG . LPAREN searchmod RPAREN

    LPAREN          shift and go to state 953


state 912

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN . REG COLON expr COMMA REG COLON expr RPAREN aligndir

    REG             shift and go to state 954


state 913

    (344) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO . RPAREN

    RPAREN          shift and go to state 955


state 914

    (347) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc . RPAREN

    RPAREN          shift and go to state 956


state 915

    (351) a_full_macfunc -> LPAREN . A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs
    (352) a_full_macfunc -> LPAREN . A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs
    (353) a_full_macfunc -> LPAREN . A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs

    A_ONE_COLON_ZERO shift and go to state 198


state 916

    (311) reg_with_postinc -> LBRACK REG . _PLUS_PLUS RBRACK

    _PLUS_PLUS      shift and go to state 371


state 917

    (215) pushpopmultiple -> LPAREN REG COLON expr COMMA REG COLON expr . RPAREN ASSIGN reg_with_postinc

    RPAREN          shift and go to state 957


state 918

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR . HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG

    HALF_REG        shift and go to state 958


state 919

    (128) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG . RPAREN

    RPAREN          shift and go to state 959


state 920

    (130) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A . COMMA CCREG RPAREN

    COMMA           shift and go to state 960


state 921

    (129) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG . RPAREN

    RPAREN          shift and go to state 961


state 922

    (260) asr_asl -> LPAREN ASR RPAREN .

    SEMICOLON       reduce using rule 260 (asr_asl -> LPAREN ASR RPAREN .)
    DOUBLE_BAR      reduce using rule 260 (asr_asl -> LPAREN ASR RPAREN .)


state 923

    (259) asr_asl -> LPAREN ASL RPAREN .

    SEMICOLON       reduce using rule 259 (asr_asl -> LPAREN ASL RPAREN .)
    DOUBLE_BAR      reduce using rule 259 (asr_asl -> LPAREN ASL RPAREN .)


state 924

    (111) expadj -> HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod .

    SEMICOLON       reduce using rule 111 (expadj -> HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod .)
    DOUBLE_BAR      reduce using rule 111 (expadj -> HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod .)


state 925

    (101) dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode .

    DOUBLE_BAR      reduce using rule 101 (dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode .)
    SEMICOLON       reduce using rule 101 (dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode .)


state 926

    (77) dspalu -> SAA LPAREN REG COLON expr COMMA REG COLON expr . RPAREN aligndir

    RPAREN          shift and go to state 962


state 927

    (200) loadstore -> REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod .

    SEMICOLON       reduce using rule 200 (loadstore -> REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod .)
    DOUBLE_BAR      reduce using rule 200 (loadstore -> REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod .)


state 928

    (203) loadstore -> REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod .

    SEMICOLON       reduce using rule 203 (loadstore -> REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod .)
    DOUBLE_BAR      reduce using rule 203 (loadstore -> REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod .)


state 929

    (288) vsmod -> LPAREN S COMMA V RPAREN .

    SEMICOLON       reduce using rule 288 (vsmod -> LPAREN S COMMA V RPAREN .)
    DOUBLE_BAR      reduce using rule 288 (vsmod -> LPAREN S COMMA V RPAREN .)


state 930

    (287) vsmod -> LPAREN V COMMA S RPAREN .

    SEMICOLON       reduce using rule 287 (vsmod -> LPAREN V COMMA S RPAREN .)
    DOUBLE_BAR      reduce using rule 287 (vsmod -> LPAREN V COMMA S RPAREN .)


state 931

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG . COLON expr RPAREN rnd_op

    COLON           shift and go to state 963


state 932

    (34) dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L . PLUS A_ZERO_DOT_H

    PLUS            shift and go to state 964


state 933

    (139) deposit -> REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl .

    SEMICOLON       reduce using rule 139 (deposit -> REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl .)
    DOUBLE_BAR      reduce using rule 139 (deposit -> REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl .)


state 934

    (82) comp -> REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN .

    SEMICOLON       reduce using rule 82 (comp -> REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN .)
    DOUBLE_BAR      reduce using rule 82 (comp -> REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN .)


state 935

    (37) dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG . op_bar_op REG amod2
    (314) op_bar_op -> . _PLUS_BAR_PLUS
    (315) op_bar_op -> . _PLUS_BAR_MINUS
    (316) op_bar_op -> . _MINUS_BAR_PLUS
    (317) op_bar_op -> . _MINUS_BAR_MINUS

    _PLUS_BAR_PLUS  shift and go to state 438
    _PLUS_BAR_MINUS shift and go to state 440
    _MINUS_BAR_PLUS shift and go to state 444
    _MINUS_BAR_MINUS shift and go to state 446

    op_bar_op                      shift and go to state 965

state 936

    (36) dspalu -> REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG . plus_minus REG amod1
    (318) plus_minus -> . PLUS
    (319) plus_minus -> . MINUS

    PLUS            shift and go to state 265
    MINUS           shift and go to state 266

    plus_minus                     shift and go to state 966

state 937

    (35) dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A . MINUS REG_A amod1

    MINUS           shift and go to state 967


state 938

    (50) dspalu -> REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod .

    SEMICOLON       reduce using rule 50 (dspalu -> REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod .)
    DOUBLE_BAR      reduce using rule 50 (dspalu -> REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod .)


state 939

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG . COLON expr RPAREN b3_op

    COLON           shift and go to state 968


state 940

    (114) deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN . X RPAREN

    X               shift and go to state 969


state 941

    (79) dspalu -> REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr .

    SEMICOLON       reduce using rule 79 (dspalu -> REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr .)
    DOUBLE_BAR      reduce using rule 79 (dspalu -> REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr .)


state 942

    (102) dspmult -> REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode .

    DOUBLE_BAR      reduce using rule 102 (dspmult -> REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode .)
    SEMICOLON       reduce using rule 102 (dspmult -> REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode .)


state 943

    (115) deposit -> REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod .

    SEMICOLON       reduce using rule 115 (deposit -> REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod .)
    DOUBLE_BAR      reduce using rule 115 (deposit -> REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod .)


state 944

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG . COLON expr RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG . COLON expr RPAREN

    COLON           shift and go to state 970


state 945

    (208) loadstore -> REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod .

    SEMICOLON       reduce using rule 208 (loadstore -> REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod .)
    DOUBLE_BAR      reduce using rule 208 (loadstore -> REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod .)


state 946

    (221) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG .
    (222) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG . GREATER_GREATER expr

    SEMICOLON       reduce using rule 221 (loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG .)
    DOUBLE_BAR      reduce using rule 221 (loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG .)
    GREATER_GREATER shift and go to state 971


state 947

    (213) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    symbol                         shift and go to state 117
    expr                           shift and go to state 972
    eterm                          shift and go to state 111
    expr_1                         shift and go to state 120

state 948

    (140) deposit -> BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl .

    SEMICOLON       reduce using rule 140 (deposit -> BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl .)
    DOUBLE_BAR      reduce using rule 140 (deposit -> BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl .)


state 949

    (78) dspalu -> a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN . S RPAREN

    S               shift and go to state 973


state 950

    (141) deposit -> a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN .

    SEMICOLON       reduce using rule 141 (deposit -> a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN .)
    DOUBLE_BAR      reduce using rule 141 (deposit -> a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN .)


state 951

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG . COLON expr COMMA REG COLON expr RPAREN aligndir

    COLON           shift and go to state 974


state 952

    (32) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON . expr aligndir
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 975
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 953

    (33) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN . searchmod RPAREN
    (293) searchmod -> . GE
    (294) searchmod -> . GT
    (295) searchmod -> . LE
    (296) searchmod -> . LT

    GE              shift and go to state 979
    GT              shift and go to state 976
    LE              shift and go to state 980
    LT              shift and go to state 978

    searchmod                      shift and go to state 977

state 954

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG . COLON expr COMMA REG COLON expr RPAREN aligndir

    COLON           shift and go to state 981


state 955

    (344) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN .

    LPAREN          reduce using rule 344 (assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN .)
    DOUBLE_BAR      reduce using rule 344 (assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN .)
    SEMICOLON       reduce using rule 344 (assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN .)


state 956

    (347) assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN .

    LPAREN          reduce using rule 347 (assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN .)
    DOUBLE_BAR      reduce using rule 347 (assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN .)
    SEMICOLON       reduce using rule 347 (assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN .)


state 957

    (215) pushpopmultiple -> LPAREN REG COLON expr COMMA REG COLON expr RPAREN . ASSIGN reg_with_postinc

    ASSIGN          shift and go to state 982


state 958

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG . PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG

    PLUS            shift and go to state 983


state 959

    (128) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN .

    SEMICOLON       reduce using rule 128 (deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN .)
    DOUBLE_BAR      reduce using rule 128 (deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN .)


state 960

    (130) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA . CCREG RPAREN

    CCREG           shift and go to state 984


state 961

    (129) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN .

    SEMICOLON       reduce using rule 129 (deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN .)
    DOUBLE_BAR      reduce using rule 129 (deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN .)


state 962

    (77) dspalu -> SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN . aligndir
    (297) aligndir -> . empty
    (298) aligndir -> . LPAREN R RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 986
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    aligndir                       shift and go to state 985
    empty                          shift and go to state 987

state 963

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON . expr RPAREN rnd_op
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 988
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 964

    (34) dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS . A_ZERO_DOT_H

    A_ZERO_DOT_H    shift and go to state 989


state 965

    (37) dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op . REG amod2

    REG             shift and go to state 990


state 966

    (36) dspalu -> REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus . REG amod1

    REG             shift and go to state 991


state 967

    (35) dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS . REG_A amod1
    (252) REG_A -> . REG_A_DOUBLE_ZERO
    (253) REG_A -> . REG_A_DOUBLE_ONE

    REG_A_DOUBLE_ZERO shift and go to state 90
    REG_A_DOUBLE_ONE shift and go to state 13

    REG_A                          shift and go to state 992

state 968

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON . expr RPAREN b3_op
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 993
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 969

    (114) deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X . RPAREN

    RPAREN          shift and go to state 994


state 970

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON . expr RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON . expr RPAREN
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 995
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 971

    (222) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER . expr
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 996
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 972

    (213) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr . RPAREN

    RPAREN          shift and go to state 997


state 973

    (78) dspalu -> a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S . RPAREN

    RPAREN          shift and go to state 998


state 974

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON . expr COMMA REG COLON expr RPAREN aligndir
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 999
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 975

    (32) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr . aligndir
    (297) aligndir -> . empty
    (298) aligndir -> . LPAREN R RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 986
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    aligndir                       shift and go to state 1000
    empty                          shift and go to state 987

state 976

    (294) searchmod -> GT .

    RPAREN          reduce using rule 294 (searchmod -> GT .)


state 977

    (33) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod . RPAREN

    RPAREN          shift and go to state 1001


state 978

    (296) searchmod -> LT .

    RPAREN          reduce using rule 296 (searchmod -> LT .)


state 979

    (293) searchmod -> GE .

    RPAREN          reduce using rule 293 (searchmod -> GE .)


state 980

    (295) searchmod -> LE .

    RPAREN          reduce using rule 295 (searchmod -> LE .)


state 981

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON . expr COMMA REG COLON expr RPAREN aligndir
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 1002
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 982

    (215) pushpopmultiple -> LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN . reg_with_postinc
    (311) reg_with_postinc -> . LBRACK REG _PLUS_PLUS RBRACK

    LBRACK          shift and go to state 850

    reg_with_postinc               shift and go to state 1003

state 983

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS . SIGN LPAREN HALF_REG RPAREN STAR HALF_REG

    SIGN            shift and go to state 1004


state 984

    (130) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG . RPAREN

    RPAREN          shift and go to state 1005


state 985

    (77) dspalu -> SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir .

    SEMICOLON       reduce using rule 77 (dspalu -> SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir .)
    DOUBLE_BAR      reduce using rule 77 (dspalu -> SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir .)


state 986

    (298) aligndir -> LPAREN . R RPAREN

    R               shift and go to state 1006


state 987

    (297) aligndir -> empty .

    SEMICOLON       reduce using rule 297 (aligndir -> empty .)
    DOUBLE_BAR      reduce using rule 297 (aligndir -> empty .)


state 988

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr . RPAREN rnd_op

    RPAREN          shift and go to state 1007


state 989

    (34) dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H .

    SEMICOLON       reduce using rule 34 (dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H .)
    DOUBLE_BAR      reduce using rule 34 (dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H .)


state 990

    (37) dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG . amod2
    (272) amod2 -> . empty
    (273) amod2 -> . LPAREN asr_asl_0 RPAREN
    (274) amod2 -> . LPAREN sco RPAREN
    (275) amod2 -> . LPAREN asr_asl_0 COMMA sco RPAREN
    (276) amod2 -> . LPAREN sco COMMA asr_asl_0 RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 1008
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    empty                          shift and go to state 1010
    amod2                          shift and go to state 1009

state 991

    (36) dspalu -> REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG . amod1
    (269) amod1 -> . empty
    (270) amod1 -> . LPAREN NS RPAREN
    (271) amod1 -> . LPAREN S RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 658
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    amod1                          shift and go to state 1011
    empty                          shift and go to state 659

state 992

    (35) dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A . amod1
    (269) amod1 -> . empty
    (270) amod1 -> . LPAREN NS RPAREN
    (271) amod1 -> . LPAREN S RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 658
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    amod1                          shift and go to state 1012
    empty                          shift and go to state 659

state 993

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr . RPAREN b3_op

    RPAREN          shift and go to state 1013


state 994

    (114) deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN .

    SEMICOLON       reduce using rule 114 (deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN .)
    DOUBLE_BAR      reduce using rule 114 (deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN .)


state 995

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr . RPAREN byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr . RPAREN

    RPAREN          shift and go to state 1014


state 996

    (222) loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr .

    SEMICOLON       reduce using rule 222 (loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr .)
    DOUBLE_BAR      reduce using rule 222 (loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr .)


state 997

    (213) pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN .

    SEMICOLON       reduce using rule 213 (pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN .)
    DOUBLE_BAR      reduce using rule 213 (pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN .)


state 998

    (78) dspalu -> a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN .

    SEMICOLON       reduce using rule 78 (dspalu -> a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN .)
    DOUBLE_BAR      reduce using rule 78 (dspalu -> a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN .)


state 999

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr . COMMA REG COLON expr RPAREN aligndir

    COMMA           shift and go to state 1015


state 1000

    (32) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir .

    SEMICOLON       reduce using rule 32 (dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir .)
    DOUBLE_BAR      reduce using rule 32 (dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir .)


state 1001

    (33) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN .

    SEMICOLON       reduce using rule 33 (dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN .)
    DOUBLE_BAR      reduce using rule 33 (dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN .)


state 1002

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr . COMMA REG COLON expr RPAREN aligndir

    COMMA           shift and go to state 1016


state 1003

    (215) pushpopmultiple -> LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc .

    SEMICOLON       reduce using rule 215 (pushpopmultiple -> LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc .)
    DOUBLE_BAR      reduce using rule 215 (pushpopmultiple -> LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc .)


state 1004

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN . LPAREN HALF_REG RPAREN STAR HALF_REG

    LPAREN          shift and go to state 1017


state 1005

    (130) deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN .

    SEMICOLON       reduce using rule 130 (deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN .)
    DOUBLE_BAR      reduce using rule 130 (deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN .)


state 1006

    (298) aligndir -> LPAREN R . RPAREN

    RPAREN          shift and go to state 1018


state 1007

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN . rnd_op
    (320) rnd_op -> . LPAREN RNDH RPAREN
    (321) rnd_op -> . LPAREN TH RPAREN
    (322) rnd_op -> . LPAREN RNDL RPAREN
    (323) rnd_op -> . LPAREN TL RPAREN
    (324) rnd_op -> . LPAREN RNDH COMMA R RPAREN
    (325) rnd_op -> . LPAREN TH COMMA R RPAREN
    (326) rnd_op -> . LPAREN RNDL COMMA R RPAREN
    (327) rnd_op -> . LPAREN TL COMMA R RPAREN

    LPAREN          shift and go to state 1020

    rnd_op                         shift and go to state 1019

state 1008

    (273) amod2 -> LPAREN . asr_asl_0 RPAREN
    (274) amod2 -> LPAREN . sco RPAREN
    (275) amod2 -> LPAREN . asr_asl_0 COMMA sco RPAREN
    (276) amod2 -> LPAREN . sco COMMA asr_asl_0 RPAREN
    (265) asr_asl_0 -> . ASL
    (266) asr_asl_0 -> . ASR
    (261) sco -> . empty
    (262) sco -> . S
    (263) sco -> . CO
    (264) sco -> . SCO
    (389) empty -> .

    ASL             shift and go to state 1024
    ASR             shift and go to state 1021
    S               shift and go to state 810
    CO              shift and go to state 808
    SCO             shift and go to state 809
    RPAREN          reduce using rule 389 (empty -> .)
    COMMA           reduce using rule 389 (empty -> .)

    sco                            shift and go to state 1022
    asr_asl_0                      shift and go to state 1023
    empty                          shift and go to state 811

state 1009

    (37) dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2 .

    SEMICOLON       reduce using rule 37 (dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2 .)
    DOUBLE_BAR      reduce using rule 37 (dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2 .)


state 1010

    (272) amod2 -> empty .

    SEMICOLON       reduce using rule 272 (amod2 -> empty .)
    DOUBLE_BAR      reduce using rule 272 (amod2 -> empty .)


state 1011

    (36) dspalu -> REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1 .

    SEMICOLON       reduce using rule 36 (dspalu -> REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1 .)
    DOUBLE_BAR      reduce using rule 36 (dspalu -> REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1 .)


state 1012

    (35) dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1 .

    SEMICOLON       reduce using rule 35 (dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1 .)
    DOUBLE_BAR      reduce using rule 35 (dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1 .)


state 1013

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN . b3_op
    (328) b3_op -> . LPAREN LO RPAREN
    (329) b3_op -> . LPAREN HI RPAREN
    (330) b3_op -> . LPAREN LO COMMA R RPAREN
    (331) b3_op -> . LPAREN HI COMMA R RPAREN

    LPAREN          shift and go to state 1025

    b3_op                          shift and go to state 1026

state 1014

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN . byteop_mod
    (44) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN .
    (299) byteop_mod -> . LPAREN R RPAREN
    (300) byteop_mod -> . LPAREN MMOD RPAREN
    (301) byteop_mod -> . LPAREN MMOD COMMA R RPAREN
    (302) byteop_mod -> . LPAREN R COMMA MMOD RPAREN

    SEMICOLON       reduce using rule 44 (dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN .)
    DOUBLE_BAR      reduce using rule 44 (dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN .)
    LPAREN          shift and go to state 1028

    byteop_mod                     shift and go to state 1027

state 1015

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA . REG COLON expr RPAREN aligndir

    REG             shift and go to state 1029


state 1016

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA . REG COLON expr RPAREN aligndir

    REG             shift and go to state 1030


state 1017

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN . HALF_REG RPAREN STAR HALF_REG

    HALF_REG        shift and go to state 1031


state 1018

    (298) aligndir -> LPAREN R RPAREN .

    SEMICOLON       reduce using rule 298 (aligndir -> LPAREN R RPAREN .)
    DOUBLE_BAR      reduce using rule 298 (aligndir -> LPAREN R RPAREN .)


state 1019

    (45) dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op .

    SEMICOLON       reduce using rule 45 (dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op .)
    DOUBLE_BAR      reduce using rule 45 (dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op .)


state 1020

    (320) rnd_op -> LPAREN . RNDH RPAREN
    (321) rnd_op -> LPAREN . TH RPAREN
    (322) rnd_op -> LPAREN . RNDL RPAREN
    (323) rnd_op -> LPAREN . TL RPAREN
    (324) rnd_op -> LPAREN . RNDH COMMA R RPAREN
    (325) rnd_op -> LPAREN . TH COMMA R RPAREN
    (326) rnd_op -> LPAREN . RNDL COMMA R RPAREN
    (327) rnd_op -> LPAREN . TL COMMA R RPAREN

    RNDH            shift and go to state 1032
    TH              shift and go to state 1035
    RNDL            shift and go to state 1033
    TL              shift and go to state 1034


state 1021

    (266) asr_asl_0 -> ASR .

    RPAREN          reduce using rule 266 (asr_asl_0 -> ASR .)
    COMMA           reduce using rule 266 (asr_asl_0 -> ASR .)


state 1022

    (274) amod2 -> LPAREN sco . RPAREN
    (276) amod2 -> LPAREN sco . COMMA asr_asl_0 RPAREN

    RPAREN          shift and go to state 1037
    COMMA           shift and go to state 1036


state 1023

    (273) amod2 -> LPAREN asr_asl_0 . RPAREN
    (275) amod2 -> LPAREN asr_asl_0 . COMMA sco RPAREN

    RPAREN          shift and go to state 1039
    COMMA           shift and go to state 1038


state 1024

    (265) asr_asl_0 -> ASL .

    RPAREN          reduce using rule 265 (asr_asl_0 -> ASL .)
    COMMA           reduce using rule 265 (asr_asl_0 -> ASL .)


state 1025

    (328) b3_op -> LPAREN . LO RPAREN
    (329) b3_op -> LPAREN . HI RPAREN
    (330) b3_op -> LPAREN . LO COMMA R RPAREN
    (331) b3_op -> LPAREN . HI COMMA R RPAREN

    LO              shift and go to state 1040
    HI              shift and go to state 1041


state 1026

    (46) dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op .

    SEMICOLON       reduce using rule 46 (dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op .)
    DOUBLE_BAR      reduce using rule 46 (dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op .)


state 1027

    (43) dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod .

    SEMICOLON       reduce using rule 43 (dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod .)
    DOUBLE_BAR      reduce using rule 43 (dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod .)


state 1028

    (299) byteop_mod -> LPAREN . R RPAREN
    (300) byteop_mod -> LPAREN . MMOD RPAREN
    (301) byteop_mod -> LPAREN . MMOD COMMA R RPAREN
    (302) byteop_mod -> LPAREN . R COMMA MMOD RPAREN

    R               shift and go to state 1042
    MMOD            shift and go to state 1043


state 1029

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG . COLON expr RPAREN aligndir

    COLON           shift and go to state 1044


state 1030

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG . COLON expr RPAREN aligndir

    COLON           shift and go to state 1045


state 1031

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG . RPAREN STAR HALF_REG

    RPAREN          shift and go to state 1046


state 1032

    (320) rnd_op -> LPAREN RNDH . RPAREN
    (324) rnd_op -> LPAREN RNDH . COMMA R RPAREN

    RPAREN          shift and go to state 1048
    COMMA           shift and go to state 1047


state 1033

    (322) rnd_op -> LPAREN RNDL . RPAREN
    (326) rnd_op -> LPAREN RNDL . COMMA R RPAREN

    RPAREN          shift and go to state 1049
    COMMA           shift and go to state 1050


state 1034

    (323) rnd_op -> LPAREN TL . RPAREN
    (327) rnd_op -> LPAREN TL . COMMA R RPAREN

    RPAREN          shift and go to state 1052
    COMMA           shift and go to state 1051


state 1035

    (321) rnd_op -> LPAREN TH . RPAREN
    (325) rnd_op -> LPAREN TH . COMMA R RPAREN

    RPAREN          shift and go to state 1054
    COMMA           shift and go to state 1053


state 1036

    (276) amod2 -> LPAREN sco COMMA . asr_asl_0 RPAREN
    (265) asr_asl_0 -> . ASL
    (266) asr_asl_0 -> . ASR

    ASL             shift and go to state 1024
    ASR             shift and go to state 1021

    asr_asl_0                      shift and go to state 1055

state 1037

    (274) amod2 -> LPAREN sco RPAREN .

    SEMICOLON       reduce using rule 274 (amod2 -> LPAREN sco RPAREN .)
    DOUBLE_BAR      reduce using rule 274 (amod2 -> LPAREN sco RPAREN .)


state 1038

    (275) amod2 -> LPAREN asr_asl_0 COMMA . sco RPAREN
    (261) sco -> . empty
    (262) sco -> . S
    (263) sco -> . CO
    (264) sco -> . SCO
    (389) empty -> .

    S               shift and go to state 810
    CO              shift and go to state 808
    SCO             shift and go to state 809
    RPAREN          reduce using rule 389 (empty -> .)

    sco                            shift and go to state 1056
    empty                          shift and go to state 811

state 1039

    (273) amod2 -> LPAREN asr_asl_0 RPAREN .

    SEMICOLON       reduce using rule 273 (amod2 -> LPAREN asr_asl_0 RPAREN .)
    DOUBLE_BAR      reduce using rule 273 (amod2 -> LPAREN asr_asl_0 RPAREN .)


state 1040

    (328) b3_op -> LPAREN LO . RPAREN
    (330) b3_op -> LPAREN LO . COMMA R RPAREN

    RPAREN          shift and go to state 1058
    COMMA           shift and go to state 1057


state 1041

    (329) b3_op -> LPAREN HI . RPAREN
    (331) b3_op -> LPAREN HI . COMMA R RPAREN

    RPAREN          shift and go to state 1060
    COMMA           shift and go to state 1059


state 1042

    (299) byteop_mod -> LPAREN R . RPAREN
    (302) byteop_mod -> LPAREN R . COMMA MMOD RPAREN

    RPAREN          shift and go to state 1062
    COMMA           shift and go to state 1061


state 1043

    (300) byteop_mod -> LPAREN MMOD . RPAREN
    (301) byteop_mod -> LPAREN MMOD . COMMA R RPAREN

    RPAREN          shift and go to state 1064
    COMMA           shift and go to state 1063


state 1044

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON . expr RPAREN aligndir
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 1065
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 1045

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON . expr RPAREN aligndir
    (377) expr -> . expr_1
    (378) expr_1 -> . expr_1 STAR expr_1
    (379) expr_1 -> . expr_1 SLASH expr_1
    (380) expr_1 -> . expr_1 PERCENT expr_1
    (381) expr_1 -> . expr_1 PLUS expr_1
    (382) expr_1 -> . expr_1 MINUS expr_1
    (383) expr_1 -> . expr_1 LESS_LESS expr_1
    (384) expr_1 -> . expr_1 GREATER_GREATER expr_1
    (385) expr_1 -> . expr_1 AMPERSAND expr_1
    (386) expr_1 -> . expr_1 CARET expr_1
    (387) expr_1 -> . expr_1 BAR expr_1
    (388) expr_1 -> . eterm
    (372) eterm -> . NUMBER
    (373) eterm -> . symbol
    (374) eterm -> . LPAREN expr_1 RPAREN
    (375) eterm -> . TILDA expr_1
    (376) eterm -> . MINUS expr_1
    (364) symbol -> . SYMBOL

    NUMBER          shift and go to state 115
    LPAREN          shift and go to state 112
    TILDA           shift and go to state 113
    MINUS           shift and go to state 116
    SYMBOL          shift and go to state 118

    expr                           shift and go to state 1066
    eterm                          shift and go to state 111
    symbol                         shift and go to state 117
    expr_1                         shift and go to state 120

state 1046

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN . STAR HALF_REG

    STAR            shift and go to state 1067


state 1047

    (324) rnd_op -> LPAREN RNDH COMMA . R RPAREN

    R               shift and go to state 1068


state 1048

    (320) rnd_op -> LPAREN RNDH RPAREN .

    SEMICOLON       reduce using rule 320 (rnd_op -> LPAREN RNDH RPAREN .)
    DOUBLE_BAR      reduce using rule 320 (rnd_op -> LPAREN RNDH RPAREN .)


state 1049

    (322) rnd_op -> LPAREN RNDL RPAREN .

    SEMICOLON       reduce using rule 322 (rnd_op -> LPAREN RNDL RPAREN .)
    DOUBLE_BAR      reduce using rule 322 (rnd_op -> LPAREN RNDL RPAREN .)


state 1050

    (326) rnd_op -> LPAREN RNDL COMMA . R RPAREN

    R               shift and go to state 1069


state 1051

    (327) rnd_op -> LPAREN TL COMMA . R RPAREN

    R               shift and go to state 1070


state 1052

    (323) rnd_op -> LPAREN TL RPAREN .

    SEMICOLON       reduce using rule 323 (rnd_op -> LPAREN TL RPAREN .)
    DOUBLE_BAR      reduce using rule 323 (rnd_op -> LPAREN TL RPAREN .)


state 1053

    (325) rnd_op -> LPAREN TH COMMA . R RPAREN

    R               shift and go to state 1071


state 1054

    (321) rnd_op -> LPAREN TH RPAREN .

    SEMICOLON       reduce using rule 321 (rnd_op -> LPAREN TH RPAREN .)
    DOUBLE_BAR      reduce using rule 321 (rnd_op -> LPAREN TH RPAREN .)


state 1055

    (276) amod2 -> LPAREN sco COMMA asr_asl_0 . RPAREN

    RPAREN          shift and go to state 1072


state 1056

    (275) amod2 -> LPAREN asr_asl_0 COMMA sco . RPAREN

    RPAREN          shift and go to state 1073


state 1057

    (330) b3_op -> LPAREN LO COMMA . R RPAREN

    R               shift and go to state 1074


state 1058

    (328) b3_op -> LPAREN LO RPAREN .

    SEMICOLON       reduce using rule 328 (b3_op -> LPAREN LO RPAREN .)
    DOUBLE_BAR      reduce using rule 328 (b3_op -> LPAREN LO RPAREN .)


state 1059

    (331) b3_op -> LPAREN HI COMMA . R RPAREN

    R               shift and go to state 1075


state 1060

    (329) b3_op -> LPAREN HI RPAREN .

    SEMICOLON       reduce using rule 329 (b3_op -> LPAREN HI RPAREN .)
    DOUBLE_BAR      reduce using rule 329 (b3_op -> LPAREN HI RPAREN .)


state 1061

    (302) byteop_mod -> LPAREN R COMMA . MMOD RPAREN

    MMOD            shift and go to state 1076


state 1062

    (299) byteop_mod -> LPAREN R RPAREN .

    SEMICOLON       reduce using rule 299 (byteop_mod -> LPAREN R RPAREN .)
    DOUBLE_BAR      reduce using rule 299 (byteop_mod -> LPAREN R RPAREN .)


state 1063

    (301) byteop_mod -> LPAREN MMOD COMMA . R RPAREN

    R               shift and go to state 1077


state 1064

    (300) byteop_mod -> LPAREN MMOD RPAREN .

    SEMICOLON       reduce using rule 300 (byteop_mod -> LPAREN MMOD RPAREN .)
    DOUBLE_BAR      reduce using rule 300 (byteop_mod -> LPAREN MMOD RPAREN .)


state 1065

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr . RPAREN aligndir

    RPAREN          shift and go to state 1078


state 1066

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr . RPAREN aligndir

    RPAREN          shift and go to state 1079


state 1067

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR . HALF_REG

    HALF_REG        shift and go to state 1080


state 1068

    (324) rnd_op -> LPAREN RNDH COMMA R . RPAREN

    RPAREN          shift and go to state 1081


state 1069

    (326) rnd_op -> LPAREN RNDL COMMA R . RPAREN

    RPAREN          shift and go to state 1082


state 1070

    (327) rnd_op -> LPAREN TL COMMA R . RPAREN

    RPAREN          shift and go to state 1083


state 1071

    (325) rnd_op -> LPAREN TH COMMA R . RPAREN

    RPAREN          shift and go to state 1084


state 1072

    (276) amod2 -> LPAREN sco COMMA asr_asl_0 RPAREN .

    SEMICOLON       reduce using rule 276 (amod2 -> LPAREN sco COMMA asr_asl_0 RPAREN .)
    DOUBLE_BAR      reduce using rule 276 (amod2 -> LPAREN sco COMMA asr_asl_0 RPAREN .)


state 1073

    (275) amod2 -> LPAREN asr_asl_0 COMMA sco RPAREN .

    SEMICOLON       reduce using rule 275 (amod2 -> LPAREN asr_asl_0 COMMA sco RPAREN .)
    DOUBLE_BAR      reduce using rule 275 (amod2 -> LPAREN asr_asl_0 COMMA sco RPAREN .)


state 1074

    (330) b3_op -> LPAREN LO COMMA R . RPAREN

    RPAREN          shift and go to state 1085


state 1075

    (331) b3_op -> LPAREN HI COMMA R . RPAREN

    RPAREN          shift and go to state 1086


state 1076

    (302) byteop_mod -> LPAREN R COMMA MMOD . RPAREN

    RPAREN          shift and go to state 1087


state 1077

    (301) byteop_mod -> LPAREN MMOD COMMA R . RPAREN

    RPAREN          shift and go to state 1088


state 1078

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN . aligndir
    (297) aligndir -> . empty
    (298) aligndir -> . LPAREN R RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 986
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    aligndir                       shift and go to state 1089
    empty                          shift and go to state 987

state 1079

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN . aligndir
    (297) aligndir -> . empty
    (298) aligndir -> . LPAREN R RPAREN
    (389) empty -> .

    LPAREN          shift and go to state 986
    SEMICOLON       reduce using rule 389 (empty -> .)
    DOUBLE_BAR      reduce using rule 389 (empty -> .)

    aligndir                       shift and go to state 1090
    empty                          shift and go to state 987

state 1080

    (48) dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG .

    SEMICOLON       reduce using rule 48 (dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG .)
    DOUBLE_BAR      reduce using rule 48 (dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG .)


state 1081

    (324) rnd_op -> LPAREN RNDH COMMA R RPAREN .

    SEMICOLON       reduce using rule 324 (rnd_op -> LPAREN RNDH COMMA R RPAREN .)
    DOUBLE_BAR      reduce using rule 324 (rnd_op -> LPAREN RNDH COMMA R RPAREN .)


state 1082

    (326) rnd_op -> LPAREN RNDL COMMA R RPAREN .

    SEMICOLON       reduce using rule 326 (rnd_op -> LPAREN RNDL COMMA R RPAREN .)
    DOUBLE_BAR      reduce using rule 326 (rnd_op -> LPAREN RNDL COMMA R RPAREN .)


state 1083

    (327) rnd_op -> LPAREN TL COMMA R RPAREN .

    SEMICOLON       reduce using rule 327 (rnd_op -> LPAREN TL COMMA R RPAREN .)
    DOUBLE_BAR      reduce using rule 327 (rnd_op -> LPAREN TL COMMA R RPAREN .)


state 1084

    (325) rnd_op -> LPAREN TH COMMA R RPAREN .

    SEMICOLON       reduce using rule 325 (rnd_op -> LPAREN TH COMMA R RPAREN .)
    DOUBLE_BAR      reduce using rule 325 (rnd_op -> LPAREN TH COMMA R RPAREN .)


state 1085

    (330) b3_op -> LPAREN LO COMMA R RPAREN .

    SEMICOLON       reduce using rule 330 (b3_op -> LPAREN LO COMMA R RPAREN .)
    DOUBLE_BAR      reduce using rule 330 (b3_op -> LPAREN LO COMMA R RPAREN .)


state 1086

    (331) b3_op -> LPAREN HI COMMA R RPAREN .

    SEMICOLON       reduce using rule 331 (b3_op -> LPAREN HI COMMA R RPAREN .)
    DOUBLE_BAR      reduce using rule 331 (b3_op -> LPAREN HI COMMA R RPAREN .)


state 1087

    (302) byteop_mod -> LPAREN R COMMA MMOD RPAREN .

    SEMICOLON       reduce using rule 302 (byteop_mod -> LPAREN R COMMA MMOD RPAREN .)
    DOUBLE_BAR      reduce using rule 302 (byteop_mod -> LPAREN R COMMA MMOD RPAREN .)


state 1088

    (301) byteop_mod -> LPAREN MMOD COMMA R RPAREN .

    SEMICOLON       reduce using rule 301 (byteop_mod -> LPAREN MMOD COMMA R RPAREN .)
    DOUBLE_BAR      reduce using rule 301 (byteop_mod -> LPAREN MMOD COMMA R RPAREN .)


state 1089

    (31) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir .

    SEMICOLON       reduce using rule 31 (dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir .)
    DOUBLE_BAR      reduce using rule 31 (dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir .)


state 1090

    (30) dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir .

    SEMICOLON       reduce using rule 30 (dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir .)
    DOUBLE_BAR      reduce using rule 30 (dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 138 resolved using rule (loophardware -> LOOP_BEGIN NUMBER)
WARNING: rejected rule (eterm -> NUMBER) in state 138
WARNING: reduce/reduce conflict in state 146 resolved using rule (loophardware -> LOOP_END NUMBER)
WARNING: rejected rule (eterm -> NUMBER) in state 146
