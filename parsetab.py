
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftBARleftCARETleftAMPERSANDleftLESS_LESSGREATER_GREATERleftPLUSMINUSleftSTARSLASHPERCENTrightASSIGNrightTILDABANGABORT ABS ALIGN16 ALIGN24 ALIGN8 AMPERSAND ASHIFT ASL ASR ASSIGN AT A_ONE_COLON_ZERO A_ONE_DOT_H A_ONE_DOT_L A_ZERO_DOT_H A_ZERO_DOT_L B BANG BAR BITCLR BITMUX BITSET BITTGL BITTST BP BREV BXOR BXORSHIFT BY BYTEOP16M BYTEOP16P BYTEOP1P BYTEOP2P BYTEOP3P BYTEPACK BYTEUNPACK BYTE_DREG CALL CARET CCREG CLI CO COLON COMMA COMMENT1 COMMENT2 CSYNC DBG DBGA DBGAH DBGAL DBGCMPLX DBGHALT DEPOSIT DISALGNEXCPT DIVQ DIVS DOUBLE_BAR EMUEXCPT EXCPT EXPADJ EXTRACT FLUSH FLUSHINV FUNCDESC_GOT17M4 GE GOT GOT17M4 GREATER_GREATER GT HALF_REG HI HLT IDLE IF IFLUSH JUMP JUMP_DOT_L JUMP_DOT_S LABEL LBRACK LE LESS_LESS LESS_THAN LINK LO LOOP LOOP_BEGIN LOOP_END LPAREN LSETUP LSHIFT LT M MAX MIN MINUS MMOD MNOP NEG NOP NOT NS NUMBER ONES OUTC PACK PC PERCENT PLTPC PLUS PREFETCH PRNT R RAISE RBRACK REG REG_A_DOUBLE_ONE REG_A_DOUBLE_ZERO RND RND12 RND20 RNDH RNDL ROT RPAREN RTE RTI RTN RTS RTX S SAA SCO SEARCH SEMICOLON SHIFT SIGN SIGNBITS SLASH SSYNC STAR STATUS_REG STI SYMBOL TESTSET TH TILDA TL UNLINK V VIT_MAX W WHATREG X Z _AMPERSAND_ASSIGN _ASSIGN_ASSIGN _ASSIGN_BANG _BAR_ASSIGN _CARET_ASSIGN _GREATER_GREATER_ASSIGN _GREATER_GREATER_GREATER _GREATER_GREATER_GREATER_THAN_ASSIGN _LESS_LESS_ASSIGN _LESS_THAN_ASSIGN _MINUS_ASSIGN _MINUS_BAR_MINUS _MINUS_BAR_PLUS _MINUS_MINUS _PLUS_ASSIGN _PLUS_BAR_MINUS _PLUS_BAR_PLUS _PLUS_PLUS _STAR_ASSIGN\n\ttranslation : statement\n\t\n\ttranslation : translation statement\n\t\n\tstatement : asm\n\t asm : asm_1 SEMICOLON\n\n\t| parallel_instructions SEMICOLON\n\t  \n\t| error\n\t\n\t\n\tasm_1 : dspalu\n\n\t| dspmult\n\n\t| dspshift\n\n\t| jump\n\n\t| nop\n\n\t| idle\n\n\t| loadstore\n\n\t| other\n\n\t\n\tparallel_instructions : asm_1 DOUBLE_BAR asm_1 DOUBLE_BAR asm_1\n\n\t| asm_1 DOUBLE_BAR asm_1\n\n\t\n\tvector_mac : assign_macfunc opt_mode COMMA assign_macfunc opt_mode\n\n\t| assign_macfunc opt_mode\n\t\n\t\n\tdspalu : comp\n\n\t| loophardware\n\n\t| vector_mac\n\n\t| expadj\n\n\t| deposit\n\t\n\t| bitlogic\n\n\t| alu2\n\n\t| REG ASSIGN LPAREN a_plusassign REG_A RPAREN\n\t\n\t  \n\t| HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN\n\t\n\t  \n\t| A_ZERO_DOT_H ASSIGN HALF_REG\n\t\n\t| A_ONE_DOT_H ASSIGN HALF_REG\n\t\n\t| LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir\n\t\n\t\n\n\t| LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir\n\t\n\t\n\n\t| LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir\n\t\n\t\n\t| LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN\n\t\n\t  \n\t| REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H\n\t\n\t  \n\n\n\t| REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1\n\t\n\t  \n\n\t| REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1 \n\n\t| REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2\n\t\n\t  \n\n\t| REG ASSIGN ABS REG vmod\n\t\n\t      \n\t  \n\t| a_assign ABS REG_A\n\t\n\t| A_ZERO_DOT_L ASSIGN HALF_REG\n\t\n\t  \n\t| A_ONE_DOT_L ASSIGN HALF_REG\n\t\n\t  \n\n\t| REG ASSIGN c_align LPAREN REG COMMA REG RPAREN\n\t\n\t  \n\n \t| REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod\n\t\n\t\n \t| REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN\n\t\n\t\n\n\t| REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op\n\t\n\t\n\n\t| REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op\n\t\n\t\n\n\t| REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN\n\t\n\t  \n\n\t| HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG\n\t\n\t  \n\t| REG ASSIGN REG plus_minus REG amod1\n\t\n\t      \n\t  \n\t| REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod\n\t \n\t  \n\n\t| a_assign MINUS REG_A\n\t\n\t| HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1\n\t\n\t| a_assign a_assign expr \n\t| a_assign REG_A LPAREN S RPAREN\n\t\n\t  \n\n\t| HALF_REG ASSIGN REG LPAREN RND RPAREN\n\t\n\t  \n\n\t| HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN\n\t\n\t  \n\n\t| HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN\n\t\n\t  \n\n\t| a_assign REG_A\n\t\n\t  \n\n\t| a_assign REG\n\t\n\t  \n\n\t| REG ASSIGN HALF_REG xpmod\n\t\n\t      \n\t  \n\n\t| HALF_REG ASSIGN expr\n\t\n\n\t| a_assign expr\n\t\n\n\t| REG ASSIGN expr xpmod1\n\t\n\t\t\n\t\t\t\n\t  \n\n\t| HALF_REG ASSIGN REG\n\t\n\t  \n\n\t| REG ASSIGN REG op_bar_op REG amod0\n\t\n\t  \n\n\t| REG ASSIGN BYTE_DREG xpmod\n\t\n\t  \n\n\t| a_assign ABS REG_A COMMA a_assign ABS REG_A\n\t\n\t  \n\n\t| a_assign MINUS REG_A COMMA a_assign MINUS REG_A\n\t\n\t  \n\n\t| a_minusassign REG_A w32_or_nothing\n\t\n\t  \n\n\t| REG _MINUS_ASSIGN expr\n\t\n\t  \n\n\t| REG _PLUS_ASSIGN REG LPAREN BREV RPAREN\n\t\n\t  \n\n\t| REG _MINUS_ASSIGN REG\n\t\n\t  \n\n\t| REG_A _PLUS_ASSIGN REG_A w32_or_nothing\n\t\n\t  \n\n\t| REG _PLUS_ASSIGN REG\n\t\n\t  \n\n\t| REG _PLUS_ASSIGN expr\n\t\n\t      \n\t  \n\n \t| REG _STAR_ASSIGN REG\n\t\n\t  \n\n\t| SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir\n\t\n\t\n\n\t| a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN\n\t\n\t  \n\n\t| REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr\n\t\n\tcomp : REG ASSIGN REG BAR REG\n\t\n\t  \n\t| REG ASSIGN REG CARET REG\n\t\n\t  \n\t| REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN\n\t\n\t      \n\t  \n\t| CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A\n\t\n\t  \n\t| CCREG ASSIGN REG_A LESS_THAN REG_A\n\t\n\t  \n\t| CCREG ASSIGN REG LESS_THAN REG iu_or_nothing\n\t\n\t  \n\t| CCREG ASSIGN REG LESS_THAN expr iu_or_nothing\n\t\n\t  \n\t| CCREG ASSIGN REG _ASSIGN_ASSIGN REG\n\t\n\t  \n\t| CCREG ASSIGN REG _ASSIGN_ASSIGN expr\n\t\n\t  \n\t| CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A\n\t\n\t  \n\t| CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing\n\t\n\t  \n\t| CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing\n\t\n\t  \n\n\t| REG ASSIGN REG AMPERSAND REG\n\t\n\t  \n\n\t| ccstat\n\t\n\n\t| REG ASSIGN REG\n\t\n\t  \n\n\t| CCREG ASSIGN REG\n\t\n\t  \n\n\t| REG ASSIGN CCREG\n\t\n\t  \n\n\t| CCREG _ASSIGN_BANG CCREG \n\t\n\tdspmult : HALF_REG ASSIGN multiply_halfregs opt_mode\n\n  | REG ASSIGN multiply_regs opt_mode\n  \n\n\t| REG ASSIGN multiply_halfregs opt_mode\n\t\n\t  \n\n\t| HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode\n\t\n\n\t| REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode\n\t\n\n  | a_full_macfunc opt_mode\n  \n\n  | assign_full_macfunc opt_mode \n\n\t\n\tdspshift : a_assign ASHIFT REG_A BY HALF_REG\n\t\n\t  \n\n\t| HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod\n\t\n\t  \n\n\t| a_assign REG_A LESS_LESS expr\n\t\n\t  \n\n\t| REG ASSIGN REG LESS_LESS expr vsmod\n\t\n\t      \n\t  \n\t  \n\t| HALF_REG ASSIGN HALF_REG LESS_LESS expr smod\n\t\n\t      \n\t  \n\t| REG ASSIGN ASHIFT REG BY HALF_REG vsmod\n\t\n\texpadj : HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod\n\n\t| HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN \n\t\n\tdeposit : REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN\n\t\n\t  \n\n\t| REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN\n\t\n\t  \n\n\t| REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod\n\t\n\t  \n\n\t| a_assign REG_A _GREATER_GREATER_GREATER expr\n\t\n\t  \n\t| a_assign LSHIFT REG_A BY HALF_REG\n\t\n\t  \n\n\t| HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG\n\t\n\t  \n\n\t| REG ASSIGN LSHIFT REG BY HALF_REG vmod\n\t\n\t  \n\n\t| REG ASSIGN SHIFT REG BY HALF_REG\n\t\n\t  \n\n\t| a_assign REG_A GREATER_GREATER expr\n\t\n\t  \n\n\t| REG ASSIGN REG GREATER_GREATER expr vmod\n\t\n\t      \n\t  \n\t\n\t| HALF_REG ASSIGN HALF_REG GREATER_GREATER expr\n\t\n\t  \n\t| HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod\n\t\n\t  \n\n\n\t| REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod\n\t\n\t      \n\t  \n\n\t| HALF_REG ASSIGN ONES REG\n\t\n\t  \n\n\t| REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN\n\t\n\t  \n\n\t| HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN\n\t\n\t  \n\n\t| HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN\n\t\n\t  \n\n\t| HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN\n\t\n\t  \n\n\t| a_assign ROT REG_A BY HALF_REG\n\t\n\t  \n\n\t| REG ASSIGN ROT REG BY HALF_REG\n\t\n\t  \n\n\t| a_assign ROT REG_A BY expr\n\t\n\t  \n\n\t| REG ASSIGN ROT REG BY expr\n\t\n\t  \n\n\t| HALF_REG ASSIGN SIGNBITS REG_A\n\t\n\t  \n\n\t| HALF_REG ASSIGN SIGNBITS REG\n\t\n\t  \n\n\t| HALF_REG ASSIGN SIGNBITS HALF_REG\n\n\t| HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl\n\t\n\t  \n\n\t| REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl\n\t\n\t  \n\n\t| BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl\n\n\t| a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN\n\t\n\tbitlogic :  BITCLR LPAREN REG COMMA expr RPAREN\n\t| BITSET LPAREN REG COMMA expr RPAREN\n\t| BITTGL LPAREN REG COMMA expr RPAREN\n\t\n\t\n\tjump : CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN\n\n\t| return\n\t\n\t  \n\n\t| CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN\n\t\n\t  \n\n\t| IF BANG CCREG REG ASSIGN REG\n\t\n\t  \n\n\t| IF CCREG REG ASSIGN REG\n\t\n\t  \n\n\t| IF BANG CCREG JUMP expr\n\t\n\t  \n\n\t| IF BANG CCREG JUMP expr LPAREN BP RPAREN\n\t\n\t  \n\n\t| IF CCREG JUMP expr\n\t\n\t  \n\n\t| IF CCREG JUMP expr LPAREN BP RPAREN\n\n\n\t| JUMP LPAREN REG RPAREN\n\t\n\t  \n\n\t| CALL LPAREN REG RPAREN\n\t\n\t  \n\n\t| CALL LPAREN PC PLUS REG RPAREN\n\t\n\t  \n\n\t| JUMP LPAREN PC PLUS REG RPAREN\n\t\n\t  \n\n\t| RAISE expr\n\t\n\t  \n\n\t| EXCPT expr\n\t\n\n\t| TESTSET LPAREN REG RPAREN\n\t\n\t  \n\n\t| JUMP expr\n\t\n\t  \n\n\t| JUMP_DOT_S expr\n\t\n\t  \n\n\t| JUMP_DOT_L expr\n\t\n\t  \n\n\t| JUMP_DOT_L pltpc\n\t\n\t  \n\n\t| CALL expr\n\t\n\t  \n\t| CALL pltpc \n\n\t\n\treturn : RTS\n\t\n\n\t| RTI\n\t\n\n\t| RTX\n\t\n\n\t| RTN\n\t\n\n\t| RTE\n\t\n\tnop : NOP\n\n\t| MNOP\n\t\n\tidle : IDLE\n\t\n\talu2 : DIVQ LPAREN REG COMMA REG RPAREN\n\t\n\n\t| DIVS LPAREN REG COMMA REG RPAREN\n\t\n\n\t| REG ASSIGN MINUS REG vsmod\n\t  \n\n\t| REG ASSIGN TILDA REG\n\t\n\t  \n\n\t| REG _GREATER_GREATER_ASSIGN REG\n\t\n\t  \n\n\t| REG _GREATER_GREATER_ASSIGN expr\n\t\n\t  \n\n\t| REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG\n\t\n\t  \n\n\t| REG _LESS_LESS_ASSIGN REG\n\t\n\t  \n\n\t| REG _LESS_LESS_ASSIGN expr\n\t\n\t  \n\n\n\t| REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr\n\t\n\tcache : FLUSH LBRACK REG RBRACK\n\t\n\n\t| FLUSH reg_with_postinc\n\t\n\t  \n\n\t| FLUSHINV LBRACK REG RBRACK\n\t\n\t  \n\n\t| FLUSHINV reg_with_postinc\n\n\t| IFLUSH LBRACK REG RBRACK\n\t\n\t  \n\n\t| IFLUSH reg_with_postinc\n\t\n\t  \n\n\t| PREFETCH LBRACK REG RBRACK\n\t\n\t  \n\n\t| PREFETCH reg_with_postinc \n\t\n\tloadstore : pushpopmultiple\n\n\t| B LBRACK REG post_op RBRACK ASSIGN REG\n \n\t| B LBRACK REG plus_minus expr RBRACK ASSIGN REG\n\t \n\t| W LBRACK REG plus_minus expr RBRACK ASSIGN REG\n\t\n\t| W LBRACK REG post_op RBRACK ASSIGN REG\n\t\n\n\t| W LBRACK REG post_op RBRACK ASSIGN HALF_REG\n\t\n\t| LBRACK REG plus_minus expr RBRACK ASSIGN REG\n\n\t| REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod\n\t\n\t  \n\n\t| HALF_REG ASSIGN W LBRACK REG post_op RBRACK\n\t\n\t  \n\n\n\t| REG ASSIGN W LBRACK REG post_op RBRACK xpmod\n\t\n\n\t| REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod\n\t\n\n\t| HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK\n\t\n\n\t| LBRACK REG post_op RBRACK ASSIGN REG\n\t\n\t  \n\n\t| LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG\n\t\n\t  \n\n\t| W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG\n\t\n\t  \n\n\t| REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod\n\t\n\t  \n\n\t| REG ASSIGN B LBRACK REG post_op RBRACK xpmod\n\t\n\n\t| REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK\n\t\n\t  \n\n\t| REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK\n\t\n\t  \n\n\t| REG ASSIGN LBRACK REG post_op RBRACK \n\t\n\tpushpopmultiple : reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN\n\t\n\t  \n\n\t| reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN\n\t\n\t  \n\n\t| LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc\n\t\n\t  \n\n\t| LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc\n\t\n\t  \n\n\t| reg_with_predec ASSIGN REG  \n\t\n\tlinkage : LINK expr\n\t\n\t| UNLINK \n\t\n\tloophardware : LSETUP LPAREN expr COMMA expr RPAREN REG\n\t\n\t  \n\t| LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG\n\t\n\t  \n\n\t| LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr \n\t| LOOP expr REG\n\t\n\t| LOOP expr REG ASSIGN REG\n\t\n\t  \n\t| LOOP expr REG ASSIGN REG GREATER_GREATER expr  \n\t| LOOP_BEGIN NUMBER\n\t\n\t| LOOP_BEGIN expr  \n\t| LOOP_END NUMBER\n\t\n\t| LOOP_END expr\n\n\t| LOOP REG ASSIGN NUMBER\n\n\t| LOOP_END\n\t\n\tother : ABORT\n\n\t| linkage\n\n\t| cache\n\n\t| CSYNC\n\t\n\n\t| SSYNC\n\t\n\n\t| EMUEXCPT\n\t\n\n\t| CLI REG\n\t\n\t  \n\n\t| STI REG\n\n\t| DISALGNEXCPT\n\t\n\t| DBG\n\t\n\t| DBG REG_A\n\t\n\t| DBG REG\n\t\n\n\t| DBGCMPLX LPAREN REG RPAREN\n\t\n\n\t| DBGHALT\n\t\n\n\t| HLT\n\t\n\n\t| DBGA LPAREN HALF_REG COMMA expr RPAREN\n\t\n\n\t| DBGAH LPAREN REG COMMA expr RPAREN\n\t\n\n\t| DBGAL LPAREN REG COMMA expr RPAREN\n\t\n\n\t| OUTC expr\n\t\n\n\t| OUTC REG\n\t\tREG_A : REG_A_DOUBLE_ZERO\n\t\n\t| REG_A_DOUBLE_ONE\n\t\n\t\n\t\n\topt_mode : empty\n\n\t| LPAREN M COMMA MMOD RPAREN\n\t\n\t| LPAREN MMOD COMMA M RPAREN\n\t\n\t| LPAREN MMOD RPAREN\n\t\n\t| LPAREN M RPAREN\n\t\n\t asr_asl : LPAREN ASL RPAREN\n\t\n\t| LPAREN ASR RPAREN\n\t\n\t\n\t\n\tsco : empty\n\n\t| S\n\t\n\t| CO\n\t\n\t| SCO\n\t\n\t\n\tasr_asl_0 : ASL\n\t\n\t| ASR\n\t\n\t\n\t\n\tamod0 : empty\n\n\t| LPAREN sco RPAREN\n\t\n\t\n\t\n\tamod1 : empty\n\n\t| LPAREN NS RPAREN\n\t\n\t| LPAREN S RPAREN\n\t\n\t\n\t\n\tamod2 : empty\n\n\t| LPAREN asr_asl_0 RPAREN\n\t\n\t| LPAREN sco RPAREN\n\t\n\t| LPAREN asr_asl_0 COMMA sco RPAREN\n\t\n\t| LPAREN sco COMMA asr_asl_0 RPAREN\n\t\n\t\n\t\n\txpmod : empty\n\n\t| LPAREN Z RPAREN\n\t\n\t| LPAREN X RPAREN\n\t\n\t\n\t\n\txpmod1 : empty\n\n\t| LPAREN X RPAREN\n\t\n\t| LPAREN Z RPAREN\n\t\n\t\n\t\n\tvsmod : empty \n\n\t| LPAREN NS RPAREN\n\t\n\t| LPAREN S RPAREN\n\t\n\t| LPAREN V RPAREN\n\t\n\t| LPAREN V COMMA S RPAREN\n\t\n\t| LPAREN S COMMA V RPAREN\n\t\n\t\n\t\n\tvmod : empty \n\t|  LPAREN V RPAREN\n\t\n\t\n\t\n\tsmod : empty \n\t|  LPAREN S RPAREN\n\t\n\t\n\tsearchmod : GE\n\t\n\t| GT\n\t\n\t| LE\n\t\n\t| LT\n\t\n\t\n\t\n\taligndir : empty \n\t|  LPAREN R RPAREN\n\t\n\t\n\tbyteop_mod : LPAREN R RPAREN\n\t\n\t| LPAREN MMOD RPAREN\n\t\n\t| LPAREN MMOD COMMA R RPAREN\n\t\n\t| LPAREN R COMMA MMOD RPAREN\n\t\n\t\n\tc_align : ALIGN8\n\t\n\t| ALIGN16\n\t\n\t| ALIGN24\n\t\n\t\n\t\n\tw32_or_nothing : empty \n\t| LPAREN MMOD RPAREN\n\t\n\t\n\t\n\tiu_or_nothing : empty \n\t| LPAREN MMOD RPAREN\n\t\n\t reg_with_predec : LBRACK _MINUS_MINUS REG RBRACK\n\t\n\t reg_with_postinc : LBRACK REG _PLUS_PLUS RBRACK\n\t\n\t\n\tmin_max : MIN\n\t\n\t| MAX\n\t\n\t\n\top_bar_op : _PLUS_BAR_PLUS\n\t\n\t| _PLUS_BAR_MINUS\n\t\n\t| _MINUS_BAR_PLUS\n\t\n\t| _MINUS_BAR_MINUS\n\t\n\t\n\tplus_minus : PLUS\n\t\n\t| MINUS\n\t\n\t\n\trnd_op : LPAREN RNDH RPAREN\n\t\n\n\t| LPAREN TH RPAREN\n\t\n\n\t| LPAREN RNDL RPAREN\n\t\n\n\t| LPAREN TL RPAREN\n\t\n\n\t| LPAREN RNDH COMMA R RPAREN\n\t\n\t| LPAREN TH COMMA R RPAREN\n\t\n\t| LPAREN RNDL COMMA R RPAREN\n\t\n\n\t| LPAREN TL COMMA R RPAREN\n\t\n\t\n\tb3_op : LPAREN LO RPAREN\n\t\n\t| LPAREN HI RPAREN\n\t\n\t| LPAREN LO COMMA R RPAREN\n\t\n\t| LPAREN HI COMMA R RPAREN\n\t\n\t\n\t\n\tpost_op : empty \n\t|  _PLUS_PLUS\n\t\n\t| _MINUS_MINUS\n\t\n\t\n\ta_assign : REG_A ASSIGN\n\t\n\t\n\ta_minusassign : REG_A _MINUS_ASSIGN\n\t\n\t\n\ta_plusassign : REG_A _PLUS_ASSIGN\n\t\n\t\n\tassign_macfunc : REG ASSIGN REG_A\n\t\n\t| a_macfunc\n\t\n\t| REG ASSIGN LPAREN a_macfunc RPAREN\n\t\n\n\t| HALF_REG ASSIGN LPAREN a_macfunc RPAREN\n\t\n\n\t| HALF_REG ASSIGN REG_A\n\t\n\t\n  assign_full_macfunc : REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN\n  \n\n  | LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN\n  \n\n  | LPAREN REG COLON REG RPAREN ASSIGN multiply_regs\n  \n\n  | REG ASSIGN LPAREN a_full_macfunc RPAREN\n  \n\n  | LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN\n  \n  \n\ta_macfunc : a_assign multiply_halfregs\n\t\n\t| a_plusassign multiply_halfregs\n\t\n\t| a_minusassign multiply_halfregs\n\t\n\t\n  a_full_macfunc : LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs\n  \n  | LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs\n  \n  | LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs\n  \n  \n  multiply_regs : REG STAR REG\n  \n    \n  \n\tmultiply_halfregs : HALF_REG STAR HALF_REG\n\t\n\t  \n\t\n\tcc_op : ASSIGN\n\t\n\t| _BAR_ASSIGN\n\t\n\t| _AMPERSAND_ASSIGN\n\t\n\t| _CARET_ASSIGN\n\t\n\t\n\tccstat : CCREG cc_op STATUS_REG\n\t\n\t| CCREG cc_op V\n\t\n\t| STATUS_REG cc_op CCREG\n\t\n\t| V cc_op CCREG\n\t\n\t symbol : SYMBOL\n\t\n\t\n\tany_gotrel : GOT\n\t\n\t| GOT17M4\n\t\n\t| FUNCDESC_GOT17M4\n\t\n\t\tgot : symbol AT any_gotrel\n\t\n\t\tgot_or_expr : got\n\t\n\t| expr\n\t\n\t\n\tpltpc : symbol AT PLTPC\n\t\n\t eterm : NUMBER\n\t\n\t| symbol\n\t\n\t| LPAREN expr_1 RPAREN\n\t\n\t| TILDA expr_1\n\t\n\t| MINUS expr_1 %prec TILDA\n\t\n\t expr : expr_1\n\t\n\t expr_1 : expr_1 STAR expr_1\n\t\n\t| expr_1 SLASH expr_1\n\t\n\t| expr_1 PERCENT expr_1\n\t\n\t| expr_1 PLUS expr_1\n\t\n\t| expr_1 MINUS expr_1\n\t\n\t| expr_1 LESS_LESS expr_1\n\t\n\t| expr_1 GREATER_GREATER expr_1\n\t\n\t| expr_1 AMPERSAND expr_1\n\t\n\t| expr_1 CARET expr_1\n\t\n\t| expr_1 BAR expr_1\n\t\n\t| eterm\n\t\n\tempty :'
    
_lr_action_items = {'MIN':([161,],[282,]),'A_ZERO_DOT_L':([0,16,45,65,74,110,132,133,134,398,879,],[2,2,-3,-1,-6,-2,-5,-4,2,2,932,]),'_MINUS_MINUS':([48,148,259,324,469,522,566,609,],[147,262,262,262,262,262,262,262,]),'A_ONE_COLON_ZERO':([89,299,455,849,915,],[198,456,198,913,198,]),'A_ZERO_DOT_H':([0,16,45,65,74,110,132,133,134,398,964,],[3,3,-3,-1,-6,-2,-5,-4,3,3,989,]),'EMUEXCPT':([0,16,45,65,74,110,132,133,134,398,],[4,4,-3,-1,-6,-2,-5,-4,4,4,]),'LINK':([0,16,45,65,74,110,132,133,134,398,],[94,94,-3,-1,-6,-2,-5,-4,94,94,]),'_PLUS_BAR_PLUS':([291,935,],[438,438,]),'BYTEPACK':([161,],[300,]),'UNLINK':([0,16,45,65,74,110,132,133,134,398,],[33,33,-3,-1,-6,-2,-5,-4,33,33,]),'MINUS':([13,17,38,46,51,54,68,78,88,90,91,94,96,98,111,112,113,115,116,117,118,120,128,131,138,146,148,158,159,160,161,162,163,170,171,189,193,203,204,215,216,217,218,219,220,221,222,223,224,225,226,227,236,239,243,259,261,265,266,286,291,299,308,321,324,339,340,342,352,358,359,360,361,362,363,364,365,366,367,368,370,374,377,379,380,403,404,405,409,422,439,442,448,455,469,477,480,483,487,495,498,506,515,565,566,605,609,627,633,678,679,688,693,703,718,728,731,736,806,852,872,889,936,937,947,952,963,968,970,971,974,981,1044,1045,],[-253,116,116,116,116,116,116,116,189,-252,116,116,116,116,-388,116,116,-372,116,-373,-364,227,-335,116,-372,-372,266,116,116,116,286,116,116,116,116,116,116,116,-373,227,-375,-376,116,116,116,116,116,116,116,116,116,116,266,266,116,266,116,-318,-319,116,266,116,116,116,266,116,116,116,116,-374,227,227,-378,227,-380,-381,227,-379,227,-382,116,116,116,116,116,116,116,116,116,116,116,116,116,116,266,116,116,116,116,116,116,116,116,116,266,116,266,116,758,116,116,116,116,116,116,116,-373,116,116,116,116,116,266,967,116,116,116,116,116,116,116,116,116,116,]),'CCREG':([0,16,45,62,65,74,105,106,107,108,109,110,131,132,133,134,141,157,161,166,398,842,960,],[41,41,-3,165,-1,-6,-357,-358,214,-359,-356,-2,237,-5,-4,41,256,273,294,322,41,908,984,]),'RPAREN':([13,90,102,111,115,117,118,120,136,195,198,215,216,217,228,268,269,327,332,355,357,358,359,360,361,362,363,364,365,366,367,368,395,399,456,459,460,501,512,513,514,519,521,531,533,537,560,561,564,572,573,579,596,601,602,618,619,620,621,622,626,629,639,641,642,647,648,698,699,700,709,719,721,740,754,769,770,771,772,777,778,779,780,783,784,785,805,807,808,809,810,811,815,818,820,822,827,831,833,839,860,861,876,877,881,908,913,914,917,919,921,926,969,972,973,976,977,978,979,980,984,988,993,995,1006,1008,1021,1022,1023,1024,1031,1032,1033,1034,1035,1038,1040,1041,1042,1043,1055,1056,1065,1066,1068,1069,1070,1071,1074,1075,1076,1077,],[-253,-252,-349,-388,-372,-373,-364,-377,-350,-348,350,358,-375,-376,369,417,419,485,490,517,-355,-374,-383,-386,-378,-384,-380,-381,-387,-379,-385,-382,538,542,594,597,598,630,643,644,645,649,650,664,666,669,686,687,690,701,702,-354,722,725,726,745,746,747,748,749,753,756,-353,-352,-351,765,766,799,801,802,-389,817,819,832,837,854,855,856,857,862,863,864,865,867,868,869,880,882,-263,-264,-262,-261,886,888,890,892,898,901,902,906,922,923,929,930,934,950,955,956,957,959,961,962,994,997,998,-294,1001,-296,-293,-295,1005,1007,1013,1014,1018,-389,-266,1037,1039,-265,1046,1048,1049,1052,1054,-389,1058,1060,1062,1064,1072,1073,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,]),'SEARCH':([761,],[846,]),'SAA':([0,16,45,65,74,110,132,133,134,398,],[53,53,-3,-1,-6,-2,-5,-4,53,53,]),'TL':([1020,],[1034,]),'A_ONE_DOT_H':([0,16,45,65,74,110,132,133,134,398,433,],[11,11,-3,-1,-6,-2,-5,-4,11,11,575,]),'PLUS':([13,90,111,115,117,118,120,138,146,148,204,215,216,217,236,239,259,289,291,293,324,326,354,358,359,360,361,362,363,364,365,366,367,368,457,469,566,609,731,932,936,958,],[-253,-252,-388,-372,-373,-364,223,-372,-372,265,-373,223,-375,-376,265,265,265,433,443,450,265,484,516,-374,223,223,-378,223,-380,-381,223,-379,223,-382,595,265,265,265,-373,964,265,983,]),'PREFETCH':([0,16,45,65,74,110,132,133,134,398,],[63,63,-3,-1,-6,-2,-5,-4,63,63,]),'REG_A_DOUBLE_ONE':([0,16,25,37,45,65,74,88,110,127,128,129,131,132,133,134,139,161,188,189,192,194,197,241,243,299,333,345,393,398,400,401,402,450,458,504,507,536,623,625,634,662,663,750,752,755,757,758,760,840,859,885,967,],[13,13,13,13,-3,-1,-6,13,-2,13,-335,-336,13,-5,-4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-337,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LESS_LESS':([13,90,111,115,117,118,120,138,146,187,204,215,216,217,236,291,358,359,360,361,362,363,364,365,366,367,368,708,731,819,],[-253,-252,-388,-372,-373,-364,218,-372,-372,339,-373,218,-375,-376,377,439,-374,-383,218,-378,-384,-380,-381,218,-379,218,-382,806,-373,889,]),'GT':([953,],[976,]),'RTS':([0,16,45,65,74,110,132,133,134,398,],[21,21,-3,-1,-6,-2,-5,-4,21,21,]),'_PLUS_BAR_MINUS':([291,935,],[440,440,]),'DBGHALT':([0,16,45,65,74,110,132,133,134,398,],[86,86,-3,-1,-6,-2,-5,-4,86,86,]),'_GREATER_GREATER_GREATER_THAN_ASSIGN':([57,],[163,]),'BXORSHIFT':([88,128,382,],[191,-335,529,]),'GE':([953,],[979,]),'ONES':([131,],[242,]),'SLASH':([111,115,117,118,120,138,146,204,215,216,217,358,359,360,361,362,363,364,365,366,367,368,731,],[-388,-372,-373,-364,225,-372,-372,-373,225,-375,-376,-374,225,225,-378,225,-380,225,225,-379,225,225,-373,]),'_PLUS_ASSIGN':([13,28,57,90,350,391,493,],[-253,127,159,-252,510,536,536,]),'DBGCMPLX':([0,16,45,65,74,110,132,133,134,398,],[18,18,-3,-1,-6,-2,-5,-4,18,18,]),'BITTGL':([0,16,45,65,74,110,132,133,134,398,],[22,22,-3,-1,-6,-2,-5,-4,22,22,]),'FLUSHINV':([0,16,45,65,74,110,132,133,134,398,],[24,24,-3,-1,-6,-2,-5,-4,24,24,]),'MAX':([161,],[310,]),'SIGN':([381,983,],[528,1004,]),'DBG':([0,16,45,65,74,110,132,133,134,398,],[25,25,-3,-1,-6,-2,-5,-4,25,25,]),'BANG':([62,],[166,]),'_CARET_ASSIGN':([14,41,56,],[108,108,108,]),'RND20':([665,],[778,]),'ABORT':([0,16,45,65,74,110,132,133,134,398,],[26,26,-3,-1,-6,-2,-5,-4,26,26,]),'_STAR_ASSIGN':([57,],[164,]),'_ASSIGN_ASSIGN':([13,90,251,252,],[-253,-252,400,403,]),'BP':([613,741,],[740,833,]),'ASHIFT':([88,128,131,161,],[197,-335,246,313,]),'LOOP':([0,16,45,65,74,110,132,133,134,398,],[51,51,-3,-1,-6,-2,-5,-4,51,51,]),'PACK':([161,],[314,]),'CARET':([111,115,117,118,120,138,146,204,215,216,217,291,358,359,360,361,362,363,364,365,366,367,368,731,],[-388,-372,-373,-364,219,-372,-372,-373,219,-375,-376,435,-374,-383,-386,-378,-384,-380,-381,219,-379,-385,-382,-373,]),'STAR':([101,111,115,117,118,120,138,146,204,215,216,217,236,287,291,358,359,360,361,362,363,364,365,366,367,368,640,731,857,1046,],[211,-388,-372,-373,-364,220,-372,-372,-373,220,-375,-376,211,211,437,-374,220,220,-378,220,-380,220,220,-379,220,220,437,-373,918,1067,]),'DBGA':([0,16,45,65,74,110,132,133,134,398,],[29,29,-3,-1,-6,-2,-5,-4,29,29,]),'DOUBLE_BAR':([1,4,5,6,7,10,12,13,15,19,20,21,23,25,26,27,30,31,33,35,36,39,40,42,46,47,49,50,52,55,58,59,60,61,66,73,75,77,83,85,86,90,92,95,97,102,111,114,115,117,118,119,120,124,125,126,135,136,137,138,143,145,146,149,151,152,156,168,172,174,179,180,182,186,187,190,195,196,200,202,204,205,206,207,208,209,210,212,213,214,216,217,231,234,239,244,245,247,248,250,252,254,255,256,271,273,274,275,276,277,278,279,287,291,292,293,294,301,302,304,315,316,317,318,319,335,344,347,348,357,358,359,360,361,362,363,364,365,366,367,368,369,372,373,387,388,389,390,396,408,417,419,420,428,429,431,449,453,462,463,465,466,470,476,479,485,486,490,492,499,500,502,517,518,520,524,525,526,527,538,542,543,544,545,546,547,548,549,550,551,562,569,571,577,578,579,580,581,582,584,585,586,590,592,594,597,598,612,614,624,630,631,635,636,638,639,641,642,649,650,653,655,656,657,659,660,666,669,671,673,674,675,676,677,685,686,687,690,691,692,696,697,701,702,706,707,710,712,714,715,722,725,726,734,738,742,746,747,748,749,751,753,756,765,766,768,775,782,788,789,790,791,792,796,797,799,801,802,817,824,826,829,830,832,835,836,837,841,843,848,851,853,854,855,856,862,863,864,865,866,867,868,869,870,871,873,874,875,882,886,888,890,891,892,898,899,900,901,902,903,922,923,924,925,927,928,929,930,933,934,938,941,942,943,945,946,948,950,955,956,959,961,962,975,985,987,989,990,991,992,994,996,997,998,1000,1001,1003,1005,1009,1010,1011,1012,1014,1018,1019,1026,1027,1037,1039,1048,1049,1052,1054,1058,1060,1062,1064,1072,1073,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,],[-168,-237,-8,-93,-21,-234,-22,-253,-146,-11,-24,-167,-13,-241,-232,-25,-10,-9,-219,-170,134,-169,-240,-19,-231,-246,-389,-389,-172,-193,-7,-174,-233,-236,-173,-12,-339,-389,-14,-171,-245,-252,-235,-20,-23,-349,-388,-250,-372,-373,-364,-251,-377,-188,-242,-243,-389,-350,-227,-226,-186,-229,-228,-103,-254,-104,-158,-192,-161,-190,-18,-159,-238,-239,-58,-59,-348,-62,-162,-218,-373,-165,-166,-163,-164,-40,-28,-41,-29,-363,-375,-376,-389,-342,-64,-389,-61,398,-69,-306,-95,-361,-360,-97,-223,-362,-183,-182,-74,-75,-180,-179,-389,-94,-389,-338,-96,-389,-389,-389,-70,-72,-184,-181,-76,-217,-51,-53,-39,-355,-374,-383,-386,-378,-384,-380,-381,-387,-379,-385,-382,-244,-187,-73,-137,-135,-136,-126,-98,-185,-257,-258,-230,-389,-60,-277,-99,-389,-66,-100,-63,-280,-178,-152,-191,-154,-189,-160,-389,-107,-121,-116,-155,-371,-311,-389,-389,-123,-389,-341,-307,-83,-84,-89,-87,-88,-389,-389,-389,-389,-224,-177,-283,-81,-80,-354,-389,-92,-389,-389,-389,-389,-38,-289,-343,-346,-340,-149,-150,-17,-54,-117,-131,-133,-105,-353,-352,-351,-144,-247,-118,-109,-291,-52,-269,-124,-55,-27,-389,-85,-308,-86,-90,-91,-205,-256,-255,-71,-132,-134,-120,-389,-279,-278,-108,-125,-65,-267,-49,-122,-26,-281,-282,-212,-389,-148,-157,-143,-176,-175,-338,-249,-248,-142,-156,-201,-138,-106,-198,-197,-199,-206,-225,-389,-119,-285,-286,-284,-290,-211,-210,-389,-110,-153,-194,-220,-214,-68,-67,-345,-216,-204,-292,-271,-270,-56,-57,-112,-389,-389,-309,-147,-145,-196,-207,-389,-389,-202,-268,-389,-113,-47,-389,-389,-42,-389,-209,-127,-151,-195,-260,-259,-111,-101,-200,-203,-288,-287,-139,-82,-50,-79,-102,-115,-208,-221,-140,-141,-344,-347,-128,-129,-389,-389,-77,-297,-34,-389,-389,-389,-114,-222,-213,-78,-32,-33,-215,-130,-37,-272,-36,-35,-44,-298,-45,-46,-43,-274,-273,-320,-322,-323,-321,-328,-329,-299,-300,-276,-275,-389,-389,-48,-324,-326,-327,-325,-330,-331,-302,-301,-31,-30,]),'HI':([1025,],[1041,]),'X':([430,464,940,],[572,601,969,]),'LESS_THAN':([13,90,251,252,],[-253,-252,401,404,]),'_LESS_LESS_ASSIGN':([57,],[158,]),'HALF_REG':([0,8,16,37,45,65,74,88,99,100,103,104,110,127,128,129,130,131,132,133,134,161,211,235,241,246,265,266,333,378,386,392,393,394,398,458,474,503,506,508,523,536,539,540,565,567,568,610,661,667,668,682,727,739,781,787,821,918,1017,1067,],[32,101,32,101,-3,-1,-6,101,209,210,212,213,-2,-337,-335,-336,232,236,-5,-4,32,287,357,376,387,397,-318,-319,491,525,534,101,101,101,32,101,611,631,635,638,653,-337,670,671,691,696,697,738,772,779,780,788,822,831,101,871,101,958,1031,1080,]),'SCO':([709,1008,1038,],[809,809,809,]),'CSYNC':([0,16,45,65,74,110,132,133,134,398,],[92,92,-3,-1,-6,-2,-5,-4,92,92,]),'RTN':([0,16,45,65,74,110,132,133,134,398,],[35,35,-3,-1,-6,-2,-5,-4,35,35,]),'RTI':([0,16,45,65,74,110,132,133,134,398,],[1,1,-3,-1,-6,-2,-5,-4,1,1,]),'VIT_MAX':([131,161,],[238,290,]),'ALIGN24':([161,],[284,]),'BY':([13,90,343,346,349,376,397,424,426,427,473,],[-253,-252,503,506,508,523,540,565,567,568,610,]),'PC':([171,203,],[326,354,]),'_GREATER_GREATER_ASSIGN':([57,],[160,]),'COLON':([199,272,496,574,589,604,764,793,905,910,931,939,944,951,954,1029,1030,],[352,422,627,703,718,728,852,872,947,952,963,968,970,974,981,1044,1045,]),'LOOP_BEGIN':([0,16,45,65,74,110,132,133,134,398,],[38,38,-3,-1,-6,-2,-5,-4,38,38,]),'ROT':([88,128,161,],[192,-335,280,]),'RTX':([0,16,45,65,74,110,132,133,134,398,],[39,39,-3,-1,-6,-2,-5,-4,39,39,]),'$end':([16,45,65,74,110,132,133,],[0,-3,-1,-6,-2,-5,-4,]),'DISALGNEXCPT':([0,16,45,65,74,110,132,133,134,398,],[40,40,-3,-1,-6,-2,-5,-4,40,40,]),'_BAR_ASSIGN':([14,41,56,],[105,105,105,]),'BITCLR':([0,16,45,65,74,110,132,133,134,398,],[93,93,-3,-1,-6,-2,-5,-4,93,93,]),'error':([0,16,45,65,74,110,132,133,],[74,74,-3,-1,-6,-2,-5,-4,]),'S':([341,570,654,658,709,800,949,1008,1038,],[501,698,769,770,810,877,973,810,810,]),'MMOD':([150,249,418,672,1028,1061,],[268,399,561,783,1043,1076,]),'AMPERSAND':([111,115,117,118,120,138,146,204,215,216,217,291,358,359,360,361,362,363,364,365,366,367,368,731,],[-388,-372,-373,-364,226,-372,-372,-373,226,-375,-376,441,-374,-383,226,-378,-384,-380,-381,226,-379,-385,-382,-373,]),'W':([0,16,45,65,74,110,131,132,133,134,161,398,],[44,44,-3,-1,-6,-2,233,-5,-4,44,281,44,]),'_LESS_THAN_ASSIGN':([13,90,251,252,],[-253,-252,402,405,]),'_MINUS_BAR_PLUS':([291,935,],[444,444,]),'LOOP_END':([0,16,45,65,74,110,132,133,134,398,],[46,46,-3,-1,-6,-2,-5,-4,46,46,]),'HLT':([0,16,45,65,74,110,132,133,134,398,],[47,47,-3,-1,-6,-2,-5,-4,47,47,]),'LBRACK':([0,16,24,43,44,45,63,64,65,69,74,110,132,133,134,161,233,281,311,398,763,982,],[48,48,123,142,144,-3,167,169,-1,173,-6,-2,-5,-4,48,307,375,425,472,48,850,850,]),'RND':([385,],[533,]),'OUTC':([0,16,45,65,74,110,132,133,134,398,],[17,17,-3,-1,-6,-2,-5,-4,17,17,]),'BREV':([423,],[564,]),'NOP':([0,16,45,65,74,110,132,133,134,398,],[52,52,-3,-1,-6,-2,-5,-4,52,52,]),'A_ONE_DOT_L':([0,16,45,65,74,110,132,133,134,161,398,],[9,9,-3,-1,-6,-2,-5,-4,9,289,9,]),'DEPOSIT':([161,],[298,]),'RAISE':([0,16,45,65,74,110,132,133,134,398,],[54,54,-3,-1,-6,-2,-5,-4,54,54,]),'SYMBOL':([17,38,46,51,54,68,78,88,91,94,96,98,112,113,116,128,131,158,159,160,161,162,163,170,171,189,193,203,218,219,220,221,222,223,224,225,226,227,243,261,265,266,286,299,308,321,339,340,342,352,370,374,377,379,380,403,404,405,409,422,439,442,448,455,477,480,483,487,495,498,506,515,565,605,627,678,679,688,693,703,718,728,736,806,852,872,889,947,952,963,968,970,971,974,981,1044,1045,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-335,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-318,-319,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'STATUS_REG':([0,16,45,65,74,105,106,108,110,132,133,134,139,140,398,],[56,56,-3,-1,-6,-357,-358,-359,-2,-5,-4,56,-356,255,56,]),'PLTPC':([356,],[518,]),'TH':([1020,],[1035,]),'_ASSIGN_BANG':([41,],[141,]),'REG':([0,16,17,25,45,48,51,65,74,80,87,88,89,110,111,115,117,118,120,121,122,123,128,131,132,133,134,139,142,144,147,154,155,158,159,160,161,162,163,164,165,167,169,171,173,175,176,177,178,181,183,184,185,201,203,216,217,241,242,263,265,266,280,283,285,286,297,299,307,308,313,322,333,336,351,352,358,359,360,361,362,363,364,365,366,367,368,375,383,384,386,398,403,404,405,406,407,410,421,425,432,434,435,436,437,438,440,441,443,444,445,446,447,451,452,454,461,467,468,471,472,475,484,488,489,497,509,510,511,516,559,583,595,600,606,615,646,651,682,683,684,689,694,704,705,711,713,716,717,720,723,735,744,745,762,786,834,838,845,846,850,858,859,878,883,884,887,893,904,909,912,965,966,1015,1016,],[57,57,119,126,-3,148,153,-1,-6,182,186,190,199,-2,-388,-372,-373,-364,-377,228,229,230,-335,239,-5,-4,57,252,258,259,260,271,272,275,276,279,291,316,318,319,320,323,324,327,328,329,330,331,332,334,335,337,338,353,355,-375,-376,389,390,414,-318,-319,424,426,427,428,453,457,469,470,473,478,494,496,512,513,-374,-383,-386,-378,-384,-380,-381,-387,-379,-385,-382,522,531,532,535,57,546,548,550,552,553,555,562,566,574,576,577,578,579,-314,-315,581,-318,-316,584,-317,585,588,589,593,599,603,604,608,609,612,619,621,622,628,640,640,640,648,685,708,721,724,733,742,764,767,789,790,791,793,795,804,805,812,813,814,815,818,820,827,835,836,640,870,903,905,910,911,916,919,921,931,935,936,939,944,946,951,954,990,991,1029,1030,]),'ASR':([776,1008,1036,],[860,1021,1021,]),'SEMICOLON':([1,4,5,6,7,10,12,13,15,19,20,21,23,25,26,27,30,31,33,34,35,36,39,40,42,46,47,49,50,52,55,58,59,60,61,66,73,75,77,83,85,86,90,92,95,97,102,111,114,115,117,118,119,120,124,125,126,135,136,137,138,143,145,146,149,151,152,156,168,172,174,179,180,182,186,187,190,195,196,200,202,204,205,206,207,208,209,210,212,213,214,216,217,231,234,239,244,245,247,248,250,252,254,255,256,271,273,274,275,276,277,278,279,287,291,292,293,294,301,302,304,315,316,317,318,319,335,344,347,348,357,358,359,360,361,362,363,364,365,366,367,368,369,372,373,387,388,389,390,396,408,417,419,420,428,429,431,449,453,462,463,465,466,470,476,479,485,486,490,492,499,500,502,517,518,520,524,525,526,527,538,541,542,543,544,545,546,547,548,549,550,551,562,569,571,577,578,579,580,581,582,584,585,586,590,592,594,597,598,612,614,624,630,631,635,636,638,639,641,642,649,650,653,655,656,657,659,660,666,669,671,673,674,675,676,677,685,686,687,690,691,692,696,697,701,702,706,707,710,712,714,715,722,725,726,734,738,742,746,747,748,749,751,753,756,765,766,768,775,782,788,789,790,791,792,796,797,799,801,802,817,824,826,829,830,832,835,836,837,841,843,848,851,853,854,855,856,862,863,864,865,866,867,868,869,870,871,873,874,875,882,886,888,890,891,892,898,899,900,901,902,903,922,923,924,925,927,928,929,930,933,934,938,941,942,943,945,946,948,950,955,956,959,961,962,975,985,987,989,990,991,992,994,996,997,998,1000,1001,1003,1005,1009,1010,1011,1012,1014,1018,1019,1026,1027,1037,1039,1048,1049,1052,1054,1058,1060,1062,1064,1072,1073,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,],[-168,-237,-8,-93,-21,-234,-22,-253,-146,-11,-24,-167,-13,-241,-232,-25,-10,-9,-219,132,-170,133,-169,-240,-19,-231,-246,-389,-389,-172,-193,-7,-174,-233,-236,-173,-12,-339,-389,-14,-171,-245,-252,-235,-20,-23,-349,-388,-250,-372,-373,-364,-251,-377,-188,-242,-243,-389,-350,-227,-226,-186,-229,-228,-103,-254,-104,-158,-192,-161,-190,-18,-159,-238,-239,-58,-59,-348,-62,-162,-218,-373,-165,-166,-163,-164,-40,-28,-41,-29,-363,-375,-376,-389,-342,-64,-389,-61,-16,-69,-306,-95,-361,-360,-97,-223,-362,-183,-182,-74,-75,-180,-179,-389,-94,-389,-338,-96,-389,-389,-389,-70,-72,-184,-181,-76,-217,-51,-53,-39,-355,-374,-383,-386,-378,-384,-380,-381,-387,-379,-385,-382,-244,-187,-73,-137,-135,-136,-126,-98,-185,-257,-258,-230,-389,-60,-277,-99,-389,-66,-100,-63,-280,-178,-152,-191,-154,-189,-160,-389,-107,-121,-116,-155,-371,-311,-389,-389,-123,-389,-341,-15,-307,-83,-84,-89,-87,-88,-389,-389,-389,-389,-224,-177,-283,-81,-80,-354,-389,-92,-389,-389,-389,-389,-38,-289,-343,-346,-340,-149,-150,-17,-54,-117,-131,-133,-105,-353,-352,-351,-144,-247,-118,-109,-291,-52,-269,-124,-55,-27,-389,-85,-308,-86,-90,-91,-205,-256,-255,-71,-132,-134,-120,-389,-279,-278,-108,-125,-65,-267,-49,-122,-26,-281,-282,-212,-389,-148,-157,-143,-176,-175,-338,-249,-248,-142,-156,-201,-138,-106,-198,-197,-199,-206,-225,-389,-119,-285,-286,-284,-290,-211,-210,-389,-110,-153,-194,-220,-214,-68,-67,-345,-216,-204,-292,-271,-270,-56,-57,-112,-389,-389,-309,-147,-145,-196,-207,-389,-389,-202,-268,-389,-113,-47,-389,-389,-42,-389,-209,-127,-151,-195,-260,-259,-111,-101,-200,-203,-288,-287,-139,-82,-50,-79,-102,-115,-208,-221,-140,-141,-344,-347,-128,-129,-389,-389,-77,-297,-34,-389,-389,-389,-114,-222,-213,-78,-32,-33,-215,-130,-37,-272,-36,-35,-44,-298,-45,-46,-43,-274,-273,-320,-322,-323,-321,-328,-329,-299,-300,-276,-275,-389,-389,-48,-324,-326,-327,-325,-330,-331,-302,-301,-31,-30,]),'RND12':([665,],[777,]),'IDLE':([0,16,45,65,74,110,132,133,134,398,],[59,59,-3,-1,-6,-2,-5,-4,59,59,]),'TILDA':([17,38,46,51,54,68,78,88,91,94,96,98,112,113,116,128,131,158,159,160,161,162,163,170,171,189,193,203,218,219,220,221,222,223,224,225,226,227,243,261,265,266,286,299,308,321,339,340,342,352,370,374,377,379,380,403,404,405,409,422,439,442,448,455,477,480,483,487,495,498,506,515,565,605,627,678,679,688,693,703,718,728,736,806,852,872,889,947,952,963,968,970,971,974,981,1044,1045,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-335,113,113,113,113,308,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-318,-319,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'BYTEUNPACK':([761,],[845,]),'SSYNC':([0,16,45,65,74,110,132,133,134,398,],[61,61,-3,-1,-6,-2,-5,-4,61,61,]),'NS':([570,658,],[700,771,]),'EXTRACT':([161,],[305,]),'ASL':([776,1008,1036,],[861,1024,1024,]),'B':([0,16,45,65,74,110,132,133,134,161,398,],[64,64,-3,-1,-6,-2,-5,-4,64,311,64,]),'CO':([709,1008,1038,],[808,808,808,]),'CLI':([0,16,45,65,74,110,132,133,134,398,],[80,80,-3,-1,-6,-2,-5,-4,80,80,]),'MNOP':([0,16,45,65,74,110,132,133,134,398,],[66,66,-3,-1,-6,-2,-5,-4,66,66,]),'PERCENT':([111,115,117,118,120,138,146,204,215,216,217,358,359,360,361,362,363,364,365,366,367,368,731,],[-388,-372,-373,-364,222,-372,-372,-373,222,-375,-376,-374,222,222,-378,222,-380,222,222,-379,222,222,-373,]),'LSETUP':([0,16,45,65,74,110,132,133,134,398,],[67,67,-3,-1,-6,-2,-5,-4,67,67,]),'_MINUS_ASSIGN':([13,28,57,90,350,391,493,],[-253,129,162,-252,509,129,129,]),'JUMP':([0,16,45,65,74,110,132,133,134,165,322,398,],[68,68,-3,-1,-6,-2,-5,-4,68,321,477,68,]),'_AMPERSAND_ASSIGN':([14,41,56,],[106,106,106,]),'IFLUSH':([0,16,45,65,74,110,132,133,134,398,],[69,69,-3,-1,-6,-2,-5,-4,69,69,]),'BITSET':([0,16,45,65,74,110,132,133,134,398,],[70,70,-3,-1,-6,-2,-5,-4,70,70,]),'V':([0,16,45,65,74,105,106,108,110,132,133,134,139,140,398,570,591,798,],[14,14,-3,-1,-6,-357,-358,-359,-2,-5,-4,14,-356,254,14,699,719,876,]),'BITTST':([139,141,],[253,257,]),'BYTE_DREG':([161,],[301,]),'Z':([430,464,],[573,602,]),'DIVS':([0,16,45,65,74,110,132,133,134,398,],[71,71,-3,-1,-6,-2,-5,-4,71,71,]),'DIVQ':([0,16,45,65,74,110,132,133,134,398,],[72,72,-3,-1,-6,-2,-5,-4,72,72,]),'_MINUS_BAR_MINUS':([291,935,],[446,446,]),'BYTEOP1P':([161,],[306,]),'BYTEOP16P':([761,],[847,]),'FLUSH':([0,16,45,65,74,110,132,133,134,398,],[43,43,-3,-1,-6,-2,-5,-4,43,43,]),'TESTSET':([0,16,45,65,74,110,132,133,134,398,],[76,76,-3,-1,-6,-2,-5,-4,76,76,]),'BAR':([111,115,117,118,120,138,146,204,215,216,217,291,358,359,360,361,362,363,364,365,366,367,368,731,],[-388,-372,-373,-364,224,-372,-372,-373,224,-375,-376,436,-374,-383,-386,-378,-384,-380,-381,-387,-379,-385,-382,-373,]),'RNDH':([1020,],[1032,]),'SHIFT':([161,],[283,]),'RNDL':([1020,],[1033,]),'NUMBER':([17,38,46,51,54,68,78,88,91,94,96,98,112,113,116,128,131,158,159,160,161,162,163,170,171,189,193,203,218,219,220,221,222,223,224,225,226,227,243,261,265,266,270,286,299,308,321,339,340,342,352,370,374,377,379,380,403,404,405,409,422,439,442,448,455,477,480,483,487,495,498,506,515,565,605,627,678,679,688,693,703,718,728,736,806,852,872,889,947,952,963,968,970,971,974,981,1044,1045,],[115,138,146,115,115,115,115,115,115,115,115,115,115,115,115,-335,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-318,-319,420,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'ALIGN8':([161,],[312,]),'LSHIFT':([88,128,131,161,],[188,-335,235,285,]),'EXCPT':([0,16,45,65,74,110,132,133,134,398,],[78,78,-3,-1,-6,-2,-5,-4,78,78,]),'DBGAL':([0,16,45,65,74,110,132,133,134,398,],[79,79,-3,-1,-6,-2,-5,-4,79,79,]),'DBGAH':([0,16,45,65,74,110,132,133,134,398,],[84,84,-3,-1,-6,-2,-5,-4,84,84,]),'LE':([953,],[980,]),'BYTEOP2P':([161,],[288,]),'BXOR':([382,],[530,]),'LT':([953,],[978,]),'COMMA':([13,75,77,90,102,111,115,117,118,120,136,151,179,195,199,216,217,229,232,234,244,268,269,293,302,325,329,330,331,334,337,338,344,348,353,357,358,359,360,361,362,363,364,365,366,367,368,396,417,419,463,505,514,534,535,538,552,553,563,575,576,584,585,587,588,593,598,599,603,608,611,628,630,686,687,698,699,754,759,773,774,803,808,809,810,811,816,823,920,999,1002,1008,1021,1022,1023,1024,1032,1033,1034,1035,1040,1041,1042,1043,],[-253,-339,-389,-252,-349,-388,-372,-373,-364,-377,-350,-254,333,-348,351,-375,-376,370,374,-342,-389,416,418,-338,-389,483,487,488,489,495,497,498,504,507,515,-355,-374,-383,-386,-378,-384,-380,-381,-387,-379,-385,-382,539,-257,-258,600,634,646,667,668,-341,678,679,689,704,705,711,713,716,717,720,-340,723,727,735,739,755,757,-256,-255,798,800,838,842,858,859,878,-263,-264,-262,-261,887,893,960,1015,1016,-389,-266,1036,1038,-265,1047,1050,1051,1053,1057,1059,1061,1063,]),'EXPADJ':([131,],[240,]),'ASSIGN':([2,3,9,11,13,14,28,32,41,56,57,81,90,153,187,236,237,271,320,350,391,412,415,478,491,493,494,556,557,558,617,632,643,644,645,670,680,681,724,743,804,812,813,814,836,957,],[99,100,103,104,-253,109,128,131,139,109,161,183,-252,270,128,381,382,421,475,511,128,-310,559,615,623,128,625,682,683,684,744,128,761,762,763,781,786,787,821,834,879,883,884,885,904,982,]),'RTE':([0,16,45,65,74,110,132,133,134,398,],[85,85,-3,-1,-6,-2,-5,-4,85,85,]),'BYTEOP16M':([761,],[844,]),'RBRACK':([111,115,117,118,120,148,216,217,230,258,259,260,262,263,264,267,323,324,328,358,359,360,361,362,363,364,365,366,367,368,371,410,411,413,414,469,481,482,522,554,555,566,606,607,609,616,651,652,694,695,729,730,731,732,733,737,767,794,795,828,894,895,896,897,],[-388,-372,-373,-364,-377,-389,-375,-376,372,408,-389,412,-334,-333,415,-332,479,-389,486,-374,-383,-386,-378,-384,-380,-381,-387,-379,-385,-382,520,-333,556,557,558,-389,-333,617,-389,680,681,-389,-333,734,-389,743,-333,768,-333,796,824,-369,-373,-370,826,829,853,873,874,899,-366,-368,-365,-367,]),'SIGNBITS':([131,],[241,]),'GOT17M4':([825,],[894,]),'M':([150,416,],[269,560,]),'STI':([0,16,45,65,74,110,132,133,134,398,],[87,87,-3,-1,-6,-2,-5,-4,87,87,]),'REG_A_DOUBLE_ZERO':([0,16,25,37,45,65,74,88,110,127,128,129,131,132,133,134,139,161,188,189,192,194,197,241,243,299,333,345,393,398,400,401,402,450,458,504,507,536,623,625,634,662,663,750,752,755,757,758,760,840,859,885,967,],[90,90,90,90,-3,-1,-6,90,-2,90,-335,-336,90,-5,-4,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-337,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'ABS':([88,128,161,637,],[194,-335,297,760,]),'_PLUS_PLUS':([148,230,258,259,323,324,328,469,522,566,609,916,],[263,371,371,410,371,481,371,606,651,694,481,371,]),'AT':([118,204,731,],[-364,356,825,]),'LPAREN':([0,13,16,17,18,22,29,38,45,46,49,50,51,53,54,65,67,68,70,71,72,74,75,76,77,78,79,82,84,88,90,91,93,94,96,98,102,110,111,112,113,115,116,117,118,120,128,131,132,133,134,135,136,158,159,160,161,162,163,170,171,183,187,189,191,193,195,203,216,217,218,219,220,221,222,223,224,225,226,227,231,234,238,239,240,243,244,253,257,261,265,266,276,282,284,286,287,288,290,292,293,295,296,298,299,300,301,302,303,304,305,306,308,309,310,312,314,321,339,340,342,352,357,358,359,360,361,362,363,364,365,366,367,368,370,374,377,379,380,398,403,404,405,409,422,428,439,442,443,448,453,455,476,477,480,483,487,492,495,498,506,515,524,525,527,528,529,530,532,538,548,549,550,551,565,579,580,582,584,585,586,594,597,598,605,614,623,625,627,639,641,642,664,671,678,679,688,693,697,703,718,728,736,738,751,762,796,806,829,844,847,848,849,852,865,866,872,873,874,880,886,888,889,891,892,899,906,907,911,947,952,955,956,962,963,968,970,971,974,975,981,990,991,992,1004,1007,1013,1014,1044,1045,1078,1079,],[89,-253,89,112,121,122,130,112,-3,112,150,150,112,155,112,-1,170,171,175,176,177,-6,-339,178,150,112,181,184,185,112,-252,112,201,112,203,112,-349,-2,-388,112,112,-372,112,-373,-364,-377,-335,243,-5,-4,89,249,-350,112,112,112,299,112,112,112,112,336,341,112,345,112,-348,112,-375,-376,112,112,112,112,112,112,112,112,112,112,249,-342,383,385,386,112,150,406,407,112,-318,-319,423,-312,-305,112,430,432,434,150,-338,451,452,454,455,461,430,150,-304,464,467,468,112,471,-313,-303,474,112,112,112,112,112,-355,-374,-383,-386,-378,-384,-380,-381,-387,-379,-385,-382,112,112,112,112,112,89,112,112,112,112,112,570,112,112,583,112,591,112,613,112,112,112,112,150,112,112,112,112,654,658,654,661,662,663,665,-341,672,672,672,672,112,-354,570,570,709,658,591,-343,-346,-340,112,741,750,752,112,-353,-352,-351,776,654,112,112,112,112,591,112,112,112,112,570,-338,849,430,112,430,909,912,-345,915,112,591,150,112,430,430,776,591,940,112,150,430,430,776,949,953,112,112,-344,-347,986,112,112,112,112,112,986,112,1008,658,658,1017,1020,1025,1028,112,112,986,986,]),'GOT':([825,],[896,]),'_GREATER_GREATER_GREATER':([13,90,187,236,291,],[-253,-252,342,380,442,]),'IF':([0,16,45,65,74,110,132,133,134,398,],[62,62,-3,-1,-6,-2,-5,-4,62,62,]),'LO':([1025,],[1040,]),'BYTEOP3P':([161,],[296,]),'ALIGN16':([161,],[303,]),'JUMP_DOT_S':([0,16,45,65,74,110,132,133,134,398,],[91,91,-3,-1,-6,-2,-5,-4,91,91,]),'GREATER_GREATER':([13,90,111,115,117,118,120,138,146,187,204,215,216,217,236,291,358,359,360,361,362,363,364,365,366,367,368,562,731,946,],[-253,-252,-388,-372,-373,-364,221,-372,-372,340,-373,221,-375,-376,379,448,-374,-383,221,-378,-384,-380,-381,221,-379,221,-382,688,-373,971,]),'BITMUX':([0,16,45,65,74,110,132,133,134,398,],[82,82,-3,-1,-6,-2,-5,-4,82,82,]),'R':([986,1028,1047,1050,1051,1053,1057,1059,1063,],[1006,1042,1068,1069,1070,1071,1074,1075,1077,]),'CALL':([0,16,45,65,74,110,132,133,134,398,],[96,96,-3,-1,-6,-2,-5,-4,96,96,]),'JUMP_DOT_L':([0,16,45,65,74,110,132,133,134,398,],[98,98,-3,-1,-6,-2,-5,-4,98,98,]),'FUNCDESC_GOT17M4':([825,],[897,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sco':([709,1008,1038,],[807,1022,1056,]),'opt_mode':([49,50,77,244,292,302,492,866,891,],[149,152,179,396,449,463,624,925,942,]),'amod0':([584,],[710,]),'smod':([524,527,671,],[655,660,782,]),'assign_macfunc':([0,16,134,333,398,],[77,77,77,492,77,]),'rnd_op':([1007,],[1019,]),'jump':([0,16,134,398,],[30,30,30,30,]),'reg_with_predec':([0,16,134,398,],[81,81,81,81,]),'pushpopmultiple':([0,16,134,398,],[55,55,55,55,]),'asr_asl_0':([1008,1036,],[1023,1055,]),'dspmult':([0,16,134,398,],[5,5,5,5,]),'dspshift':([0,16,134,398,],[31,31,31,31,]),'b3_op':([1013,],[1026,]),'iu_or_nothing':([548,549,550,551,],[673,675,676,677,]),'ccstat':([0,16,134,398,],[6,6,6,6,]),'vector_mac':([0,16,134,398,],[7,7,7,7,]),'xpmod':([287,301,796,829,873,874,892,899,],[429,462,875,900,927,928,943,945,]),'xpmod1':([304,],[465,]),'parallel_instructions':([0,16,],[34,34,]),'got_or_expr':([605,],[729,]),'dspalu':([0,16,134,398,],[58,58,58,58,]),'cache':([0,16,134,398,],[10,10,10,10,]),'asm_1':([0,16,134,398,],[36,36,247,541,]),'loophardware':([0,16,134,398,],[95,95,95,95,]),'byteop_mod':([1014,],[1027,]),'cc_op':([14,41,56,],[107,140,157,]),'other':([0,16,134,398,],[83,83,83,83,]),'multiply_halfregs':([8,37,88,131,161,392,393,394,458,781,821,],[102,136,195,244,302,195,102,136,102,866,891,]),'linkage':([0,16,134,398,],[60,60,60,60,]),'expadj':([0,16,134,398,],[12,12,12,12,]),'w32_or_nothing':([135,231,],[248,373,]),'empty':([49,50,77,135,148,231,244,259,287,292,301,302,304,324,428,453,469,492,522,524,525,527,548,549,550,551,566,580,582,584,585,586,609,671,697,709,738,796,829,865,866,873,874,886,891,892,899,962,975,990,991,992,1008,1038,1078,1079,],[151,151,151,250,267,250,151,267,431,151,431,151,466,267,571,592,267,151,267,656,659,656,674,674,674,674,267,571,571,712,659,592,267,656,592,811,571,431,431,592,151,431,431,592,151,431,431,987,987,1010,659,659,811,811,987,987,]),'expr_1':([17,38,46,51,54,68,78,88,91,94,96,98,112,113,116,131,158,159,160,161,162,163,170,171,189,193,203,218,219,220,221,222,223,224,225,226,227,243,261,286,299,308,321,339,340,342,352,370,374,377,379,380,403,404,405,409,422,439,442,448,455,477,480,483,487,495,498,506,515,565,605,627,678,679,688,693,703,718,728,736,806,852,872,889,947,952,963,968,970,971,974,981,1044,1045,],[120,120,120,120,120,120,120,120,120,120,120,120,215,216,217,120,120,120,120,120,120,120,120,215,217,120,215,359,360,361,362,363,364,365,366,367,368,215,120,217,215,216,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,215,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'REG_A':([0,16,25,37,88,127,131,134,139,161,188,189,192,194,197,241,243,299,333,345,393,398,400,401,402,450,458,504,507,623,625,634,662,663,750,752,755,757,758,760,840,859,885,967,],[28,28,125,135,187,231,234,28,251,293,343,344,346,348,349,388,391,391,493,505,537,28,543,544,545,587,596,632,632,234,751,759,773,774,493,493,839,632,841,843,907,920,937,992,]),'return':([0,16,134,398,],[15,15,15,15,]),'statement':([0,16,],[65,110,]),'min_max':([161,],[295,]),'comp':([0,16,134,398,],[42,42,42,42,]),'symbol':([17,38,46,51,54,68,78,88,91,94,96,98,112,113,116,131,158,159,160,161,162,163,170,171,189,193,203,218,219,220,221,222,223,224,225,226,227,243,261,286,299,308,321,339,340,342,352,370,374,377,379,380,403,404,405,409,422,439,442,448,455,477,480,483,487,495,498,506,515,565,605,627,678,679,688,693,703,718,728,736,806,852,872,889,947,952,963,968,970,971,974,981,1044,1045,],[117,117,117,117,117,117,117,117,117,117,204,204,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,731,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'got':([605,],[730,]),'asr_asl':([664,880,906,],[775,933,948,]),'op_bar_op':([291,935,],[445,965,]),'a_assign':([0,16,88,134,243,299,333,398,504,507,750,752,757,],[88,88,193,88,392,392,392,88,633,637,392,392,840,]),'post_op':([148,259,324,469,522,566,609,],[264,411,482,607,652,695,737,]),'any_gotrel':([825,],[895,]),'translation':([0,],[16,]),'a_plusassign':([0,16,134,243,299,333,398,750,752,],[8,8,8,393,458,8,8,8,8,]),'nop':([0,16,134,398,],[19,19,19,19,]),'bitlogic':([0,16,134,398,],[20,20,20,20,]),'asm':([0,16,],[45,45,]),'c_align':([161,],[309,]),'eterm':([17,38,46,51,54,68,78,88,91,94,96,98,112,113,116,131,158,159,160,161,162,163,170,171,189,193,203,218,219,220,221,222,223,224,225,226,227,243,261,286,299,308,321,339,340,342,352,370,374,377,379,380,403,404,405,409,422,439,442,448,455,477,480,483,487,495,498,506,515,565,605,627,678,679,688,693,703,718,728,736,806,852,872,889,947,952,963,968,970,971,974,981,1044,1045,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'amod1':([525,585,991,992,],[657,714,1011,1012,]),'vmod':([453,586,697,865,886,],[590,715,797,924,938,]),'loadstore':([0,16,134,398,],[23,23,23,23,]),'plus_minus':([148,236,239,259,291,324,469,566,609,936,],[261,378,384,409,447,480,605,693,736,966,]),'expr':([17,38,46,51,54,68,78,88,91,94,96,98,131,158,159,160,161,162,163,170,193,261,321,339,340,342,352,370,374,377,379,380,403,404,405,409,422,439,442,448,477,480,483,487,495,498,506,515,565,605,627,678,679,688,693,703,718,728,736,806,852,872,889,947,952,963,968,970,971,974,981,1044,1045,],[114,137,145,154,156,172,180,196,200,202,205,207,245,274,277,278,304,315,317,325,347,413,476,499,500,502,514,519,521,524,526,527,547,549,551,554,563,580,582,586,614,616,618,620,626,629,636,647,692,732,754,784,785,792,794,803,816,823,828,881,917,926,941,972,975,988,993,995,996,999,1002,1065,1066,]),'reg_with_postinc':([24,43,63,69,763,982,],[124,143,168,174,851,1003,]),'vsmod':([428,580,582,738,],[569,706,707,830,]),'a_minusassign':([0,16,134,243,299,333,398,750,752,],[37,37,37,394,394,394,37,394,394,]),'a_full_macfunc':([0,16,134,299,398,849,],[49,49,49,459,49,914,]),'assign_full_macfunc':([0,16,134,398,],[50,50,50,50,]),'deposit':([0,16,134,398,],[97,97,97,97,]),'pltpc':([96,98,],[206,208,]),'searchmod':([953,],[977,]),'a_macfunc':([0,16,134,243,299,333,398,750,752,],[75,75,75,395,460,75,75,395,460,]),'multiply_regs':([161,509,510,511,762,],[292,639,641,642,848,]),'amod2':([990,],[1009,]),'aligndir':([962,975,1078,1079,],[985,1000,1089,1090,]),'idle':([0,16,134,398,],[73,73,73,73,]),'alu2':([0,16,134,398,],[27,27,27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation","S'",1,None,None,None),
  ('translation -> statement','translation',1,'p_translation1','bfinparse.py',22),
  ('translation -> translation statement','translation',2,'p_translation2','bfinparse.py',28),
  ('statement -> asm','statement',1,'p_statement','bfinparse.py',35),
  ('asm -> asm_1 SEMICOLON','asm',2,'p_asm','bfinparse.py',42),
  ('asm -> parallel_instructions SEMICOLON','asm',2,'p_asm','bfinparse.py',44),
  ('asm -> error','asm',1,'p_asm','bfinparse.py',46),
  ('asm_1 -> dspalu','asm_1',1,'p_asm_1','bfinparse.py',55),
  ('asm_1 -> dspmult','asm_1',1,'p_asm_1','bfinparse.py',57),
  ('asm_1 -> dspshift','asm_1',1,'p_asm_1','bfinparse.py',59),
  ('asm_1 -> jump','asm_1',1,'p_asm_1','bfinparse.py',61),
  ('asm_1 -> nop','asm_1',1,'p_asm_1','bfinparse.py',63),
  ('asm_1 -> idle','asm_1',1,'p_asm_1','bfinparse.py',65),
  ('asm_1 -> loadstore','asm_1',1,'p_asm_1','bfinparse.py',67),
  ('asm_1 -> other','asm_1',1,'p_asm_1','bfinparse.py',69),
  ('parallel_instructions -> asm_1 DOUBLE_BAR asm_1 DOUBLE_BAR asm_1','parallel_instructions',5,'p_parallel_instructions','bfinparse.py',76),
  ('parallel_instructions -> asm_1 DOUBLE_BAR asm_1','parallel_instructions',3,'p_parallel_instructions','bfinparse.py',78),
  ('vector_mac -> assign_macfunc opt_mode COMMA assign_macfunc opt_mode','vector_mac',5,'p_vector_mac','bfinparse.py',86),
  ('vector_mac -> assign_macfunc opt_mode','vector_mac',2,'p_vector_mac','bfinparse.py',88),
  ('dspalu -> comp','dspalu',1,'p_dspalu','bfinparse.py',95),
  ('dspalu -> loophardware','dspalu',1,'p_dspalu','bfinparse.py',97),
  ('dspalu -> vector_mac','dspalu',1,'p_dspalu','bfinparse.py',99),
  ('dspalu -> expadj','dspalu',1,'p_dspalu','bfinparse.py',101),
  ('dspalu -> deposit','dspalu',1,'p_dspalu','bfinparse.py',103),
  ('dspalu -> bitlogic','dspalu',1,'p_dspalu','bfinparse.py',105),
  ('dspalu -> alu2','dspalu',1,'p_dspalu','bfinparse.py',107),
  ('dspalu -> REG ASSIGN LPAREN a_plusassign REG_A RPAREN','dspalu',6,'p_dspalu','bfinparse.py',109),
  ('dspalu -> HALF_REG ASSIGN LPAREN a_plusassign REG_A RPAREN','dspalu',6,'p_dspalu','bfinparse.py',112),
  ('dspalu -> A_ZERO_DOT_H ASSIGN HALF_REG','dspalu',3,'p_dspalu','bfinparse.py',115),
  ('dspalu -> A_ONE_DOT_H ASSIGN HALF_REG','dspalu',3,'p_dspalu','bfinparse.py',117),
  ('dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16P LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir','dspalu',17,'p_dspalu','bfinparse.py',119),
  ('dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEOP16M LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir','dspalu',17,'p_dspalu','bfinparse.py',123),
  ('dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN BYTEUNPACK REG COLON expr aligndir','dspalu',11,'p_dspalu','bfinparse.py',127),
  ('dspalu -> LPAREN REG COMMA REG RPAREN ASSIGN SEARCH REG LPAREN searchmod RPAREN','dspalu',11,'p_dspalu','bfinparse.py',130),
  ('dspalu -> REG ASSIGN A_ONE_DOT_L PLUS A_ONE_DOT_H COMMA REG ASSIGN A_ZERO_DOT_L PLUS A_ZERO_DOT_H','dspalu',11,'p_dspalu','bfinparse.py',133),
  ('dspalu -> REG ASSIGN REG_A PLUS REG_A COMMA REG ASSIGN REG_A MINUS REG_A amod1','dspalu',12,'p_dspalu','bfinparse.py',138),
  ('dspalu -> REG ASSIGN REG plus_minus REG COMMA REG ASSIGN REG plus_minus REG amod1','dspalu',12,'p_dspalu','bfinparse.py',142),
  ('dspalu -> REG ASSIGN REG op_bar_op REG COMMA REG ASSIGN REG op_bar_op REG amod2','dspalu',12,'p_dspalu','bfinparse.py',144),
  ('dspalu -> REG ASSIGN ABS REG vmod','dspalu',5,'p_dspalu','bfinparse.py',148),
  ('dspalu -> a_assign ABS REG_A','dspalu',3,'p_dspalu','bfinparse.py',152),
  ('dspalu -> A_ZERO_DOT_L ASSIGN HALF_REG','dspalu',3,'p_dspalu','bfinparse.py',154),
  ('dspalu -> A_ONE_DOT_L ASSIGN HALF_REG','dspalu',3,'p_dspalu','bfinparse.py',157),
  ('dspalu -> REG ASSIGN c_align LPAREN REG COMMA REG RPAREN','dspalu',8,'p_dspalu','bfinparse.py',161),
  ('dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN byteop_mod','dspalu',13,'p_dspalu','bfinparse.py',165),
  ('dspalu -> REG ASSIGN BYTEOP1P LPAREN REG COLON expr COMMA REG COLON expr RPAREN','dspalu',12,'p_dspalu','bfinparse.py',168),
  ('dspalu -> REG ASSIGN BYTEOP2P LPAREN REG COLON expr COMMA REG COLON expr RPAREN rnd_op','dspalu',13,'p_dspalu','bfinparse.py',172),
  ('dspalu -> REG ASSIGN BYTEOP3P LPAREN REG COLON expr COMMA REG COLON expr RPAREN b3_op','dspalu',13,'p_dspalu','bfinparse.py',176),
  ('dspalu -> REG ASSIGN BYTEPACK LPAREN REG COMMA REG RPAREN','dspalu',8,'p_dspalu','bfinparse.py',180),
  ('dspalu -> HALF_REG ASSIGN HALF_REG ASSIGN SIGN LPAREN HALF_REG RPAREN STAR HALF_REG PLUS SIGN LPAREN HALF_REG RPAREN STAR HALF_REG','dspalu',17,'p_dspalu','bfinparse.py',184),
  ('dspalu -> REG ASSIGN REG plus_minus REG amod1','dspalu',6,'p_dspalu','bfinparse.py',187),
  ('dspalu -> REG ASSIGN min_max LPAREN REG COMMA REG RPAREN vmod','dspalu',9,'p_dspalu','bfinparse.py',191),
  ('dspalu -> a_assign MINUS REG_A','dspalu',3,'p_dspalu','bfinparse.py',195),
  ('dspalu -> HALF_REG ASSIGN HALF_REG plus_minus HALF_REG amod1','dspalu',6,'p_dspalu','bfinparse.py',197),
  ('dspalu -> a_assign a_assign expr','dspalu',3,'p_dspalu','bfinparse.py',199),
  ('dspalu -> a_assign REG_A LPAREN S RPAREN','dspalu',5,'p_dspalu','bfinparse.py',200),
  ('dspalu -> HALF_REG ASSIGN REG LPAREN RND RPAREN','dspalu',6,'p_dspalu','bfinparse.py',204),
  ('dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND12 RPAREN','dspalu',8,'p_dspalu','bfinparse.py',208),
  ('dspalu -> HALF_REG ASSIGN REG plus_minus REG LPAREN RND20 RPAREN','dspalu',8,'p_dspalu','bfinparse.py',212),
  ('dspalu -> a_assign REG_A','dspalu',2,'p_dspalu','bfinparse.py',216),
  ('dspalu -> a_assign REG','dspalu',2,'p_dspalu','bfinparse.py',220),
  ('dspalu -> REG ASSIGN HALF_REG xpmod','dspalu',4,'p_dspalu','bfinparse.py',224),
  ('dspalu -> HALF_REG ASSIGN expr','dspalu',3,'p_dspalu','bfinparse.py',229),
  ('dspalu -> a_assign expr','dspalu',2,'p_dspalu','bfinparse.py',232),
  ('dspalu -> REG ASSIGN expr xpmod1','dspalu',4,'p_dspalu','bfinparse.py',235),
  ('dspalu -> HALF_REG ASSIGN REG','dspalu',3,'p_dspalu','bfinparse.py',241),
  ('dspalu -> REG ASSIGN REG op_bar_op REG amod0','dspalu',6,'p_dspalu','bfinparse.py',245),
  ('dspalu -> REG ASSIGN BYTE_DREG xpmod','dspalu',4,'p_dspalu','bfinparse.py',249),
  ('dspalu -> a_assign ABS REG_A COMMA a_assign ABS REG_A','dspalu',7,'p_dspalu','bfinparse.py',253),
  ('dspalu -> a_assign MINUS REG_A COMMA a_assign MINUS REG_A','dspalu',7,'p_dspalu','bfinparse.py',257),
  ('dspalu -> a_minusassign REG_A w32_or_nothing','dspalu',3,'p_dspalu','bfinparse.py',261),
  ('dspalu -> REG _MINUS_ASSIGN expr','dspalu',3,'p_dspalu','bfinparse.py',265),
  ('dspalu -> REG _PLUS_ASSIGN REG LPAREN BREV RPAREN','dspalu',6,'p_dspalu','bfinparse.py',269),
  ('dspalu -> REG _MINUS_ASSIGN REG','dspalu',3,'p_dspalu','bfinparse.py',273),
  ('dspalu -> REG_A _PLUS_ASSIGN REG_A w32_or_nothing','dspalu',4,'p_dspalu','bfinparse.py',277),
  ('dspalu -> REG _PLUS_ASSIGN REG','dspalu',3,'p_dspalu','bfinparse.py',281),
  ('dspalu -> REG _PLUS_ASSIGN expr','dspalu',3,'p_dspalu','bfinparse.py',285),
  ('dspalu -> REG _STAR_ASSIGN REG','dspalu',3,'p_dspalu','bfinparse.py',290),
  ('dspalu -> SAA LPAREN REG COLON expr COMMA REG COLON expr RPAREN aligndir','dspalu',11,'p_dspalu','bfinparse.py',294),
  ('dspalu -> a_assign REG_A LPAREN S RPAREN COMMA a_assign REG_A LPAREN S RPAREN','dspalu',11,'p_dspalu','bfinparse.py',298),
  ('dspalu -> REG ASSIGN LPAREN REG PLUS REG RPAREN LESS_LESS expr','dspalu',9,'p_dspalu','bfinparse.py',302),
  ('comp -> REG ASSIGN REG BAR REG','comp',5,'p_comp','bfinparse.py',308),
  ('comp -> REG ASSIGN REG CARET REG','comp',5,'p_comp','bfinparse.py',311),
  ('comp -> REG ASSIGN REG PLUS LPAREN REG LESS_LESS expr RPAREN','comp',9,'p_comp','bfinparse.py',314),
  ('comp -> CCREG ASSIGN REG_A _ASSIGN_ASSIGN REG_A','comp',5,'p_comp','bfinparse.py',318),
  ('comp -> CCREG ASSIGN REG_A LESS_THAN REG_A','comp',5,'p_comp','bfinparse.py',321),
  ('comp -> CCREG ASSIGN REG LESS_THAN REG iu_or_nothing','comp',6,'p_comp','bfinparse.py',324),
  ('comp -> CCREG ASSIGN REG LESS_THAN expr iu_or_nothing','comp',6,'p_comp','bfinparse.py',327),
  ('comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN REG','comp',5,'p_comp','bfinparse.py',330),
  ('comp -> CCREG ASSIGN REG _ASSIGN_ASSIGN expr','comp',5,'p_comp','bfinparse.py',333),
  ('comp -> CCREG ASSIGN REG_A _LESS_THAN_ASSIGN REG_A','comp',5,'p_comp','bfinparse.py',336),
  ('comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN REG iu_or_nothing','comp',6,'p_comp','bfinparse.py',339),
  ('comp -> CCREG ASSIGN REG _LESS_THAN_ASSIGN expr iu_or_nothing','comp',6,'p_comp','bfinparse.py',342),
  ('comp -> REG ASSIGN REG AMPERSAND REG','comp',5,'p_comp','bfinparse.py',346),
  ('comp -> ccstat','comp',1,'p_comp','bfinparse.py',350),
  ('comp -> REG ASSIGN REG','comp',3,'p_comp','bfinparse.py',353),
  ('comp -> CCREG ASSIGN REG','comp',3,'p_comp','bfinparse.py',357),
  ('comp -> REG ASSIGN CCREG','comp',3,'p_comp','bfinparse.py',361),
  ('comp -> CCREG _ASSIGN_BANG CCREG','comp',3,'p_comp','bfinparse.py',365),
  ('dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode','dspmult',4,'p_dspmult','bfinparse.py',371),
  ('dspmult -> REG ASSIGN multiply_regs opt_mode','dspmult',4,'p_dspmult','bfinparse.py',373),
  ('dspmult -> REG ASSIGN multiply_halfregs opt_mode','dspmult',4,'p_dspmult','bfinparse.py',376),
  ('dspmult -> HALF_REG ASSIGN multiply_halfregs opt_mode COMMA HALF_REG ASSIGN multiply_halfregs opt_mode','dspmult',9,'p_dspmult','bfinparse.py',380),
  ('dspmult -> REG ASSIGN multiply_halfregs opt_mode COMMA REG ASSIGN multiply_halfregs opt_mode','dspmult',9,'p_dspmult','bfinparse.py',383),
  ('dspmult -> a_full_macfunc opt_mode','dspmult',2,'p_dspmult','bfinparse.py',386),
  ('dspmult -> assign_full_macfunc opt_mode','dspmult',2,'p_dspmult','bfinparse.py',389),
  ('dspshift -> a_assign ASHIFT REG_A BY HALF_REG','dspshift',5,'p_dspshift','bfinparse.py',396),
  ('dspshift -> HALF_REG ASSIGN ASHIFT HALF_REG BY HALF_REG smod','dspshift',7,'p_dspshift','bfinparse.py',400),
  ('dspshift -> a_assign REG_A LESS_LESS expr','dspshift',4,'p_dspshift','bfinparse.py',404),
  ('dspshift -> REG ASSIGN REG LESS_LESS expr vsmod','dspshift',6,'p_dspshift','bfinparse.py',408),
  ('dspshift -> HALF_REG ASSIGN HALF_REG LESS_LESS expr smod','dspshift',6,'p_dspshift','bfinparse.py',413),
  ('dspshift -> REG ASSIGN ASHIFT REG BY HALF_REG vsmod','dspshift',7,'p_dspshift','bfinparse.py',417),
  ('expadj -> HALF_REG ASSIGN EXPADJ LPAREN REG COMMA HALF_REG RPAREN vmod','expadj',9,'p_expadj','bfinparse.py',423),
  ('expadj -> HALF_REG ASSIGN EXPADJ LPAREN HALF_REG COMMA HALF_REG RPAREN','expadj',8,'p_expadj','bfinparse.py',425),
  ('deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN','deposit',8,'p_deposit','bfinparse.py',431),
  ('deposit -> REG ASSIGN DEPOSIT LPAREN REG COMMA REG RPAREN LPAREN X RPAREN','deposit',11,'p_deposit','bfinparse.py',435),
  ('deposit -> REG ASSIGN EXTRACT LPAREN REG COMMA HALF_REG RPAREN xpmod','deposit',9,'p_deposit','bfinparse.py',439),
  ('deposit -> a_assign REG_A _GREATER_GREATER_GREATER expr','deposit',4,'p_deposit','bfinparse.py',443),
  ('deposit -> a_assign LSHIFT REG_A BY HALF_REG','deposit',5,'p_deposit','bfinparse.py',446),
  ('deposit -> HALF_REG ASSIGN LSHIFT HALF_REG BY HALF_REG','deposit',6,'p_deposit','bfinparse.py',450),
  ('deposit -> REG ASSIGN LSHIFT REG BY HALF_REG vmod','deposit',7,'p_deposit','bfinparse.py',454),
  ('deposit -> REG ASSIGN SHIFT REG BY HALF_REG','deposit',6,'p_deposit','bfinparse.py',458),
  ('deposit -> a_assign REG_A GREATER_GREATER expr','deposit',4,'p_deposit','bfinparse.py',462),
  ('deposit -> REG ASSIGN REG GREATER_GREATER expr vmod','deposit',6,'p_deposit','bfinparse.py',466),
  ('deposit -> HALF_REG ASSIGN HALF_REG GREATER_GREATER expr','deposit',5,'p_deposit','bfinparse.py',471),
  ('deposit -> HALF_REG ASSIGN HALF_REG _GREATER_GREATER_GREATER expr smod','deposit',6,'p_deposit','bfinparse.py',474),
  ('deposit -> REG ASSIGN REG _GREATER_GREATER_GREATER expr vsmod','deposit',6,'p_deposit','bfinparse.py',479),
  ('deposit -> HALF_REG ASSIGN ONES REG','deposit',4,'p_deposit','bfinparse.py',484),
  ('deposit -> REG ASSIGN PACK LPAREN HALF_REG COMMA HALF_REG RPAREN','deposit',8,'p_deposit','bfinparse.py',488),
  ('deposit -> HALF_REG ASSIGN CCREG ASSIGN BXORSHIFT LPAREN REG_A COMMA REG RPAREN','deposit',10,'p_deposit','bfinparse.py',492),
  ('deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG RPAREN','deposit',10,'p_deposit','bfinparse.py',496),
  ('deposit -> HALF_REG ASSIGN CCREG ASSIGN BXOR LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN','deposit',12,'p_deposit','bfinparse.py',500),
  ('deposit -> a_assign ROT REG_A BY HALF_REG','deposit',5,'p_deposit','bfinparse.py',504),
  ('deposit -> REG ASSIGN ROT REG BY HALF_REG','deposit',6,'p_deposit','bfinparse.py',508),
  ('deposit -> a_assign ROT REG_A BY expr','deposit',5,'p_deposit','bfinparse.py',512),
  ('deposit -> REG ASSIGN ROT REG BY expr','deposit',6,'p_deposit','bfinparse.py',516),
  ('deposit -> HALF_REG ASSIGN SIGNBITS REG_A','deposit',4,'p_deposit','bfinparse.py',520),
  ('deposit -> HALF_REG ASSIGN SIGNBITS REG','deposit',4,'p_deposit','bfinparse.py',524),
  ('deposit -> HALF_REG ASSIGN SIGNBITS HALF_REG','deposit',4,'p_deposit','bfinparse.py',528),
  ('deposit -> HALF_REG ASSIGN VIT_MAX LPAREN REG RPAREN asr_asl','deposit',7,'p_deposit','bfinparse.py',530),
  ('deposit -> REG ASSIGN VIT_MAX LPAREN REG COMMA REG RPAREN asr_asl','deposit',9,'p_deposit','bfinparse.py',534),
  ('deposit -> BITMUX LPAREN REG COMMA REG COMMA REG_A RPAREN asr_asl','deposit',9,'p_deposit','bfinparse.py',538),
  ('deposit -> a_assign BXORSHIFT LPAREN REG_A COMMA REG_A COMMA CCREG RPAREN','deposit',9,'p_deposit','bfinparse.py',540),
  ('bitlogic -> BITCLR LPAREN REG COMMA expr RPAREN','bitlogic',6,'p_bitlogic','bfinparse.py',546),
  ('bitlogic -> BITSET LPAREN REG COMMA expr RPAREN','bitlogic',6,'p_bitlogic','bfinparse.py',547),
  ('bitlogic -> BITTGL LPAREN REG COMMA expr RPAREN','bitlogic',6,'p_bitlogic','bfinparse.py',548),
  ('jump -> CCREG _ASSIGN_BANG BITTST LPAREN REG COMMA expr RPAREN','jump',8,'p_jump','bfinparse.py',555),
  ('jump -> return','jump',1,'p_jump','bfinparse.py',557),
  ('jump -> CCREG ASSIGN BITTST LPAREN REG COMMA expr RPAREN','jump',8,'p_jump','bfinparse.py',561),
  ('jump -> IF BANG CCREG REG ASSIGN REG','jump',6,'p_jump','bfinparse.py',565),
  ('jump -> IF CCREG REG ASSIGN REG','jump',5,'p_jump','bfinparse.py',569),
  ('jump -> IF BANG CCREG JUMP expr','jump',5,'p_jump','bfinparse.py',573),
  ('jump -> IF BANG CCREG JUMP expr LPAREN BP RPAREN','jump',8,'p_jump','bfinparse.py',577),
  ('jump -> IF CCREG JUMP expr','jump',4,'p_jump','bfinparse.py',581),
  ('jump -> IF CCREG JUMP expr LPAREN BP RPAREN','jump',7,'p_jump','bfinparse.py',585),
  ('jump -> JUMP LPAREN REG RPAREN','jump',4,'p_jump','bfinparse.py',588),
  ('jump -> CALL LPAREN REG RPAREN','jump',4,'p_jump','bfinparse.py',592),
  ('jump -> CALL LPAREN PC PLUS REG RPAREN','jump',6,'p_jump','bfinparse.py',596),
  ('jump -> JUMP LPAREN PC PLUS REG RPAREN','jump',6,'p_jump','bfinparse.py',600),
  ('jump -> RAISE expr','jump',2,'p_jump','bfinparse.py',604),
  ('jump -> EXCPT expr','jump',2,'p_jump','bfinparse.py',608),
  ('jump -> TESTSET LPAREN REG RPAREN','jump',4,'p_jump','bfinparse.py',611),
  ('jump -> JUMP expr','jump',2,'p_jump','bfinparse.py',615),
  ('jump -> JUMP_DOT_S expr','jump',2,'p_jump','bfinparse.py',619),
  ('jump -> JUMP_DOT_L expr','jump',2,'p_jump','bfinparse.py',623),
  ('jump -> JUMP_DOT_L pltpc','jump',2,'p_jump','bfinparse.py',627),
  ('jump -> CALL expr','jump',2,'p_jump','bfinparse.py',631),
  ('jump -> CALL pltpc','jump',2,'p_jump','bfinparse.py',634),
  ('return -> RTS','return',1,'p_return','bfinparse.py',641),
  ('return -> RTI','return',1,'p_return','bfinparse.py',644),
  ('return -> RTX','return',1,'p_return','bfinparse.py',647),
  ('return -> RTN','return',1,'p_return','bfinparse.py',650),
  ('return -> RTE','return',1,'p_return','bfinparse.py',653),
  ('nop -> NOP','nop',1,'p_nop','bfinparse.py',659),
  ('nop -> MNOP','nop',1,'p_nop','bfinparse.py',661),
  ('idle -> IDLE','idle',1,'p_idle','bfinparse.py',667),
  ('alu2 -> DIVQ LPAREN REG COMMA REG RPAREN','alu2',6,'p_alu2','bfinparse.py',673),
  ('alu2 -> DIVS LPAREN REG COMMA REG RPAREN','alu2',6,'p_alu2','bfinparse.py',676),
  ('alu2 -> REG ASSIGN MINUS REG vsmod','alu2',5,'p_alu2','bfinparse.py',679),
  ('alu2 -> REG ASSIGN TILDA REG','alu2',4,'p_alu2','bfinparse.py',682),
  ('alu2 -> REG _GREATER_GREATER_ASSIGN REG','alu2',3,'p_alu2','bfinparse.py',686),
  ('alu2 -> REG _GREATER_GREATER_ASSIGN expr','alu2',3,'p_alu2','bfinparse.py',690),
  ('alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN REG','alu2',3,'p_alu2','bfinparse.py',694),
  ('alu2 -> REG _LESS_LESS_ASSIGN REG','alu2',3,'p_alu2','bfinparse.py',698),
  ('alu2 -> REG _LESS_LESS_ASSIGN expr','alu2',3,'p_alu2','bfinparse.py',702),
  ('alu2 -> REG _GREATER_GREATER_GREATER_THAN_ASSIGN expr','alu2',3,'p_alu2','bfinparse.py',707),
  ('cache -> FLUSH LBRACK REG RBRACK','cache',4,'p_cache','bfinparse.py',713),
  ('cache -> FLUSH reg_with_postinc','cache',2,'p_cache','bfinparse.py',716),
  ('cache -> FLUSHINV LBRACK REG RBRACK','cache',4,'p_cache','bfinparse.py',720),
  ('cache -> FLUSHINV reg_with_postinc','cache',2,'p_cache','bfinparse.py',724),
  ('cache -> IFLUSH LBRACK REG RBRACK','cache',4,'p_cache','bfinparse.py',726),
  ('cache -> IFLUSH reg_with_postinc','cache',2,'p_cache','bfinparse.py',730),
  ('cache -> PREFETCH LBRACK REG RBRACK','cache',4,'p_cache','bfinparse.py',734),
  ('cache -> PREFETCH reg_with_postinc','cache',2,'p_cache','bfinparse.py',738),
  ('loadstore -> pushpopmultiple','loadstore',1,'p_loadstore','bfinparse.py',744),
  ('loadstore -> B LBRACK REG post_op RBRACK ASSIGN REG','loadstore',7,'p_loadstore','bfinparse.py',746),
  ('loadstore -> B LBRACK REG plus_minus expr RBRACK ASSIGN REG','loadstore',8,'p_loadstore','bfinparse.py',748),
  ('loadstore -> W LBRACK REG plus_minus expr RBRACK ASSIGN REG','loadstore',8,'p_loadstore','bfinparse.py',750),
  ('loadstore -> W LBRACK REG post_op RBRACK ASSIGN REG','loadstore',7,'p_loadstore','bfinparse.py',752),
  ('loadstore -> W LBRACK REG post_op RBRACK ASSIGN HALF_REG','loadstore',7,'p_loadstore','bfinparse.py',755),
  ('loadstore -> LBRACK REG plus_minus expr RBRACK ASSIGN REG','loadstore',7,'p_loadstore','bfinparse.py',757),
  ('loadstore -> REG ASSIGN W LBRACK REG plus_minus expr RBRACK xpmod','loadstore',9,'p_loadstore','bfinparse.py',759),
  ('loadstore -> HALF_REG ASSIGN W LBRACK REG post_op RBRACK','loadstore',7,'p_loadstore','bfinparse.py',763),
  ('loadstore -> REG ASSIGN W LBRACK REG post_op RBRACK xpmod','loadstore',8,'p_loadstore','bfinparse.py',768),
  ('loadstore -> REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK xpmod','loadstore',9,'p_loadstore','bfinparse.py',771),
  ('loadstore -> HALF_REG ASSIGN W LBRACK REG _PLUS_PLUS REG RBRACK','loadstore',8,'p_loadstore','bfinparse.py',774),
  ('loadstore -> LBRACK REG post_op RBRACK ASSIGN REG','loadstore',6,'p_loadstore','bfinparse.py',777),
  ('loadstore -> LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN REG','loadstore',7,'p_loadstore','bfinparse.py',781),
  ('loadstore -> W LBRACK REG _PLUS_PLUS REG RBRACK ASSIGN HALF_REG','loadstore',8,'p_loadstore','bfinparse.py',785),
  ('loadstore -> REG ASSIGN B LBRACK REG plus_minus expr RBRACK xpmod','loadstore',9,'p_loadstore','bfinparse.py',789),
  ('loadstore -> REG ASSIGN B LBRACK REG post_op RBRACK xpmod','loadstore',8,'p_loadstore','bfinparse.py',793),
  ('loadstore -> REG ASSIGN LBRACK REG _PLUS_PLUS REG RBRACK','loadstore',7,'p_loadstore','bfinparse.py',796),
  ('loadstore -> REG ASSIGN LBRACK REG plus_minus got_or_expr RBRACK','loadstore',7,'p_loadstore','bfinparse.py',800),
  ('loadstore -> REG ASSIGN LBRACK REG post_op RBRACK','loadstore',6,'p_loadstore','bfinparse.py',804),
  ('pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr COMMA REG COLON expr RPAREN','pushpopmultiple',11,'p_pushpopmultiple','bfinparse.py',810),
  ('pushpopmultiple -> reg_with_predec ASSIGN LPAREN REG COLON expr RPAREN','pushpopmultiple',7,'p_pushpopmultiple','bfinparse.py',814),
  ('pushpopmultiple -> LPAREN REG COLON expr COMMA REG COLON expr RPAREN ASSIGN reg_with_postinc','pushpopmultiple',11,'p_pushpopmultiple','bfinparse.py',818),
  ('pushpopmultiple -> LPAREN REG COLON expr RPAREN ASSIGN reg_with_postinc','pushpopmultiple',7,'p_pushpopmultiple','bfinparse.py',822),
  ('pushpopmultiple -> reg_with_predec ASSIGN REG','pushpopmultiple',3,'p_pushpopmultiple','bfinparse.py',826),
  ('linkage -> LINK expr','linkage',2,'p_linkage','bfinparse.py',832),
  ('linkage -> UNLINK','linkage',1,'p_linkage','bfinparse.py',834),
  ('loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG','loophardware',7,'p_loophardware','bfinparse.py',842),
  ('loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG','loophardware',9,'p_loophardware','bfinparse.py',845),
  ('loophardware -> LSETUP LPAREN expr COMMA expr RPAREN REG ASSIGN REG GREATER_GREATER expr','loophardware',11,'p_loophardware','bfinparse.py',849),
  ('loophardware -> LOOP expr REG','loophardware',3,'p_loophardware','bfinparse.py',850),
  ('loophardware -> LOOP expr REG ASSIGN REG','loophardware',5,'p_loophardware','bfinparse.py',852),
  ('loophardware -> LOOP expr REG ASSIGN REG GREATER_GREATER expr','loophardware',7,'p_loophardware','bfinparse.py',855),
  ('loophardware -> LOOP_BEGIN NUMBER','loophardware',2,'p_loophardware','bfinparse.py',856),
  ('loophardware -> LOOP_BEGIN expr','loophardware',2,'p_loophardware','bfinparse.py',858),
  ('loophardware -> LOOP_END NUMBER','loophardware',2,'p_loophardware','bfinparse.py',859),
  ('loophardware -> LOOP_END expr','loophardware',2,'p_loophardware','bfinparse.py',861),
  ('loophardware -> LOOP REG ASSIGN NUMBER','loophardware',4,'p_loophardware','bfinparse.py',863),
  ('loophardware -> LOOP_END','loophardware',1,'p_loophardware','bfinparse.py',865),
  ('other -> ABORT','other',1,'p_other','bfinparse.py',871),
  ('other -> linkage','other',1,'p_other','bfinparse.py',873),
  ('other -> cache','other',1,'p_other','bfinparse.py',875),
  ('other -> CSYNC','other',1,'p_other','bfinparse.py',877),
  ('other -> SSYNC','other',1,'p_other','bfinparse.py',880),
  ('other -> EMUEXCPT','other',1,'p_other','bfinparse.py',883),
  ('other -> CLI REG','other',2,'p_other','bfinparse.py',886),
  ('other -> STI REG','other',2,'p_other','bfinparse.py',890),
  ('other -> DISALGNEXCPT','other',1,'p_other','bfinparse.py',892),
  ('other -> DBG','other',1,'p_other','bfinparse.py',894),
  ('other -> DBG REG_A','other',2,'p_other','bfinparse.py',896),
  ('other -> DBG REG','other',2,'p_other','bfinparse.py',898),
  ('other -> DBGCMPLX LPAREN REG RPAREN','other',4,'p_other','bfinparse.py',901),
  ('other -> DBGHALT','other',1,'p_other','bfinparse.py',904),
  ('other -> HLT','other',1,'p_other','bfinparse.py',907),
  ('other -> DBGA LPAREN HALF_REG COMMA expr RPAREN','other',6,'p_other','bfinparse.py',910),
  ('other -> DBGAH LPAREN REG COMMA expr RPAREN','other',6,'p_other','bfinparse.py',913),
  ('other -> DBGAL LPAREN REG COMMA expr RPAREN','other',6,'p_other','bfinparse.py',916),
  ('other -> OUTC expr','other',2,'p_other','bfinparse.py',919),
  ('other -> OUTC REG','other',2,'p_other','bfinparse.py',922),
  ('REG_A -> REG_A_DOUBLE_ZERO','REG_A',1,'p_REG_A','bfinparse.py',931),
  ('REG_A -> REG_A_DOUBLE_ONE','REG_A',1,'p_REG_A','bfinparse.py',933),
  ('opt_mode -> empty','opt_mode',1,'p_opt_mode','bfinparse.py',944),
  ('opt_mode -> LPAREN M COMMA MMOD RPAREN','opt_mode',5,'p_opt_mode','bfinparse.py',946),
  ('opt_mode -> LPAREN MMOD COMMA M RPAREN','opt_mode',5,'p_opt_mode','bfinparse.py',948),
  ('opt_mode -> LPAREN MMOD RPAREN','opt_mode',3,'p_opt_mode','bfinparse.py',950),
  ('opt_mode -> LPAREN M RPAREN','opt_mode',3,'p_opt_mode','bfinparse.py',952),
  ('asr_asl -> LPAREN ASL RPAREN','asr_asl',3,'p_asr_asl','bfinparse.py',958),
  ('asr_asl -> LPAREN ASR RPAREN','asr_asl',3,'p_asr_asl','bfinparse.py',960),
  ('sco -> empty','sco',1,'p_sco','bfinparse.py',968),
  ('sco -> S','sco',1,'p_sco','bfinparse.py',970),
  ('sco -> CO','sco',1,'p_sco','bfinparse.py',972),
  ('sco -> SCO','sco',1,'p_sco','bfinparse.py',974),
  ('asr_asl_0 -> ASL','asr_asl_0',1,'p_asr_asl_0','bfinparse.py',981),
  ('asr_asl_0 -> ASR','asr_asl_0',1,'p_asr_asl_0','bfinparse.py',983),
  ('amod0 -> empty','amod0',1,'p_amod0','bfinparse.py',991),
  ('amod0 -> LPAREN sco RPAREN','amod0',3,'p_amod0','bfinparse.py',993),
  ('amod1 -> empty','amod1',1,'p_amod1','bfinparse.py',1001),
  ('amod1 -> LPAREN NS RPAREN','amod1',3,'p_amod1','bfinparse.py',1003),
  ('amod1 -> LPAREN S RPAREN','amod1',3,'p_amod1','bfinparse.py',1005),
  ('amod2 -> empty','amod2',1,'p_amod2','bfinparse.py',1013),
  ('amod2 -> LPAREN asr_asl_0 RPAREN','amod2',3,'p_amod2','bfinparse.py',1015),
  ('amod2 -> LPAREN sco RPAREN','amod2',3,'p_amod2','bfinparse.py',1017),
  ('amod2 -> LPAREN asr_asl_0 COMMA sco RPAREN','amod2',5,'p_amod2','bfinparse.py',1019),
  ('amod2 -> LPAREN sco COMMA asr_asl_0 RPAREN','amod2',5,'p_amod2','bfinparse.py',1021),
  ('xpmod -> empty','xpmod',1,'p_xpmod','bfinparse.py',1029),
  ('xpmod -> LPAREN Z RPAREN','xpmod',3,'p_xpmod','bfinparse.py',1031),
  ('xpmod -> LPAREN X RPAREN','xpmod',3,'p_xpmod','bfinparse.py',1033),
  ('xpmod1 -> empty','xpmod1',1,'p_xpmod1','bfinparse.py',1041),
  ('xpmod1 -> LPAREN X RPAREN','xpmod1',3,'p_xpmod1','bfinparse.py',1043),
  ('xpmod1 -> LPAREN Z RPAREN','xpmod1',3,'p_xpmod1','bfinparse.py',1045),
  ('vsmod -> empty','vsmod',1,'p_vsmod','bfinparse.py',1053),
  ('vsmod -> LPAREN NS RPAREN','vsmod',3,'p_vsmod','bfinparse.py',1055),
  ('vsmod -> LPAREN S RPAREN','vsmod',3,'p_vsmod','bfinparse.py',1057),
  ('vsmod -> LPAREN V RPAREN','vsmod',3,'p_vsmod','bfinparse.py',1059),
  ('vsmod -> LPAREN V COMMA S RPAREN','vsmod',5,'p_vsmod','bfinparse.py',1061),
  ('vsmod -> LPAREN S COMMA V RPAREN','vsmod',5,'p_vsmod','bfinparse.py',1063),
  ('vmod -> empty','vmod',1,'p_vmod','bfinparse.py',1071),
  ('vmod -> LPAREN V RPAREN','vmod',3,'p_vmod','bfinparse.py',1072),
  ('smod -> empty','smod',1,'p_smod','bfinparse.py',1080),
  ('smod -> LPAREN S RPAREN','smod',3,'p_smod','bfinparse.py',1081),
  ('searchmod -> GE','searchmod',1,'p_searchmod','bfinparse.py',1088),
  ('searchmod -> GT','searchmod',1,'p_searchmod','bfinparse.py',1090),
  ('searchmod -> LE','searchmod',1,'p_searchmod','bfinparse.py',1092),
  ('searchmod -> LT','searchmod',1,'p_searchmod','bfinparse.py',1094),
  ('aligndir -> empty','aligndir',1,'p_aligndir','bfinparse.py',1102),
  ('aligndir -> LPAREN R RPAREN','aligndir',3,'p_aligndir','bfinparse.py',1103),
  ('byteop_mod -> LPAREN R RPAREN','byteop_mod',3,'p_byteop_mod','bfinparse.py',1110),
  ('byteop_mod -> LPAREN MMOD RPAREN','byteop_mod',3,'p_byteop_mod','bfinparse.py',1112),
  ('byteop_mod -> LPAREN MMOD COMMA R RPAREN','byteop_mod',5,'p_byteop_mod','bfinparse.py',1114),
  ('byteop_mod -> LPAREN R COMMA MMOD RPAREN','byteop_mod',5,'p_byteop_mod','bfinparse.py',1116),
  ('c_align -> ALIGN8','c_align',1,'p_c_align','bfinparse.py',1125),
  ('c_align -> ALIGN16','c_align',1,'p_c_align','bfinparse.py',1127),
  ('c_align -> ALIGN24','c_align',1,'p_c_align','bfinparse.py',1129),
  ('w32_or_nothing -> empty','w32_or_nothing',1,'p_w32_or_nothing','bfinparse.py',1137),
  ('w32_or_nothing -> LPAREN MMOD RPAREN','w32_or_nothing',3,'p_w32_or_nothing','bfinparse.py',1138),
  ('iu_or_nothing -> empty','iu_or_nothing',1,'p_iu_or_nothing','bfinparse.py',1146),
  ('iu_or_nothing -> LPAREN MMOD RPAREN','iu_or_nothing',3,'p_iu_or_nothing','bfinparse.py',1147),
  ('reg_with_predec -> LBRACK _MINUS_MINUS REG RBRACK','reg_with_predec',4,'p_reg_with_predec','bfinparse.py',1153),
  ('reg_with_postinc -> LBRACK REG _PLUS_PLUS RBRACK','reg_with_postinc',4,'p_reg_with_postinc','bfinparse.py',1159),
  ('min_max -> MIN','min_max',1,'p_min_max','bfinparse.py',1168),
  ('min_max -> MAX','min_max',1,'p_min_max','bfinparse.py',1170),
  ('op_bar_op -> _PLUS_BAR_PLUS','op_bar_op',1,'p_op_bar_op','bfinparse.py',1177),
  ('op_bar_op -> _PLUS_BAR_MINUS','op_bar_op',1,'p_op_bar_op','bfinparse.py',1179),
  ('op_bar_op -> _MINUS_BAR_PLUS','op_bar_op',1,'p_op_bar_op','bfinparse.py',1181),
  ('op_bar_op -> _MINUS_BAR_MINUS','op_bar_op',1,'p_op_bar_op','bfinparse.py',1183),
  ('plus_minus -> PLUS','plus_minus',1,'p_plus_minus','bfinparse.py',1190),
  ('plus_minus -> MINUS','plus_minus',1,'p_plus_minus','bfinparse.py',1192),
  ('rnd_op -> LPAREN RNDH RPAREN','rnd_op',3,'p_rnd_op','bfinparse.py',1199),
  ('rnd_op -> LPAREN TH RPAREN','rnd_op',3,'p_rnd_op','bfinparse.py',1202),
  ('rnd_op -> LPAREN RNDL RPAREN','rnd_op',3,'p_rnd_op','bfinparse.py',1205),
  ('rnd_op -> LPAREN TL RPAREN','rnd_op',3,'p_rnd_op','bfinparse.py',1208),
  ('rnd_op -> LPAREN RNDH COMMA R RPAREN','rnd_op',5,'p_rnd_op','bfinparse.py',1211),
  ('rnd_op -> LPAREN TH COMMA R RPAREN','rnd_op',5,'p_rnd_op','bfinparse.py',1213),
  ('rnd_op -> LPAREN RNDL COMMA R RPAREN','rnd_op',5,'p_rnd_op','bfinparse.py',1215),
  ('rnd_op -> LPAREN TL COMMA R RPAREN','rnd_op',5,'p_rnd_op','bfinparse.py',1218),
  ('b3_op -> LPAREN LO RPAREN','b3_op',3,'p_b3_op','bfinparse.py',1225),
  ('b3_op -> LPAREN HI RPAREN','b3_op',3,'p_b3_op','bfinparse.py',1227),
  ('b3_op -> LPAREN LO COMMA R RPAREN','b3_op',5,'p_b3_op','bfinparse.py',1229),
  ('b3_op -> LPAREN HI COMMA R RPAREN','b3_op',5,'p_b3_op','bfinparse.py',1231),
  ('post_op -> empty','post_op',1,'p_post_op','bfinparse.py',1239),
  ('post_op -> _PLUS_PLUS','post_op',1,'p_post_op','bfinparse.py',1240),
  ('post_op -> _MINUS_MINUS','post_op',1,'p_post_op','bfinparse.py',1242),
  ('a_assign -> REG_A ASSIGN','a_assign',2,'p_a_assign','bfinparse.py',1251),
  ('a_minusassign -> REG_A _MINUS_ASSIGN','a_minusassign',2,'p_a_minusassign','bfinparse.py',1258),
  ('a_plusassign -> REG_A _PLUS_ASSIGN','a_plusassign',2,'p_a_plusassign','bfinparse.py',1265),
  ('assign_macfunc -> REG ASSIGN REG_A','assign_macfunc',3,'p_assign_macfunc','bfinparse.py',1272),
  ('assign_macfunc -> a_macfunc','assign_macfunc',1,'p_assign_macfunc','bfinparse.py',1274),
  ('assign_macfunc -> REG ASSIGN LPAREN a_macfunc RPAREN','assign_macfunc',5,'p_assign_macfunc','bfinparse.py',1276),
  ('assign_macfunc -> HALF_REG ASSIGN LPAREN a_macfunc RPAREN','assign_macfunc',5,'p_assign_macfunc','bfinparse.py',1279),
  ('assign_macfunc -> HALF_REG ASSIGN REG_A','assign_macfunc',3,'p_assign_macfunc','bfinparse.py',1282),
  ('assign_full_macfunc -> REG ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN','assign_full_macfunc',5,'p_assign_full_macfunc','bfinparse.py',1289),
  ('assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN A_ONE_COLON_ZERO RPAREN','assign_full_macfunc',9,'p_assign_full_macfunc','bfinparse.py',1292),
  ('assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN multiply_regs','assign_full_macfunc',7,'p_assign_full_macfunc','bfinparse.py',1295),
  ('assign_full_macfunc -> REG ASSIGN LPAREN a_full_macfunc RPAREN','assign_full_macfunc',5,'p_assign_full_macfunc','bfinparse.py',1298),
  ('assign_full_macfunc -> LPAREN REG COLON REG RPAREN ASSIGN LPAREN a_full_macfunc RPAREN','assign_full_macfunc',9,'p_assign_full_macfunc','bfinparse.py',1301),
  ('a_macfunc -> a_assign multiply_halfregs','a_macfunc',2,'p_a_macfunc','bfinparse.py',1308),
  ('a_macfunc -> a_plusassign multiply_halfregs','a_macfunc',2,'p_a_macfunc','bfinparse.py',1310),
  ('a_macfunc -> a_minusassign multiply_halfregs','a_macfunc',2,'p_a_macfunc','bfinparse.py',1312),
  ('a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN ASSIGN multiply_regs','a_full_macfunc',5,'p_a_full_macfunc','bfinparse.py',1319),
  ('a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _PLUS_ASSIGN multiply_regs','a_full_macfunc',5,'p_a_full_macfunc','bfinparse.py',1321),
  ('a_full_macfunc -> LPAREN A_ONE_COLON_ZERO RPAREN _MINUS_ASSIGN multiply_regs','a_full_macfunc',5,'p_a_full_macfunc','bfinparse.py',1323),
  ('multiply_regs -> REG STAR REG','multiply_regs',3,'p_multiply_regs','bfinparse.py',1330),
  ('multiply_halfregs -> HALF_REG STAR HALF_REG','multiply_halfregs',3,'p_multiply_halfregs','bfinparse.py',1340),
  ('cc_op -> ASSIGN','cc_op',1,'p_cc_op','bfinparse.py',1348),
  ('cc_op -> _BAR_ASSIGN','cc_op',1,'p_cc_op','bfinparse.py',1350),
  ('cc_op -> _AMPERSAND_ASSIGN','cc_op',1,'p_cc_op','bfinparse.py',1352),
  ('cc_op -> _CARET_ASSIGN','cc_op',1,'p_cc_op','bfinparse.py',1354),
  ('ccstat -> CCREG cc_op STATUS_REG','ccstat',3,'p_ccstat','bfinparse.py',1361),
  ('ccstat -> CCREG cc_op V','ccstat',3,'p_ccstat','bfinparse.py',1363),
  ('ccstat -> STATUS_REG cc_op CCREG','ccstat',3,'p_ccstat','bfinparse.py',1365),
  ('ccstat -> V cc_op CCREG','ccstat',3,'p_ccstat','bfinparse.py',1367),
  ('symbol -> SYMBOL','symbol',1,'p_symbol','bfinparse.py',1375),
  ('any_gotrel -> GOT','any_gotrel',1,'p_any_gotrel','bfinparse.py',1382),
  ('any_gotrel -> GOT17M4','any_gotrel',1,'p_any_gotrel','bfinparse.py',1384),
  ('any_gotrel -> FUNCDESC_GOT17M4','any_gotrel',1,'p_any_gotrel','bfinparse.py',1386),
  ('got -> symbol AT any_gotrel','got',3,'p_got','bfinparse.py',1392),
  ('got_or_expr -> got','got_or_expr',1,'p_got_or_expr','bfinparse.py',1398),
  ('got_or_expr -> expr','got_or_expr',1,'p_got_or_expr','bfinparse.py',1400),
  ('pltpc -> symbol AT PLTPC','pltpc',3,'p_pltpc','bfinparse.py',1407),
  ('eterm -> NUMBER','eterm',1,'p_eterm','bfinparse.py',1413),
  ('eterm -> symbol','eterm',1,'p_eterm','bfinparse.py',1415),
  ('eterm -> LPAREN expr_1 RPAREN','eterm',3,'p_eterm','bfinparse.py',1417),
  ('eterm -> TILDA expr_1','eterm',2,'p_eterm','bfinparse.py',1419),
  ('eterm -> MINUS expr_1','eterm',2,'p_eterm','bfinparse.py',1421),
  ('expr -> expr_1','expr',1,'p_expr','bfinparse.py',1427),
  ('expr_1 -> expr_1 STAR expr_1','expr_1',3,'p_expr_1','bfinparse.py',1433),
  ('expr_1 -> expr_1 SLASH expr_1','expr_1',3,'p_expr_1','bfinparse.py',1435),
  ('expr_1 -> expr_1 PERCENT expr_1','expr_1',3,'p_expr_1','bfinparse.py',1437),
  ('expr_1 -> expr_1 PLUS expr_1','expr_1',3,'p_expr_1','bfinparse.py',1439),
  ('expr_1 -> expr_1 MINUS expr_1','expr_1',3,'p_expr_1','bfinparse.py',1441),
  ('expr_1 -> expr_1 LESS_LESS expr_1','expr_1',3,'p_expr_1','bfinparse.py',1443),
  ('expr_1 -> expr_1 GREATER_GREATER expr_1','expr_1',3,'p_expr_1','bfinparse.py',1445),
  ('expr_1 -> expr_1 AMPERSAND expr_1','expr_1',3,'p_expr_1','bfinparse.py',1447),
  ('expr_1 -> expr_1 CARET expr_1','expr_1',3,'p_expr_1','bfinparse.py',1449),
  ('expr_1 -> expr_1 BAR expr_1','expr_1',3,'p_expr_1','bfinparse.py',1451),
  ('expr_1 -> eterm','expr_1',1,'p_expr_1','bfinparse.py',1453),
  ('empty -> <empty>','empty',0,'p_empty','bfinparse.py',1473),
]
